{"version":3,"file":"static/js/9104.488844a7.chunk.js","mappings":"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","sources":["../../../node_modules/react-feather/dist/icons/plus.js","components/AccountDrawer/MiniPortfolio/Pools/hooks.ts","graphql/thegraph/apollo.ts","utils/computeSurroundingTicks.ts","hooks/usePoolTickData.ts","hooks/usePools.ts","pages/NotFound/index.tsx","components/Charts/LiquidityChart/renderer.tsx","components/Charts/LiquidityChart/liquidity-bar-series.tsx","components/Charts/LiquidityChart/index.tsx","components/Pools/PoolDetails/ChartSection/index.tsx","components/Pools/PoolDetails/ChartSection/hooks.ts","components/Pools/PoolDetails/shared.ts","components/Pools/PoolDetails/PoolDetailsHeader.tsx","components/Pools/PoolDetails/PoolDetailsLink.tsx","components/Pools/PoolDetails/PoolDetailsStats.tsx","components/AccountDrawer/MiniPortfolio/Pools/getTokensAsync.ts","utils/arrays.ts","components/AccountDrawer/MiniPortfolio/Pools/cache.ts","components/AccountDrawer/MiniPortfolio/Pools/useMultiChainPositions.tsx","components/Pools/PoolDetails/PoolDetailsStatsButtons.tsx","components/Pools/PoolDetails/icons.tsx","components/Pools/PoolDetails/PoolDetailsPositionsTable.tsx","graphql/data/pools/usePoolTransactions.ts","components/Pools/PoolDetails/PoolDetailsTransactionsTable.tsx","components/Pools/PoolDetails/PoolDetailsTable.tsx","graphql/data/pools/usePoolData.ts","pages/PoolDetails/utils.ts","pages/PoolDetails/index.tsx","utils/currencyKey.ts"],"sourcesContent":["function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=_objectWithoutPropertiesLoose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}import React,{forwardRef}from\"react\";import PropTypes from\"prop-types\";var Plus=forwardRef((function(_ref,ref){var _ref$color=_ref.color,color=void 0===_ref$color?\"currentColor\":_ref$color,_ref$size=_ref.size,size=void 0===_ref$size?24:_ref$size,rest=_objectWithoutProperties(_ref,[\"color\",\"size\"]);return React.createElement(\"svg\",_extends({ref:ref,xmlns:\"http://www.w3.org/2000/svg\",width:size,height:size,viewBox:\"0 0 24 24\",fill:\"none\",stroke:color,strokeWidth:\"2\",strokeLinecap:\"round\",strokeLinejoin:\"round\"},rest),React.createElement(\"line\",{x1:\"12\",y1:\"5\",x2:\"12\",y2:\"19\"}),React.createElement(\"line\",{x1:\"5\",y1:\"12\",x2:\"19\",y2:\"12\"}))}));Plus.propTypes={color:PropTypes.string,size:PropTypes.oneOfType([PropTypes.string,PropTypes.number])},Plus.displayName=\"Plus\";export default Plus;","import {\n  ChainId,\n  MULTICALL_ADDRESSES,\n  Token,\n  NONFUNGIBLE_POSITION_MANAGER_ADDRESSES as V3NFT_ADDRESSES,\n} from '@uniswap/sdk-core'\nimport type { AddressMap } from '@uniswap/smart-order-router'\nimport NFTPositionManagerJSON from '@uniswap/v3-periphery/artifacts/contracts/NonfungiblePositionManager.sol/NonfungiblePositionManager.json'\nimport MulticallJSON from '@uniswap/v3-periphery/artifacts/contracts/lens/UniswapInterfaceMulticall.sol/UniswapInterfaceMulticall.json'\nimport { useWeb3React } from '@web3-react/core'\nimport { useIsSupportedChainIdCallback } from 'constants/chains'\nimport { RPC_PROVIDERS } from 'constants/providers'\nimport { BaseContract } from 'ethers/lib/ethers'\nimport { toContractInput } from 'graphql/data/util'\nimport useStablecoinPrice from 'hooks/useStablecoinPrice'\nimport { useMemo } from 'react'\nimport { NonfungiblePositionManager, UniswapInterfaceMulticall } from 'uniswap/src/abis/types/v3'\nimport {\n  ContractInput,\n  useUniswapPricesQuery,\n} from 'uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks'\nimport { getContract } from 'utilities/src/contracts/getContract'\nimport { CurrencyKey, currencyKey, currencyKeyFromGraphQL } from 'utils/currencyKey'\nimport { PositionInfo } from './cache'\n\ntype ContractMap<T extends BaseContract> = { [key: number]: T }\n\n// Constructs a chain-to-contract map, using the wallet's provider when available\nexport function useContractMultichain<T extends BaseContract>(\n  addressMap: AddressMap,\n  ABI: any,\n  chainIds?: ChainId[]\n): ContractMap<T> {\n  const { chainId: walletChainId, provider: walletProvider } = useWeb3React()\n  const isSupportedChain = useIsSupportedChainIdCallback()\n\n  return useMemo(() => {\n    const relevantChains =\n      chainIds ??\n      Object.keys(addressMap)\n        .map((chainId) => parseInt(chainId))\n        .filter((chainId) => isSupportedChain(chainId))\n\n    return relevantChains.reduce((acc: ContractMap<T>, chainId) => {\n      const provider =\n        walletProvider && walletChainId === chainId\n          ? walletProvider\n          : isSupportedChain(chainId)\n          ? RPC_PROVIDERS[chainId]\n          : undefined\n      if (provider) {\n        acc[chainId] = getContract(addressMap[chainId] ?? '', ABI, provider) as T\n      }\n      return acc\n    }, {})\n  }, [ABI, addressMap, chainIds, isSupportedChain, walletChainId, walletProvider])\n}\n\nexport function useV3ManagerContracts(chainIds: ChainId[]): ContractMap<NonfungiblePositionManager> {\n  return useContractMultichain<NonfungiblePositionManager>(V3NFT_ADDRESSES, NFTPositionManagerJSON.abi, chainIds)\n}\n\nexport function useInterfaceMulticallContracts(chainIds: ChainId[]): ContractMap<UniswapInterfaceMulticall> {\n  return useContractMultichain<UniswapInterfaceMulticall>(MULTICALL_ADDRESSES, MulticallJSON.abi, chainIds)\n}\n\ntype PriceMap = { [key: CurrencyKey]: number | undefined }\nexport function usePoolPriceMap(positions: PositionInfo[] | undefined) {\n  const contracts = useMemo(() => {\n    if (!positions || !positions.length) return []\n    // Avoids fetching duplicate tokens by placing in map\n    const contractMap = positions.reduce((acc: { [key: string]: ContractInput }, { pool: { token0, token1 } }) => {\n      acc[currencyKey(token0)] = toContractInput(token0)\n      acc[currencyKey(token1)] = toContractInput(token1)\n      return acc\n    }, {})\n    return Object.values(contractMap)\n  }, [positions])\n\n  const { data, loading } = useUniswapPricesQuery({ variables: { contracts }, skip: !contracts.length })\n\n  const priceMap = useMemo(\n    () =>\n      data?.tokens?.reduce((acc: PriceMap, current) => {\n        if (current) acc[currencyKeyFromGraphQL(current)] = current.project?.markets?.[0]?.price?.value\n        return acc\n      }, {}) ?? {},\n    [data?.tokens]\n  )\n\n  return { priceMap, pricesLoading: loading && !data }\n}\n\nfunction useFeeValue(token: Token, fee: number | undefined, queriedPrice: number | undefined) {\n  const stablecoinPrice = useStablecoinPrice(!queriedPrice ? token : undefined)\n  return useMemo(() => {\n    // Prefers gql price, as fetching stablecoinPrice will trigger multiple infura calls for each pool position\n    const price = queriedPrice ?? (stablecoinPrice ? parseFloat(stablecoinPrice.toSignificant()) : undefined)\n    const feeValue = fee && price ? fee * price : undefined\n\n    return [price, feeValue]\n  }, [fee, queriedPrice, stablecoinPrice])\n}\n\nexport function useFeeValues(position: PositionInfo) {\n  const [priceA, feeValueA] = useFeeValue(position.pool.token0, position.fees?.[0], position.prices?.[0])\n  const [priceB, feeValueB] = useFeeValue(position.pool.token1, position.fees?.[1], position.prices?.[1])\n\n  return { priceA, priceB, fees: (feeValueA || 0) + (feeValueB || 0) }\n}\n","import { ApolloClient, ApolloLink, concat, HttpLink, InMemoryCache, NormalizedCacheObject } from '@apollo/client'\nimport { ChainId } from '@uniswap/sdk-core'\nimport { CHAIN_SUBGRAPH_URL, isSupportedChainId } from 'constants/chains'\n\nimport store from '../../state/index'\n\nconst httpLink = new HttpLink({ uri: CHAIN_SUBGRAPH_URL[ChainId.MAINNET] })\n\n// This middleware will allow us to dynamically update the uri for the requests based off chainId\n// For more information: https://www.apollographql.com/docs/react/networking/advanced-http-networking/\nconst authMiddleware = new ApolloLink((operation, forward) => {\n  // add the authorization to the headers\n  const chainId = store.getState().application.chainId\n\n  operation.setContext(() => ({\n    uri:\n      isSupportedChainId(chainId) && CHAIN_SUBGRAPH_URL[chainId]\n        ? CHAIN_SUBGRAPH_URL[chainId]\n        : CHAIN_SUBGRAPH_URL[ChainId.MAINNET],\n  }))\n\n  return forward(operation)\n})\n\nexport const apolloClient = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: concat(authMiddleware, httpLink),\n})\n\nexport const chainToApolloClient: Record<number, ApolloClient<NormalizedCacheObject>> = Object.fromEntries(\n  Object.entries(CHAIN_SUBGRAPH_URL).map(([chainId, url]) => [\n    chainId,\n    new ApolloClient({\n      cache: new InMemoryCache(),\n      uri: url,\n    }),\n  ])\n)\n","import { Token } from '@uniswap/sdk-core'\nimport { tickToPrice } from '@uniswap/v3-sdk'\nimport { TickProcessed } from 'hooks/usePoolTickData'\nimport JSBI from 'jsbi'\n\nimport { Ticks } from '../graphql/thegraph/AllV3TicksQuery'\n\nconst PRICE_FIXED_DIGITS = 8\n\n// Computes the numSurroundingTicks above or below the active tick.\nexport default function computeSurroundingTicks(\n  token0: Token,\n  token1: Token,\n  activeTickProcessed: TickProcessed,\n  sortedTickData: Ticks,\n  pivot: number,\n  ascending: boolean\n): TickProcessed[] {\n  let previousTickProcessed: TickProcessed = {\n    ...activeTickProcessed,\n  }\n  // Iterate outwards (either up or down depending on direction) from the active tick,\n  // building active liquidity for every tick.\n  let processedTicks: TickProcessed[] = []\n  for (let i = pivot + (ascending ? 1 : -1); ascending ? i < sortedTickData.length : i >= 0; ascending ? i++ : i--) {\n    const tick = Number(sortedTickData[i].tick)\n    const sdkPrice = tickToPrice(token0, token1, tick)\n    const currentTickProcessed: TickProcessed = {\n      liquidityActive: previousTickProcessed.liquidityActive,\n      tick,\n      liquidityNet: JSBI.BigInt(sortedTickData[i].liquidityNet),\n      price0: sdkPrice.toFixed(PRICE_FIXED_DIGITS),\n      sdkPrice,\n    }\n\n    // Update the active liquidity.\n    // If we are iterating ascending and we found an initialized tick we immediately apply\n    // it to the current processed tick we are building.\n    // If we are iterating descending, we don't want to apply the net liquidity until the following tick.\n    if (ascending) {\n      currentTickProcessed.liquidityActive = JSBI.add(\n        previousTickProcessed.liquidityActive,\n        JSBI.BigInt(sortedTickData[i].liquidityNet)\n      )\n    } else if (!ascending && JSBI.notEqual(previousTickProcessed.liquidityNet, JSBI.BigInt(0))) {\n      // We are iterating descending, so look at the previous tick and apply any net liquidity.\n      currentTickProcessed.liquidityActive = JSBI.subtract(\n        previousTickProcessed.liquidityActive,\n        previousTickProcessed.liquidityNet\n      )\n    }\n\n    processedTicks.push(currentTickProcessed)\n    previousTickProcessed = currentTickProcessed\n  }\n\n  if (!ascending) {\n    processedTicks = processedTicks.reverse()\n  }\n\n  return processedTicks\n}\n","import { ChainId, Currency, Price, Token, V3_CORE_FACTORY_ADDRESSES } from '@uniswap/sdk-core'\nimport { FeeAmount, Pool, TICK_SPACINGS, tickToPrice } from '@uniswap/v3-sdk'\nimport { useWeb3React } from '@web3-react/core'\nimport { TickData, Ticks } from 'graphql/thegraph/AllV3TicksQuery'\nimport { useAllV3TicksQuery } from 'graphql/thegraph/__generated__/types-and-hooks'\nimport JSBI from 'jsbi'\nimport ms from 'ms'\nimport { useEffect, useMemo, useState } from 'react'\nimport computeSurroundingTicks from 'utils/computeSurroundingTicks'\n\nimport { chainToApolloClient } from 'graphql/thegraph/apollo'\nimport { PoolState, usePoolMultichain } from './usePools'\n\nconst PRICE_FIXED_DIGITS = 8\n\n// Tick with fields parsed to JSBIs, and active liquidity computed.\nexport interface TickProcessed {\n  tick: number\n  liquidityActive: JSBI\n  liquidityNet: JSBI\n  price0: string\n  sdkPrice: Price<Token, Token>\n}\n\nconst getActiveTick = (tickCurrent: number | undefined, feeAmount: FeeAmount | undefined) =>\n  tickCurrent && feeAmount ? Math.floor(tickCurrent / TICK_SPACINGS[feeAmount]) * TICK_SPACINGS[feeAmount] : undefined\n\nfunction useTicksFromSubgraph(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n  feeAmount: FeeAmount | undefined,\n  skip = 0,\n  chainId: ChainId\n) {\n  const apolloClient = chainToApolloClient[chainId]\n  const poolAddress =\n    currencyA && currencyB && feeAmount\n      ? Pool.getAddress(\n          currencyA?.wrapped,\n          currencyB?.wrapped,\n          feeAmount,\n          undefined,\n          chainId ? V3_CORE_FACTORY_ADDRESSES[chainId] : undefined\n        )\n      : undefined\n\n  return useAllV3TicksQuery({\n    variables: { poolAddress: poolAddress?.toLowerCase(), skip },\n    skip: !poolAddress,\n    pollInterval: ms(`30s`),\n    client: apolloClient,\n  })\n}\n\nconst MAX_THE_GRAPH_TICK_FETCH_VALUE = 1000\n// Fetches all ticks for a given pool\nfunction useAllV3Ticks(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n  feeAmount: FeeAmount | undefined,\n  chainId: ChainId\n): {\n  isLoading: boolean\n  error: unknown\n  ticks?: TickData[]\n} {\n  const [skipNumber, setSkipNumber] = useState(0)\n  const [subgraphTickData, setSubgraphTickData] = useState<Ticks>([])\n  const { data, error, loading: isLoading } = useTicksFromSubgraph(currencyA, currencyB, feeAmount, skipNumber, chainId)\n\n  useEffect(() => {\n    if (data?.ticks.length) {\n      setSubgraphTickData((tickData) => [...tickData, ...data.ticks])\n      if (data.ticks.length === MAX_THE_GRAPH_TICK_FETCH_VALUE) {\n        setSkipNumber((skipNumber) => skipNumber + MAX_THE_GRAPH_TICK_FETCH_VALUE)\n      }\n    }\n  }, [data?.ticks])\n\n  return {\n    isLoading: isLoading || data?.ticks.length === MAX_THE_GRAPH_TICK_FETCH_VALUE,\n    error,\n    ticks: subgraphTickData,\n  }\n}\n\nexport function usePoolActiveLiquidity(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n  feeAmount: FeeAmount | undefined,\n  chainId?: ChainId\n): {\n  isLoading: boolean\n  error: any\n  currentTick?: number\n  activeTick?: number\n  liquidity?: JSBI\n  sqrtPriceX96?: JSBI\n  data?: TickProcessed[]\n} {\n  const defaultChainId = useWeb3React().chainId ?? ChainId.MAINNET\n  const pool = usePoolMultichain(currencyA?.wrapped, currencyB?.wrapped, feeAmount, chainId ?? defaultChainId)\n  const liquidity = pool[1]?.liquidity\n  const sqrtPriceX96 = pool[1]?.sqrtRatioX96\n\n  const currentTick = pool[1]?.tickCurrent\n  // Find nearest valid tick for pool in case tick is not initialized.\n  const activeTick = useMemo(() => getActiveTick(currentTick, feeAmount), [currentTick, feeAmount])\n\n  const { isLoading, error, ticks } = useAllV3Ticks(currencyA, currencyB, feeAmount, chainId ?? defaultChainId)\n\n  return useMemo(() => {\n    if (\n      !currencyA ||\n      !currencyB ||\n      activeTick === undefined ||\n      pool[0] !== PoolState.EXISTS ||\n      !ticks ||\n      ticks.length === 0 ||\n      isLoading\n    ) {\n      return {\n        isLoading: isLoading || pool[0] === PoolState.LOADING,\n        error,\n        activeTick,\n        data: undefined,\n      }\n    }\n\n    const token0 = currencyA?.wrapped\n    const token1 = currencyB?.wrapped\n\n    // find where the active tick would be to partition the array\n    // if the active tick is initialized, the pivot will be an element\n    // if not, take the previous tick as pivot\n    const pivot = ticks.findIndex(({ tick }) => tick > activeTick) - 1\n\n    if (pivot < 0) {\n      // consider setting a local error\n      console.error('TickData pivot not found')\n      return {\n        isLoading,\n        error,\n        activeTick,\n        data: undefined,\n      }\n    }\n\n    const sdkPrice = tickToPrice(token0, token1, activeTick)\n    const activeTickProcessed: TickProcessed = {\n      liquidityActive: JSBI.BigInt(pool[1]?.liquidity ?? 0),\n      tick: activeTick,\n      liquidityNet: Number(ticks[pivot].tick) === activeTick ? JSBI.BigInt(ticks[pivot].liquidityNet) : JSBI.BigInt(0),\n      price0: sdkPrice.toFixed(PRICE_FIXED_DIGITS),\n      sdkPrice,\n    }\n\n    const subsequentTicks = computeSurroundingTicks(token0, token1, activeTickProcessed, ticks, pivot, true)\n\n    const previousTicks = computeSurroundingTicks(token0, token1, activeTickProcessed, ticks, pivot, false)\n\n    const ticksProcessed = previousTicks.concat(activeTickProcessed).concat(subsequentTicks)\n\n    return {\n      isLoading,\n      error,\n      currentTick,\n      activeTick,\n      liquidity,\n      sqrtPriceX96,\n      data: ticksProcessed,\n    }\n  }, [currencyA, currencyB, activeTick, pool, ticks, isLoading, error, currentTick, liquidity, sqrtPriceX96])\n}\n","import { Interface } from '@ethersproject/abi'\nimport { BigintIsh, ChainId, Currency, Token, V3_CORE_FACTORY_ADDRESSES } from '@uniswap/sdk-core'\nimport IUniswapV3PoolStateJSON from '@uniswap/v3-core/artifacts/contracts/interfaces/pool/IUniswapV3PoolState.sol/IUniswapV3PoolState.json'\nimport { FeeAmount, Pool, computePoolAddress } from '@uniswap/v3-sdk'\nimport { useContractMultichain } from 'components/AccountDrawer/MiniPortfolio/Pools/hooks'\nimport JSBI from 'jsbi'\nimport { useMultipleContractSingleData } from 'lib/hooks/multicall'\nimport { useEffect, useMemo, useRef } from 'react'\nimport { IUniswapV3PoolStateInterface } from 'uniswap/src/abis/types/v3/IUniswapV3PoolState'\nimport { UniswapV3Pool } from 'uniswap/src/abis/types/v3/UniswapV3Pool'\nimport { useChainId } from 'wagmi'\n\nconst POOL_STATE_INTERFACE = new Interface(IUniswapV3PoolStateJSON.abi) as IUniswapV3PoolStateInterface\n\n// Classes are expensive to instantiate, so this caches the recently instantiated pools.\n// This avoids re-instantiating pools as the other pools in the same request are loaded.\nclass PoolCache {\n  // Evict after 128 entries. Empirically, a swap uses 64 entries.\n  private static MAX_ENTRIES = 128\n\n  // These are FIFOs, using unshift/pop. This makes recent entries faster to find.\n  private static pools: Pool[] = []\n  private static addresses: { key: string; address: string }[] = []\n\n  static getPoolAddress(factoryAddress: string, tokenA: Token, tokenB: Token, fee: FeeAmount): string {\n    if (this.addresses.length > this.MAX_ENTRIES) {\n      this.addresses = this.addresses.slice(0, this.MAX_ENTRIES / 2)\n    }\n\n    const { address: addressA } = tokenA\n    const { address: addressB } = tokenB\n    const key = `${factoryAddress}:${addressA}:${addressB}:${fee.toString()}`\n    const found = this.addresses.find((address) => address.key === key)\n    if (found) return found.address\n\n    const address = {\n      key,\n      address: computePoolAddress({\n        factoryAddress,\n        tokenA,\n        tokenB,\n        fee,\n      }),\n    }\n    this.addresses.unshift(address)\n    return address.address\n  }\n\n  static getPool(\n    tokenA: Token,\n    tokenB: Token,\n    fee: FeeAmount,\n    sqrtPriceX96: BigintIsh,\n    liquidity: BigintIsh,\n    tick: number\n  ): Pool {\n    if (this.pools.length > this.MAX_ENTRIES) {\n      this.pools = this.pools.slice(0, this.MAX_ENTRIES / 2)\n    }\n\n    const found = this.pools.find(\n      (pool) =>\n        pool.token0 === tokenA &&\n        pool.token1 === tokenB &&\n        pool.fee === fee &&\n        JSBI.EQ(pool.sqrtRatioX96, sqrtPriceX96) &&\n        JSBI.EQ(pool.liquidity, liquidity) &&\n        pool.tickCurrent === tick\n    )\n    if (found) return found\n\n    const pool = new Pool(tokenA, tokenB, fee, sqrtPriceX96, liquidity, tick)\n    this.pools.unshift(pool)\n    return pool\n  }\n}\n\nexport enum PoolState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePools(\n  poolKeys: [Currency | undefined, Currency | undefined, FeeAmount | undefined][]\n): [PoolState, Pool | null][] {\n  const chainId = useChainId()\n\n  const poolTokens: ([Token, Token, FeeAmount] | undefined)[] = useMemo(() => {\n    if (!chainId) return new Array(poolKeys.length)\n\n    return poolKeys.map(([currencyA, currencyB, feeAmount]) => {\n      if (currencyA && currencyB && feeAmount) {\n        const tokenA = currencyA.wrapped\n        const tokenB = currencyB.wrapped\n        if (tokenA.equals(tokenB)) return undefined\n\n        return tokenA.sortsBefore(tokenB) ? [tokenA, tokenB, feeAmount] : [tokenB, tokenA, feeAmount]\n      }\n      return undefined\n    })\n  }, [chainId, poolKeys])\n\n  const poolAddresses: (string | undefined)[] = useMemo(() => {\n    const v3CoreFactoryAddress = chainId && V3_CORE_FACTORY_ADDRESSES[chainId]\n    if (!v3CoreFactoryAddress) return new Array(poolTokens.length)\n\n    return poolTokens.map((value) => value && PoolCache.getPoolAddress(v3CoreFactoryAddress, ...value))\n  }, [chainId, poolTokens])\n\n  const slot0s = useMultipleContractSingleData(poolAddresses, POOL_STATE_INTERFACE, 'slot0')\n  const liquidities = useMultipleContractSingleData(poolAddresses, POOL_STATE_INTERFACE, 'liquidity')\n\n  return useMemo(() => {\n    return poolKeys.map((_key, index) => {\n      const tokens = poolTokens[index]\n      if (!tokens) return [PoolState.INVALID, null]\n      const [token0, token1, fee] = tokens\n\n      if (!slot0s[index]) return [PoolState.INVALID, null]\n      const { result: slot0, loading: slot0Loading, valid: slot0Valid } = slot0s[index]\n\n      if (!liquidities[index]) return [PoolState.INVALID, null]\n      const { result: liquidity, loading: liquidityLoading, valid: liquidityValid } = liquidities[index]\n\n      if (!tokens || !slot0Valid || !liquidityValid) return [PoolState.INVALID, null]\n      if (slot0Loading || liquidityLoading) return [PoolState.LOADING, null]\n      if (!slot0 || !liquidity) return [PoolState.NOT_EXISTS, null]\n      if (!slot0.sqrtPriceX96 || slot0.sqrtPriceX96.eq(0)) return [PoolState.NOT_EXISTS, null]\n\n      try {\n        const pool = PoolCache.getPool(token0, token1, fee, slot0.sqrtPriceX96, liquidity[0], slot0.tick)\n        return [PoolState.EXISTS, pool]\n      } catch (error) {\n        console.error('Error when constructing the pool', error)\n        return [PoolState.NOT_EXISTS, null]\n      }\n    })\n  }, [liquidities, poolKeys, slot0s, poolTokens])\n}\n\nexport function usePool(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n  feeAmount: FeeAmount | undefined\n): [PoolState, Pool | null] {\n  const poolKeys: [Currency | undefined, Currency | undefined, FeeAmount | undefined][] = useMemo(\n    () => [[currencyA, currencyB, feeAmount]],\n    [currencyA, currencyB, feeAmount]\n  )\n\n  return usePools(poolKeys)[0]\n}\n\nexport function usePoolMultichain(\n  tokenA: Token | undefined,\n  tokenB: Token | undefined,\n  fee: number | undefined,\n  chainId: ChainId\n): [PoolState, Pool | null] {\n  const poolData = useRef<[PoolState, Pool | null]>([PoolState.LOADING, null])\n  const poolAddress =\n    tokenA && tokenB && fee\n      ? PoolCache.getPoolAddress(V3_CORE_FACTORY_ADDRESSES[chainId], tokenA, tokenB, fee)\n      : undefined\n\n  const contractMap = useMemo(() => (poolAddress ? { [chainId]: poolAddress } : {}), [chainId, poolAddress])\n  const contract = useContractMultichain<UniswapV3Pool>(contractMap, IUniswapV3PoolStateJSON.abi)[chainId]\n\n  useEffect(() => {\n    async function getPool() {\n      try {\n        if (!tokenA || !tokenB || !fee || !poolAddress || !contract) {\n          poolData.current = [PoolState.INVALID, null]\n          return\n        }\n\n        const slot0 = await contract.slot0()\n        const liquidity = await contract.liquidity()\n        poolData.current = [PoolState.NOT_EXISTS, null]\n\n        const pool = new Pool(tokenA, tokenB, fee, slot0.sqrtPriceX96.toString(), liquidity.toString(), slot0.tick)\n        poolData.current = [PoolState.EXISTS, pool]\n      } catch (e) {\n        poolData.current = [PoolState.INVALID, null]\n      }\n    }\n    getPool()\n  }, [contract, fee, poolAddress, tokenA, tokenB])\n  return poolData.current\n}\n","import { InterfacePageName } from '@uniswap/analytics-events'\nimport { Trace } from 'analytics'\nimport { SmallButtonPrimary } from 'components/Button'\nimport { useIsMobile } from 'hooks/screenSize'\nimport { Trans } from 'i18n'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { ThemedText } from 'theme/components'\nimport { useIsDarkMode } from 'theme/components/ThemeToggle'\n\nimport darkImage from '../../assets/images/404-page-dark.png'\nimport lightImage from '../../assets/images/404-page-light.png'\n\nconst Image = styled.img`\n  max-width: 510px;\n  width: 100%;\n  padding: 0 75px;\n`\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nconst Header = styled(Container)`\n  gap: 30px;\n`\n\nconst PageWrapper = styled(Container)`\n  flex: 1;\n  justify-content: center;\n  gap: 50px;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint.md}px) {\n    justify-content: space-between;\n    padding-top: 64px;\n  }\n`\n\nexport default function NotFound() {\n  const isDarkMode = useIsDarkMode()\n  const isMobile = useIsMobile()\n\n  const Title = isMobile ? ThemedText.LargeHeader : ThemedText.Hero\n  const Paragraph = isMobile ? ThemedText.HeadlineMedium : ThemedText.HeadlineLarge\n\n  return (\n    <PageWrapper>\n      <Trace page={InterfacePageName.NOT_FOUND} shouldLogImpression>\n        <Header>\n          <Container>\n            <Title>404</Title>\n            <Paragraph color=\"neutral2\">\n              <Trans>Page not found!</Trans>\n            </Paragraph>\n          </Container>\n          <Image src={isDarkMode ? darkImage : lightImage} alt=\"Liluni\" />\n        </Header>\n        <SmallButtonPrimary as={Link} to=\"/\">\n          <Trans>Oops, take me back to Swap</Trans>\n        </SmallButtonPrimary>\n      </Trace>\n    </PageWrapper>\n  )\n}\n","import { BitmapCoordinatesRenderingScope, CanvasRenderingTarget2D } from 'fancy-canvas'\nimport {\n  CustomData,\n  CustomSeriesOptions,\n  ICustomSeriesPaneRenderer,\n  PaneRendererCustomData,\n  PriceToCoordinateConverter,\n  Time,\n  UTCTimestamp,\n} from 'lightweight-charts'\nimport { ColumnPosition, calculateColumnPositionsInPlace, positionsBox } from '../VolumeChart/utils'\n\nexport interface LiquidityBarData extends CustomData {\n  time: UTCTimestamp\n  tick: number\n  price0: string\n  price1: string\n  liquidity: number\n  amount0Locked: number\n  amount1Locked: number\n}\n\ninterface LiquidityBarItem {\n  x: number\n  y: number\n  column?: ColumnPosition\n  tick: number\n}\n\nexport interface LiquidityBarProps {\n  tokenAColor: string\n  tokenBColor: string\n  highlightColor: string\n  activeTick?: number\n  activeTickProgress?: number\n}\n\nexport interface LiquidityBarSeriesOptions extends CustomSeriesOptions, LiquidityBarProps {\n  hoveredTick?: number\n}\n\nexport class LiquidityBarSeriesRenderer<TData extends LiquidityBarData> implements ICustomSeriesPaneRenderer {\n  _data: PaneRendererCustomData<Time, TData> | null = null\n  _options: LiquidityBarProps & Partial<LiquidityBarSeriesOptions>\n\n  constructor(props: LiquidityBarProps) {\n    this._options = props\n    this._options.hoveredTick = props.activeTick\n  }\n\n  draw(target: CanvasRenderingTarget2D, priceConverter: PriceToCoordinateConverter): void {\n    target.useBitmapCoordinateSpace((scope) => this._drawImpl(scope, priceConverter))\n  }\n\n  update(data: PaneRendererCustomData<Time, TData>, options: LiquidityBarSeriesOptions): void {\n    this._data = data\n    this._options = { ...this._options, ...options }\n  }\n\n  _drawImpl(renderingScope: BitmapCoordinatesRenderingScope, priceToCoordinate: PriceToCoordinateConverter): void {\n    if (\n      this._data === null ||\n      this._data.bars.length === 0 ||\n      this._data.visibleRange === null ||\n      this._options === null\n    ) {\n      return\n    }\n    const ctx = renderingScope.context\n    const bars: LiquidityBarItem[] = this._data.bars.map((bar) => {\n      return {\n        x: bar.x,\n        y: priceToCoordinate(bar.originalData.liquidity) ?? 0,\n        tick: bar.originalData.tick,\n      }\n    })\n    calculateColumnPositionsInPlace(\n      bars,\n      this._data.barSpacing,\n      renderingScope.horizontalPixelRatio,\n      this._data.visibleRange.from,\n      this._data.visibleRange.to\n    )\n    const zeroY = priceToCoordinate(0) ?? 0\n    ctx.fillStyle = this._options.tokenAColor\n\n    for (let i = this._data.visibleRange.from; i < this._data.visibleRange.to; i++) {\n      const stack = bars[i]\n      const column = stack.column\n      const isCurrentTick = this._options.activeTick === stack.tick\n      const isHoveredTick = this._options.hoveredTick === stack.tick\n\n      if (!column) return\n      const width = Math.min(\n        Math.max(renderingScope.horizontalPixelRatio, column.right - column.left),\n        this._data.barSpacing * renderingScope.horizontalPixelRatio\n      )\n\n      // Create margin to make visual bars thin\n      const margin = 0.3 * width\n      const widthWithMargin = width - margin * 2\n      const totalBox = positionsBox(zeroY, stack.y, renderingScope.verticalPixelRatio)\n\n      if (isHoveredTick) {\n        const highlightOffset = 0.3 * ctx.canvas.height\n        const highlightLength = ctx.canvas.height - highlightOffset\n\n        // Draw background highlight bar\n        ctx.fillStyle = this._options.highlightColor\n        ctx.beginPath()\n        ctx.roundRect(column.left + margin, highlightOffset, widthWithMargin, highlightLength, 8)\n        ctx.fill()\n\n        ctx.globalAlpha = 1\n      } else {\n        // Reduce opacity of non-hovered bars\n        ctx.globalAlpha = 0.4\n      }\n\n      // Select color based on where current bar is in relation to activeTick\n      if (isCurrentTick) {\n        ctx.fillStyle = this._options.tokenBColor\n      } else if (this._options.activeTick === undefined) {\n        ctx.fillStyle = this._options.color ?? 'white'\n      } else if (this._options.activeTick > stack.tick) {\n        ctx.fillStyle = this._options.tokenBColor\n      } else if (this._options.activeTick < stack.tick) {\n        ctx.fillStyle = this._options.tokenAColor\n      }\n\n      // Draw bar\n      ctx.beginPath()\n      ctx.roundRect(column.left + margin, totalBox.position, widthWithMargin, totalBox.length, 8)\n      ctx.fill()\n\n      // Reset opacity\n      ctx.globalAlpha = 1\n\n      if (isCurrentTick && this._options.activeTickProgress) {\n        // Draw token A color on top of token B color for active range\n        ctx.globalCompositeOperation = 'source-atop'\n\n        // Token A color takes up activeTickProgress % of the bar height\n        const activeRangeAdjustedHeight = totalBox.length * this._options.activeTickProgress\n        const activeRangeAdjustedPosition = totalBox.position + (totalBox.length - activeRangeAdjustedHeight)\n\n        ctx.fillStyle = this._options.tokenAColor\n        ctx.beginPath()\n        ctx.fillRect(column.left, activeRangeAdjustedPosition, width, activeRangeAdjustedHeight)\n\n        // Reset composite operation to default\n        ctx.globalCompositeOperation = 'source-over'\n      }\n    }\n  }\n}\n","import {\n  customSeriesDefaultOptions,\n  CustomSeriesPricePlotValues,\n  ICustomSeriesPaneView,\n  PaneRendererCustomData,\n  Time,\n  WhitespaceData,\n} from 'lightweight-charts'\n\nimport { LiquidityBarData, LiquidityBarProps, LiquidityBarSeriesOptions, LiquidityBarSeriesRenderer } from './renderer'\n\nexport class LiquidityBarSeries<TData extends LiquidityBarData>\n  implements ICustomSeriesPaneView<Time, TData, LiquidityBarSeriesOptions>\n{\n  _renderer: LiquidityBarSeriesRenderer<TData>\n  _tokenAColor: string\n  _tokenBColor: string\n  _highlightColor: string\n\n  constructor(props: LiquidityBarProps) {\n    this._tokenAColor = props.tokenAColor\n    this._renderer = new LiquidityBarSeriesRenderer(props)\n    this._tokenBColor = props.tokenBColor\n    this._highlightColor = props.highlightColor\n  }\n\n  priceValueBuilder(plotRow: TData): CustomSeriesPricePlotValues {\n    return [0, plotRow.liquidity]\n  }\n\n  isWhitespace(data: TData | WhitespaceData): data is WhitespaceData {\n    return !(data as TData).liquidity\n  }\n\n  renderer(): LiquidityBarSeriesRenderer<TData> {\n    return this._renderer\n  }\n\n  update(data: PaneRendererCustomData<Time, TData>, options: LiquidityBarSeriesOptions): void {\n    this._renderer.update(data, options)\n  }\n\n  defaultOptions() {\n    return {\n      ...customSeriesDefaultOptions,\n      tokenAColor: this._tokenAColor,\n      tokenBColor: this._tokenBColor,\n      highlightColor: this._highlightColor,\n    }\n  }\n}\n","import { ChartHoverData, ChartModel, ChartModelParams } from 'components/Charts/ChartModel'\nimport { ISeriesApi, UTCTimestamp } from 'lightweight-charts'\n\nimport { ChainId, CurrencyAmount, Token } from '@uniswap/sdk-core'\nimport { FeeAmount, Pool, TICK_SPACINGS, TickMath, tickToPrice } from '@uniswap/v3-sdk'\nimport { BigNumber } from 'ethers/lib/ethers'\nimport { TickProcessed, usePoolActiveLiquidity } from 'hooks/usePoolTickData'\nimport JSBI from 'jsbi'\nimport { useEffect, useState } from 'react'\nimport { NumberType, useFormatter } from 'utils/formatNumbers'\nimport { LiquidityBarSeries } from './liquidity-bar-series'\nimport { LiquidityBarData, LiquidityBarProps, LiquidityBarSeriesOptions } from './renderer'\n\ninterface LiquidityBarChartModelParams extends ChartModelParams<LiquidityBarData>, LiquidityBarProps {}\n\nexport class LiquidityBarChartModel extends ChartModel<LiquidityBarData> {\n  protected series: ISeriesApi<'Custom'>\n  private activeTick?: number\n\n  constructor(chartDiv: HTMLDivElement, params: LiquidityBarChartModelParams) {\n    super(chartDiv, params)\n    this.series = this.api.addCustomSeries(new LiquidityBarSeries(params))\n\n    this.series.setData(this.data)\n\n    this.updateOptions(params)\n    this.fitContent()\n  }\n\n  updateOptions(params: LiquidityBarChartModelParams) {\n    super.updateOptions(params, {\n      localization: {\n        locale: params.locale,\n      },\n      rightPriceScale: {\n        visible: false,\n        borderVisible: false,\n        scaleMargins: {\n          top: 0.35,\n          bottom: 0,\n        },\n        autoScale: true,\n      },\n      timeScale: {\n        visible: false,\n        fixLeftEdge: true,\n        fixRightEdge: true,\n        borderVisible: false,\n      },\n      crosshair: {\n        horzLine: {\n          visible: false,\n          labelVisible: false,\n        },\n        vertLine: {\n          visible: false,\n          labelVisible: false,\n        },\n      },\n      grid: {\n        vertLines: {\n          visible: false,\n        },\n        horzLines: {\n          visible: false,\n        },\n      },\n    })\n    const { data, activeTick } = params\n\n    this.activeTick = activeTick\n\n    if (this.data !== data) {\n      this.data = data\n      this.series.setData(data)\n      this.fitContent()\n    }\n\n    this.series.applyOptions({\n      priceFormat: {\n        type: 'volume',\n      },\n      priceLineVisible: false,\n      lastValueVisible: false,\n    })\n\n    this.series.applyOptions(params)\n  }\n\n  override onSeriesHover(hoverData?: ChartHoverData<LiquidityBarData>) {\n    super.onSeriesHover(hoverData)\n    const updatedOptions: Partial<LiquidityBarSeriesOptions> = { hoveredTick: hoverData?.item.tick ?? this.activeTick }\n    this.series.applyOptions(updatedOptions)\n  }\n\n  activeTickIndex() {\n    return this.data.findIndex((bar) => bar.tick === this.activeTick)\n  }\n\n  fitContent() {\n    const length = this.data.length\n    const activeTickIndex = this.data.findIndex((bar) => bar.tick === this.activeTick)\n    const midPoint = activeTickIndex !== -1 ? activeTickIndex : length / 2\n\n    this.api\n      .timeScale()\n      .setVisibleLogicalRange({ from: Math.max(midPoint - 50, 0), to: Math.min(midPoint + 50, this.data.length) })\n  }\n}\n\nconst MAX_UINT128 = BigNumber.from(2).pow(128).sub(1)\n\nfunction maxAmount(token: Token) {\n  return CurrencyAmount.fromRawAmount(token, MAX_UINT128.toString())\n}\n\n/** Calculates tokens locked in the active tick range based on the current tick */\nasync function calculateActiveRangeTokensLocked(\n  token0: Token,\n  token1: Token,\n  feeTier: FeeAmount,\n  tick: TickProcessed,\n  poolData: {\n    sqrtPriceX96?: JSBI\n    currentTick?: number\n    liquidity?: JSBI\n  }\n): Promise<{ amount0Locked: number; amount1Locked: number } | undefined> {\n  if (!poolData.currentTick || !poolData.sqrtPriceX96 || !poolData.liquidity) {\n    return undefined\n  }\n\n  try {\n    const liqGross = JSBI.greaterThan(tick.liquidityNet, JSBI.BigInt(0))\n      ? tick.liquidityNet\n      : JSBI.multiply(tick.liquidityNet, JSBI.BigInt('-1'))\n\n    const mockTicks = [\n      {\n        index: tick.tick,\n        liquidityGross: liqGross,\n        liquidityNet: JSBI.multiply(tick.liquidityNet, JSBI.BigInt('-1')),\n      },\n      {\n        index: tick.tick + TICK_SPACINGS[feeTier],\n        liquidityGross: liqGross,\n        liquidityNet: tick.liquidityNet,\n      },\n    ]\n    // Initialize pool containing only the active range\n    const pool1 = new Pool(\n      token0,\n      token1,\n      feeTier,\n      poolData.sqrtPriceX96,\n      tick.liquidityActive,\n      poolData.currentTick,\n      mockTicks\n    )\n    // Calculate amount of token0 that would need to be swapped to reach the bottom of the range\n    const bottomOfRangePrice = TickMath.getSqrtRatioAtTick(mockTicks[0].index)\n    const token1Amount = (await pool1.getOutputAmount(maxAmount(token0), bottomOfRangePrice))[0]\n    const amount0Locked = parseFloat(tick.sdkPrice.invert().quote(token1Amount).toExact())\n\n    // Calculate amount of token1 that would need to be swapped to reach the top of the range\n    const topOfRangePrice = TickMath.getSqrtRatioAtTick(mockTicks[1].index)\n    const token0Amount = (await pool1.getOutputAmount(maxAmount(token1), topOfRangePrice))[0]\n    const amount1Locked = parseFloat(tick.sdkPrice.quote(token0Amount).toExact())\n\n    return { amount0Locked, amount1Locked }\n  } catch {\n    return { amount0Locked: 0, amount1Locked: 0 }\n  }\n}\n\n/** Returns amounts of tokens locked in the given tick. Reference: https://docs.uniswap.org/sdk/v3/guides/advanced/active-liquidity */\nasync function calculateTokensLocked(\n  token0: Token,\n  token1: Token,\n  feeTier: FeeAmount,\n  tick: TickProcessed\n): Promise<{ amount0Locked: number; amount1Locked: number }> {\n  try {\n    const tickSpacing = TICK_SPACINGS[feeTier]\n    const liqGross = JSBI.greaterThan(tick.liquidityNet, JSBI.BigInt(0))\n      ? tick.liquidityNet\n      : JSBI.multiply(tick.liquidityNet, JSBI.BigInt('-1'))\n\n    const sqrtPriceX96 = TickMath.getSqrtRatioAtTick(tick.tick)\n    const mockTicks = [\n      {\n        index: tick.tick,\n        liquidityGross: liqGross,\n        liquidityNet: JSBI.multiply(tick.liquidityNet, JSBI.BigInt('-1')),\n      },\n      {\n        index: tick.tick + TICK_SPACINGS[feeTier],\n        liquidityGross: liqGross,\n        liquidityNet: tick.liquidityNet,\n      },\n    ]\n\n    // Initialize pool containing only the current range\n    const pool = new Pool(token0, token1, Number(feeTier), sqrtPriceX96, tick.liquidityActive, tick.tick, mockTicks)\n\n    // Calculate token amounts that would need to be swapped to reach the next range\n    const nextSqrtX96 = TickMath.getSqrtRatioAtTick(tick.tick - tickSpacing)\n    const maxAmountToken0 = CurrencyAmount.fromRawAmount(token0, MAX_UINT128.toString())\n    const token1Amount = (await pool.getOutputAmount(maxAmountToken0, nextSqrtX96))[0]\n    const amount0Locked = parseFloat(tick.sdkPrice.invert().quote(token1Amount).toExact())\n    const amount1Locked = parseFloat(token1Amount.toExact())\n\n    return { amount0Locked, amount1Locked }\n  } catch {\n    return { amount0Locked: 0, amount1Locked: 0 }\n  }\n}\n\nexport function useLiquidityBarData({\n  tokenA,\n  tokenB,\n  feeTier,\n  isReversed,\n  chainId,\n}: {\n  tokenA: Token\n  tokenB: Token\n  feeTier: FeeAmount\n  isReversed: boolean\n  chainId: ChainId\n}) {\n  const { formatNumber, formatPrice } = useFormatter()\n  const activePoolData = usePoolActiveLiquidity(tokenA, tokenB, feeTier, chainId)\n\n  const [tickData, setTickData] = useState<{\n    barData: LiquidityBarData[]\n    activeRangeData?: LiquidityBarData\n    activeRangePercentage?: number\n  }>()\n\n  useEffect(() => {\n    async function formatData() {\n      const ticksProcessed = activePoolData.data\n      if (!ticksProcessed) return\n\n      let activeRangePercentage: number | undefined = undefined\n      let activeRangeIndex: number | undefined = undefined\n\n      const barData: LiquidityBarData[] = []\n      for (let index = 0; index < ticksProcessed.length; index++) {\n        const t = ticksProcessed[index]\n\n        // Lightweight-charts require the x-axis to be time; a fake time base on index is provided\n        const fakeTime = (isReversed ? index * 1000 : (ticksProcessed.length - index) * 1000) as UTCTimestamp\n        const isActive = activePoolData.activeTick === t.tick\n\n        let price0 = t.sdkPrice\n        let price1 = t.sdkPrice.invert()\n\n        if (isActive && activePoolData.activeTick && activePoolData.currentTick) {\n          activeRangeIndex = index\n          activeRangePercentage = (activePoolData.currentTick - t.tick) / TICK_SPACINGS[feeTier]\n\n          price0 = tickToPrice(tokenA, tokenB, t.tick)\n          price1 = price0.invert()\n        }\n\n        const { amount0Locked, amount1Locked } = await calculateTokensLocked(tokenA, tokenB, feeTier, t)\n\n        barData.push({\n          tick: t.tick,\n          liquidity: parseFloat(t.liquidityActive.toString()),\n          price0: formatPrice({ price: price0, type: NumberType.SwapDetailsAmount }),\n          price1: formatPrice({ price: price1, type: NumberType.SwapDetailsAmount }),\n          time: fakeTime,\n          amount0Locked,\n          amount1Locked,\n        })\n      }\n\n      // offset the values to line off bars with TVL used to swap across bar\n      barData?.map((entry, i) => {\n        if (i > 0) {\n          barData[i - 1].amount0Locked = entry.amount0Locked\n          barData[i - 1].amount1Locked = entry.amount1Locked\n        }\n      })\n\n      const activeRangeData = activeRangeIndex !== undefined ? barData[activeRangeIndex] : undefined\n      // For active range, adjust amounts locked to adjust for where current tick/price is within the range\n      if (activeRangeIndex !== undefined && activeRangeData) {\n        const activeTickTvl = await calculateActiveRangeTokensLocked(\n          tokenA,\n          tokenB,\n          feeTier,\n          ticksProcessed[activeRangeIndex],\n          activePoolData\n        )\n        barData[activeRangeIndex] = { ...activeRangeData, ...activeTickTvl }\n      }\n\n      // Reverse data so that token0 is on the left by default\n      if (!isReversed) {\n        barData.reverse()\n      }\n\n      // TODO(WEB-3672): investigate why negative/inaccurate liquidity values that are appearing from computeSurroundingTicks\n      setTickData({ barData: barData.filter((t) => t.liquidity > 0), activeRangeData, activeRangePercentage })\n    }\n\n    formatData()\n  }, [activePoolData, tokenA, tokenB, formatNumber, formatPrice, isReversed, feeTier])\n\n  return { tickData, activeTick: activePoolData.activeTick, loading: activePoolData.isLoading || !tickData }\n}\n","import { ChainId, CurrencyAmount, Token } from '@uniswap/sdk-core'\nimport { FeeAmount } from '@uniswap/v3-sdk'\nimport { ChartHeader } from 'components/Charts/ChartHeader'\nimport { Chart } from 'components/Charts/ChartModel'\nimport { LiquidityBarChartModel, useLiquidityBarData } from 'components/Charts/LiquidityChart'\nimport { LiquidityBarData } from 'components/Charts/LiquidityChart/renderer'\nimport { ChartSkeleton } from 'components/Charts/LoadingState'\nimport { PriceChartData, PriceChartDelta, PriceChartModel } from 'components/Charts/PriceChart'\nimport { refitChartContentAtom } from 'components/Charts/TimeSelector'\nimport { VolumeChart } from 'components/Charts/VolumeChart'\nimport { SingleHistogramData } from 'components/Charts/VolumeChart/renderer'\nimport { ChartType, PriceChartType } from 'components/Charts/utils'\nimport PillMultiToggle from 'components/Toggle/PillMultiToggle'\nimport { ChartActionsContainer, DEFAULT_PILL_TIME_SELECTOR_OPTIONS } from 'components/Tokens/TokenDetails/ChartSection'\nimport { ChartTypeDropdown } from 'components/Tokens/TokenDetails/ChartSection/ChartTypeSelector'\nimport { ChartQueryResult, DataQuality } from 'components/Tokens/TokenDetails/ChartSection/util'\nimport { LoadingChart } from 'components/Tokens/TokenDetails/Skeleton'\nimport { DISPLAYS, TimePeriodDisplay, getTimePeriodFromDisplay } from 'components/Tokens/TokenTable/TimeSelector'\nimport { PoolData } from 'graphql/data/pools/usePoolData'\nimport { TimePeriod, gqlToCurrency, supportedChainIdFromGQLChain, toHistoryDuration } from 'graphql/data/util'\nimport useStablecoinPrice from 'hooks/useStablecoinPrice'\nimport { Trans, t } from 'i18n'\nimport { useAtomValue } from 'jotai/utils'\nimport { useMemo, useState } from 'react'\nimport styled, { useTheme } from 'styled-components'\nimport { EllipsisStyle, ThemedText } from 'theme/components'\nimport { textFadeIn } from 'theme/styles'\nimport { Chain, ProtocolVersion } from 'uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks'\nimport { NumberType, useFormatter } from 'utils/formatNumbers'\nimport { usePDPPriceChartData, usePDPVolumeChartData } from './hooks'\n\nconst PDP_CHART_HEIGHT_PX = 356\nconst PDP_CHART_SELECTOR_OPTIONS = [ChartType.VOLUME, ChartType.PRICE, ChartType.LIQUIDITY] as const\nexport type PoolsDetailsChartType = (typeof PDP_CHART_SELECTOR_OPTIONS)[number]\n\nconst TimePeriodSelectorContainer = styled.div`\n  @media only screen and (max-width: ${({ theme }) => theme.breakpoint.sm}px) {\n    width: 100%;\n  }\n`\nconst ChartTypeSelectorContainer = styled.div`\n  display: flex;\n  gap: 8px;\n\n  @media only screen and (max-width: ${({ theme }) => theme.breakpoint.sm}px) {\n    width: 100%;\n  }\n`\n\nconst StyledChart: typeof Chart = styled(Chart)`\n  height: ${PDP_CHART_HEIGHT_PX}px;\n`\n\nconst PDPChartTypeSelector = ({\n  chartType,\n  onChartTypeChange,\n}: {\n  chartType: PoolsDetailsChartType\n  onChartTypeChange: (c: PoolsDetailsChartType) => void\n}) => (\n  <ChartTypeSelectorContainer>\n    <ChartTypeDropdown\n      options={PDP_CHART_SELECTOR_OPTIONS}\n      currentChartType={chartType}\n      onSelectOption={onChartTypeChange}\n    />\n  </ChartTypeSelectorContainer>\n)\n\ninterface ChartSectionProps {\n  poolData?: PoolData\n  loading: boolean\n  isReversed: boolean\n  chain?: Chain\n}\n\n/** Represents a variety of query result shapes, discriminated via additional `chartType` field. */\ntype ActiveQuery =\n  | ChartQueryResult<PriceChartData, ChartType.PRICE>\n  | ChartQueryResult<SingleHistogramData, ChartType.VOLUME>\n  | ChartQueryResult<undefined, ChartType.LIQUIDITY>\n\ntype TDPChartState = {\n  timePeriod: TimePeriod\n  setTimePeriod: (timePeriod: TimePeriod) => void\n  setChartType: (chartType: PoolsDetailsChartType) => void\n  activeQuery: ActiveQuery\n  dataQuality?: DataQuality\n}\n\nfunction usePDPChartState(\n  poolData: PoolData | undefined,\n  tokenA: Token | undefined,\n  tokenB: Token | undefined,\n  isReversed: boolean,\n  chain: Chain,\n  protocolVersion: ProtocolVersion\n): TDPChartState {\n  const [timePeriod, setTimePeriod] = useState<TimePeriod>(TimePeriod.DAY)\n  const [chartType, setChartType] = useState<PoolsDetailsChartType>(ChartType.VOLUME)\n\n  const isV3 = protocolVersion === ProtocolVersion.V3\n  const variables = { address: poolData?.address ?? '', chain, duration: toHistoryDuration(timePeriod), isV3 }\n\n  const priceQuery = usePDPPriceChartData(variables, poolData, tokenA, tokenB, isReversed)\n  const volumeQuery = usePDPVolumeChartData(variables)\n\n  return useMemo(() => {\n    const activeQuery = (() => {\n      switch (chartType) {\n        case ChartType.PRICE:\n          return priceQuery\n        case ChartType.VOLUME:\n          return volumeQuery\n        case ChartType.LIQUIDITY:\n          return {\n            chartType: ChartType.LIQUIDITY as const,\n            entries: [],\n            loading: false,\n            dataQuality: DataQuality.VALID,\n          }\n      }\n    })()\n\n    return {\n      timePeriod,\n      setTimePeriod,\n      setChartType,\n      activeQuery,\n    }\n  }, [chartType, volumeQuery, priceQuery, timePeriod])\n}\n\nexport default function ChartSection(props: ChartSectionProps) {\n  const [currencyA, currencyB] = [\n    props.poolData?.token0 && gqlToCurrency(props.poolData.token0),\n    props.poolData?.token1 && gqlToCurrency(props.poolData.token1),\n  ]\n\n  const { setChartType, timePeriod, setTimePeriod, activeQuery } = usePDPChartState(\n    props.poolData,\n    currencyA?.wrapped,\n    currencyB?.wrapped,\n    props.isReversed,\n    props.chain ?? Chain.Ethereum,\n    props.poolData?.protocolVersion ?? ProtocolVersion.V3\n  )\n\n  const refitChartContent = useAtomValue(refitChartContentAtom)\n\n  // TODO(WEB-3740): Integrate BE tick query, remove special casing for liquidity chart\n  const loading = props.loading || (activeQuery.chartType !== ChartType.LIQUIDITY ? activeQuery?.loading : false)\n\n  const ChartBody = (() => {\n    if (!currencyA || !currencyB || !props.poolData || !props.chain) {\n      return <ChartSkeleton type={activeQuery.chartType} height={PDP_CHART_HEIGHT_PX} />\n    }\n\n    const selectedChartProps = {\n      ...props,\n      feeTier: Number(props.poolData.feeTier),\n      height: PDP_CHART_HEIGHT_PX,\n      timePeriod,\n      tokenA: currencyA.wrapped,\n      tokenB: currencyB.wrapped,\n      chainId: supportedChainIdFromGQLChain(props.chain) ?? ChainId.MAINNET,\n    }\n\n    // TODO(WEB-3740): Integrate BE tick query, remove special casing for liquidity chart\n    if (activeQuery.chartType === ChartType.LIQUIDITY) {\n      return <LiquidityChart {...selectedChartProps} />\n    }\n    if (activeQuery.dataQuality === DataQuality.INVALID || !currencyA || !currencyB) {\n      const errorText = loading ? undefined : <Trans>Unable to display historical data for the current pool.</Trans>\n      return <ChartSkeleton type={activeQuery.chartType} height={PDP_CHART_HEIGHT_PX} errorText={errorText} />\n    }\n\n    const stale = activeQuery.dataQuality === DataQuality.STALE\n\n    switch (activeQuery.chartType) {\n      case ChartType.PRICE:\n        return <PriceChart {...selectedChartProps} data={activeQuery.entries} stale={stale} />\n      case ChartType.VOLUME:\n        return <VolumeChart {...selectedChartProps} data={activeQuery.entries} stale={stale} />\n    }\n  })()\n\n  // BE does not support hourly price data for pools\n  const filteredTimeOptions = useMemo(() => {\n    if (activeQuery.chartType === ChartType.PRICE) {\n      return DEFAULT_PILL_TIME_SELECTOR_OPTIONS.filter((option) => option.value !== TimePeriodDisplay.HOUR)\n    }\n    return DEFAULT_PILL_TIME_SELECTOR_OPTIONS\n  }, [activeQuery.chartType])\n\n  return (\n    <div data-testid=\"pdp-chart-container\">\n      {ChartBody}\n      <ChartActionsContainer>\n        <PDPChartTypeSelector chartType={activeQuery.chartType} onChartTypeChange={setChartType} />\n        {activeQuery.chartType !== ChartType.LIQUIDITY && (\n          <TimePeriodSelectorContainer>\n            <PillMultiToggle\n              options={filteredTimeOptions}\n              currentSelected={DISPLAYS[timePeriod]}\n              onSelectOption={(option) => {\n                const time = getTimePeriodFromDisplay(option as TimePeriodDisplay)\n                if (time === timePeriod) {\n                  refitChartContent?.()\n                } else {\n                  setTimePeriod(time)\n                }\n              }}\n            />\n          </TimePeriodSelectorContainer>\n        )}\n      </ChartActionsContainer>\n    </div>\n  )\n}\n\nconst PriceDisplayContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  column-gap: 4px;\n`\n\nconst ChartPriceText = styled(ThemedText.HeadlineMedium)`\n  ${EllipsisStyle}\n  @media screen and (max-width: ${({ theme }) => theme.breakpoint.sm}px) {\n    font-size: 24px !important;\n    line-height: 32px !important;\n  }\n`\n\nfunction PriceChart({\n  tokenA,\n  tokenB,\n  isReversed,\n  data,\n  stale,\n}: {\n  tokenA: Token\n  tokenB: Token\n  isReversed: boolean\n  data: PriceChartData[]\n  stale: boolean\n}) {\n  const { formatCurrencyAmount, formatPrice } = useFormatter()\n  const [primaryToken, referenceToken] = isReversed ? [tokenB, tokenA] : [tokenA, tokenB]\n\n  const params = useMemo(() => ({ data, stale, type: PriceChartType.LINE }), [data, stale])\n\n  const stablecoinPrice = useStablecoinPrice(primaryToken)\n\n  const lastPrice = data[data.length - 1]\n  return (\n    <StyledChart Model={PriceChartModel} params={params}>\n      {(crosshairData) => {\n        const displayValue = crosshairData ?? lastPrice\n        const currencyBAmountRaw = Math.floor(\n          (displayValue.value ?? displayValue.close) * 10 ** referenceToken.decimals\n        )\n        const priceDisplay = (\n          <PriceDisplayContainer>\n            <ChartPriceText>\n              {`1 ${primaryToken.symbol} = ${formatCurrencyAmount({\n                amount: CurrencyAmount.fromRawAmount(referenceToken, currencyBAmountRaw),\n              })} \n            ${referenceToken.symbol}`}\n            </ChartPriceText>\n            <ChartPriceText color=\"neutral2\">\n              {stablecoinPrice ? '(' + formatPrice({ price: stablecoinPrice }) + ')' : ''}\n            </ChartPriceText>\n          </PriceDisplayContainer>\n        )\n        return (\n          <ChartHeader\n            value={priceDisplay}\n            additionalFields={<PriceChartDelta startingPrice={data[0]} endingPrice={displayValue} />}\n            valueFormatterType={NumberType.FiatTokenPrice}\n            time={crosshairData?.time}\n          />\n        )\n      }}\n    </StyledChart>\n  )\n}\n\nconst FadeInHeading = styled(ThemedText.H1Medium)`\n  ${textFadeIn};\n  line-height: 32px;\n`\nconst FadeInSubheader = styled(ThemedText.SubHeader)`\n  ${textFadeIn}\n`\n\nfunction LiquidityTooltipDisplay({\n  data,\n  tokenADescriptor,\n  tokenBDescriptor,\n  currentTick,\n}: {\n  data: LiquidityBarData\n  tokenADescriptor: string\n  tokenBDescriptor: string\n  currentTick?: number\n}) {\n  const { formatNumber } = useFormatter()\n  if (!currentTick) return null\n\n  const displayValue0 =\n    data.tick >= currentTick\n      ? formatNumber({\n          input: data.amount0Locked,\n          type: NumberType.TokenQuantityStats,\n        })\n      : 0\n  const displayValue1 =\n    data.tick <= currentTick\n      ? formatNumber({\n          input: data.amount1Locked,\n          type: NumberType.TokenQuantityStats,\n        })\n      : 0\n\n  return (\n    <>\n      <ThemedText.BodySmall>\n        {t(`{{token}} liquidity: {{name}}`, { token: tokenADescriptor, name: displayValue0 })}\n      </ThemedText.BodySmall>\n      <ThemedText.BodySmall>\n        {t(`{{token}} liquidity: {{name}}`, { token: tokenBDescriptor, name: displayValue1 })}\n      </ThemedText.BodySmall>\n    </>\n  )\n}\n\nfunction LiquidityChart({\n  tokenA,\n  tokenB,\n  feeTier,\n  isReversed,\n  chainId,\n}: {\n  tokenA: Token\n  tokenB: Token\n  feeTier: FeeAmount\n  isReversed: boolean\n  chainId: ChainId\n}) {\n  const tokenADescriptor = tokenA.symbol ?? tokenA.name ?? t`Token A`\n  const tokenBDescriptor = tokenB.symbol ?? tokenB.name ?? t`Token B`\n\n  const { tickData, activeTick, loading } = useLiquidityBarData({\n    tokenA,\n    tokenB,\n    feeTier,\n    isReversed,\n    chainId,\n  })\n\n  const theme = useTheme()\n  const params = useMemo(() => {\n    return {\n      data: tickData?.barData ?? [],\n      tokenAColor: isReversed ? theme.token1 : theme.token0,\n      tokenBColor: isReversed ? theme.token0 : theme.token1,\n      highlightColor: theme.surface3,\n      activeTick,\n      activeTickProgress: tickData?.activeRangePercentage,\n    }\n  }, [activeTick, isReversed, theme, tickData])\n\n  if (loading) return <LoadingChart />\n\n  return (\n    <StyledChart\n      Model={LiquidityBarChartModel}\n      params={params}\n      TooltipBody={\n        // TODO(WEB-3628): investigate potential off-by-one or subgraph issues causing calculated TVL issues on 1 bip pools\n        feeTier !== FeeAmount.LOWEST\n          ? ({ data }: { data: LiquidityBarData }) => (\n              <LiquidityTooltipDisplay\n                data={data}\n                tokenADescriptor={tokenADescriptor}\n                tokenBDescriptor={tokenBDescriptor}\n                currentTick={tickData?.activeRangeData?.tick}\n              />\n            )\n          : undefined\n      }\n    >\n      {(crosshair) => {\n        const displayPoint = crosshair ?? tickData?.activeRangeData\n        const display = (\n          <div>\n            <FadeInHeading>{`1 ${tokenADescriptor} = ${displayPoint?.price0} ${tokenBDescriptor}`}</FadeInHeading>\n            <FadeInHeading>{`1 ${tokenBDescriptor} = ${displayPoint?.price1} ${tokenADescriptor}`}</FadeInHeading>\n            {displayPoint && displayPoint.tick === activeTick && (\n              <FadeInSubheader color=\"neutral2\" paddingTop=\"4px\">\n                <Trans>Active tick range</Trans>\n              </FadeInSubheader>\n            )}\n          </div>\n        )\n        return <ChartHeader value={display} />\n      }}\n    </StyledChart>\n  )\n}\n","import { Token } from '@uniswap/sdk-core'\nimport { PriceChartData } from 'components/Charts/PriceChart'\nimport { SingleHistogramData } from 'components/Charts/VolumeChart/renderer'\nimport { ChartType } from 'components/Charts/utils'\nimport {\n  ChartQueryResult,\n  DataQuality,\n  checkDataQuality,\n  withUTCTimestamp,\n} from 'components/Tokens/TokenDetails/ChartSection/util'\nimport { PoolData } from 'graphql/data/pools/usePoolData'\nimport { UTCTimestamp } from 'lightweight-charts'\nimport { useMemo } from 'react'\nimport {\n  Chain,\n  HistoryDuration,\n  TimestampedAmount,\n  TimestampedPoolPrice,\n  usePoolPriceHistoryQuery,\n  usePoolVolumeHistoryQuery,\n} from 'uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks'\n\ntype PDPChartQueryVars = { address: string; chain: Chain; duration: HistoryDuration; isV3: boolean }\nexport function usePDPPriceChartData(\n  variables: PDPChartQueryVars,\n  poolData: PoolData | undefined,\n  tokenA: Token | undefined,\n  tokenB: Token | undefined,\n  isReversed: boolean\n): ChartQueryResult<PriceChartData, ChartType.PRICE> {\n  const { data, loading } = usePoolPriceHistoryQuery({ variables })\n\n  return useMemo(() => {\n    const { priceHistory } = data?.v2Pair ?? data?.v3Pool ?? {}\n    const referenceToken = isReversed ? tokenA : tokenB\n\n    const entries =\n      priceHistory\n        ?.filter((price): price is TimestampedPoolPrice => price !== null)\n        .map((price) => {\n          const value =\n            poolData?.token0.address === referenceToken?.address.toLowerCase() ? price?.token0Price : price?.token1Price\n\n          return {\n            time: price.timestamp as UTCTimestamp,\n            value,\n            open: value,\n            high: value,\n            low: value,\n            close: value,\n          }\n        }) ?? []\n\n    // TODO(WEB-3769): Append current price based on active tick to entries\n    /* const dataQuality = checkDataQuality(entries, ChartType.PRICE, variables.duration) */\n    const dataQuality = loading || !priceHistory ? DataQuality.INVALID : DataQuality.VALID\n\n    return { chartType: ChartType.PRICE, entries, loading, dataQuality }\n  }, [data?.v2Pair, data?.v3Pool, isReversed, loading, poolData?.token0.address, tokenA, tokenB])\n}\n\nexport function usePDPVolumeChartData(\n  variables: PDPChartQueryVars\n): ChartQueryResult<SingleHistogramData, ChartType.VOLUME> {\n  const { data, loading } = usePoolVolumeHistoryQuery({ variables })\n\n  return useMemo(() => {\n    const { historicalVolume } = data?.v2Pair ?? data?.v3Pool ?? {}\n    const entries =\n      historicalVolume?.filter((amt): amt is TimestampedAmount => amt !== null).map(withUTCTimestamp) ?? []\n\n    const dataQuality = checkDataQuality(entries, ChartType.VOLUME, variables.duration)\n\n    return { chartType: ChartType.VOLUME, entries, loading, dataQuality }\n  }, [data?.v2Pair, data?.v3Pool, loading, variables.duration])\n}\n","import { LoadingBubble } from 'components/Tokens/loading'\nimport styled from 'styled-components'\n\nexport const DetailBubble = styled(LoadingBubble)<{ $height?: number; $width?: number }>`\n  height: ${({ $height }) => ($height ? `${$height}px` : '16px')};\n  width: ${({ $width }) => ($width ? `${$width}px` : '80px')};\n`\n\nexport const SmallDetailBubble = styled(LoadingBubble)`\n  height: 20px;\n  width: 20px;\n  border-radius: 100px;\n`\n","import { ChainId, Percent } from '@uniswap/sdk-core'\nimport { BreadcrumbNavContainer, BreadcrumbNavLink, CurrentPageBreadcrumb } from 'components/BreadcrumbNav'\nimport Column from 'components/Column'\nimport { DropdownSelector } from 'components/DropdownSelector'\nimport { EtherscanLogo } from 'components/Icons/Etherscan'\nimport { ExplorerIcon } from 'components/Icons/ExplorerIcon'\nimport { ReverseArrow } from 'components/Icons/ReverseArrow'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport Row from 'components/Row'\nimport ShareButton from 'components/Tokens/TokenDetails/ShareButton'\nimport { StyledExternalLink } from 'components/Tokens/TokenDetails/TokenDetailsHeader'\nimport { ActionButtonStyle, ActionMenuFlyoutStyle } from 'components/Tokens/TokenDetails/shared'\nimport { LoadingBubble } from 'components/Tokens/loading'\nimport { BIPS_BASE } from 'constants/misc'\nimport { NATIVE_CHAIN_ID } from 'constants/tokens'\nimport { getTokenDetailsURL, gqlToCurrency } from 'graphql/data/util'\nimport { useScreenSize } from 'hooks/screenSize'\nimport { useOnClickOutside } from 'hooks/useOnClickOutside'\nimport { Trans, t } from 'i18n'\nimport React, { useMemo, useReducer, useRef } from 'react'\nimport { ChevronRight, ExternalLink as ExternalLinkIcon } from 'react-feather'\nimport { Link } from 'react-router-dom'\nimport styled, { css, useTheme } from 'styled-components'\nimport { ClickableStyle, EllipsisStyle, ThemedText } from 'theme/components'\nimport { textFadeIn } from 'theme/styles'\nimport { ProtocolVersion, Token } from 'uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks'\nimport { shortenAddress } from 'utilities/src/addresses'\nimport { ExplorerDataType, getExplorerLink } from 'utils/getExplorerLink'\n\nimport { DoubleCurrencyAndChainLogo } from 'components/DoubleLogo'\nimport { SupportedInterfaceChainId, chainIdToBackendChain } from 'constants/chains'\nimport { useFormatter } from 'utils/formatNumbers'\nimport { DetailBubble } from './shared'\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: 'flex-start';\n  width: 100%;\n  ${textFadeIn};\n  animation-duration: ${({ theme }) => theme.transition.duration.medium};\n`\n\nconst Badge = styled(ThemedText.LabelMicro)`\n  background: ${({ theme }) => theme.surface2};\n  padding: 2px 6px;\n  border-radius: 4px;\n`\n\nconst ToggleReverseArrows = styled(ReverseArrow)`\n  ${ClickableStyle}\n  fill: ${({ theme }) => theme.neutral2};\n`\n\nconst IconBubble = styled(LoadingBubble)`\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n`\n\ninterface PoolDetailsBreadcrumbProps {\n  chainId?: SupportedInterfaceChainId\n  poolAddress?: string\n  token0?: Token\n  token1?: Token\n  loading?: boolean\n}\n\nexport function PoolDetailsBreadcrumb({ chainId, poolAddress, token0, token1, loading }: PoolDetailsBreadcrumbProps) {\n  const chainName = chainIdToBackendChain({ chainId, withFallback: true })\n  const exploreOrigin = `/explore/${chainName.toLowerCase()}`\n  const poolsOrigin = `/explore/pools/${chainName.toLowerCase()}`\n\n  return (\n    <BreadcrumbNavContainer aria-label=\"breadcrumb-nav\">\n      <BreadcrumbNavLink to={exploreOrigin}>\n        <Trans>Explore</Trans> <ChevronRight size={14} />\n      </BreadcrumbNavLink>\n      <BreadcrumbNavLink to={poolsOrigin}>\n        <Trans>Pools</Trans> <ChevronRight size={14} />\n      </BreadcrumbNavLink>\n      {loading || !poolAddress ? (\n        <DetailBubble $width={200} />\n      ) : (\n        <CurrentPageBreadcrumb address={poolAddress} poolName={`${token0?.symbol} / ${token1?.symbol}`} />\n      )}\n    </BreadcrumbNavContainer>\n  )\n}\n\nconst StyledPoolDetailsTitle = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 12px;\n  width: max-content;\n  align-items: center;\n`\n\nconst PoolName = styled(ThemedText.HeadlineMedium)`\n  font-size: 24px !important;\n\n  @media screen and (max-width: ${({ theme }) => theme.breakpoint.sm}px) {\n    font-size: 18px !important;\n    line-height: 24px !important;\n  }\n`\n\nconst PoolDetailsTitle = ({\n  token0,\n  token1,\n  chainId,\n  feeTier,\n  protocolVersion,\n  toggleReversed,\n}: {\n  token0?: Token\n  token1?: Token\n  chainId?: SupportedInterfaceChainId\n  feeTier?: number\n  protocolVersion?: ProtocolVersion\n  toggleReversed: React.DispatchWithoutAction\n}) => {\n  const { formatPercent } = useFormatter()\n  const feePercent = feeTier && formatPercent(new Percent(feeTier, BIPS_BASE * 100))\n  return (\n    <StyledPoolDetailsTitle>\n      <div>\n        <PoolName>\n          <StyledLink\n            to={getTokenDetailsURL({\n              address: token0?.address,\n              chain: chainIdToBackendChain({ chainId, withFallback: true }),\n            })}\n          >\n            {token0?.symbol}\n          </StyledLink>\n          &nbsp;/&nbsp;\n          <StyledLink\n            to={getTokenDetailsURL({\n              address: token1?.address,\n              chain: chainIdToBackendChain({ chainId, withFallback: true }),\n            })}\n          >\n            {token1?.symbol}\n          </StyledLink>\n        </PoolName>\n      </div>\n      {protocolVersion === ProtocolVersion.V2 && <Badge>v2</Badge>}\n      {!!feePercent && <Badge>{feePercent}</Badge>}\n      <ToggleReverseArrows data-testid=\"toggle-tokens-reverse-arrows\" onClick={toggleReversed} />\n    </StyledPoolDetailsTitle>\n  )\n}\n\nconst ContractsDropdownRowContainer = styled(Row)`\n  align-items: center;\n  text-decoration: none;\n  cursor: pointer;\n  gap: 12px;\n  padding: 10px 8px;\n  border-radius: 8px;\n  &:hover {\n    background: ${({ theme }) => theme.surface3};\n  }\n`\n\nconst ContractsDropdownRow = ({\n  address,\n  chainId,\n  tokens,\n}: {\n  address?: string\n  chainId?: number\n  tokens: (Token | undefined)[]\n}) => {\n  const theme = useTheme()\n  const currency = tokens[0] && gqlToCurrency(tokens[0])\n  const isPool = tokens.length === 2\n  const currencies = isPool && tokens[1] ? [currency, gqlToCurrency(tokens[1])] : [currency]\n  const isNative = address === NATIVE_CHAIN_ID\n  const explorerUrl =\n    chainId &&\n    address &&\n    getExplorerLink(\n      chainId,\n      address,\n      isNative ? ExplorerDataType.NATIVE : isPool ? ExplorerDataType.ADDRESS : ExplorerDataType.TOKEN\n    )\n\n  if (!chainId || !explorerUrl) {\n    return (\n      <ContractsDropdownRowContainer>\n        <DetailBubble $width={117} />\n      </ContractsDropdownRowContainer>\n    )\n  }\n\n  return (\n    <StyledExternalLink href={explorerUrl}>\n      <ContractsDropdownRowContainer>\n        <Row gap=\"sm\">\n          {isPool ? (\n            <DoubleCurrencyAndChainLogo chainId={chainId} currencies={currencies} size={24} />\n          ) : (\n            <CurrencyLogo currency={currency} size={24} />\n          )}\n          <ThemedText.BodyPrimary>{isPool ? <Trans>Pool</Trans> : tokens[0]?.symbol}</ThemedText.BodyPrimary>\n          <ThemedText.BodySecondary>{shortenAddress(address)}</ThemedText.BodySecondary>\n        </Row>\n        <ExternalLinkIcon size=\"16px\" stroke={theme.neutral2} />\n      </ContractsDropdownRowContainer>\n    </StyledExternalLink>\n  )\n}\n\nconst ContractsModalContainer = css`\n  ${ActionMenuFlyoutStyle}\n  min-width: 235px;\n  border-radius: 16px;\n  ${EllipsisStyle}\n`\n\nconst PoolDetailsHeaderActions = ({\n  chainId,\n  poolAddress,\n  poolName,\n  token0,\n  token1,\n}: {\n  chainId?: number\n  poolAddress?: string\n  poolName: string\n  token0?: Token\n  token1?: Token\n}) => {\n  const theme = useTheme()\n\n  const [contractsModalIsOpen, toggleContractsModal] = useReducer((s) => !s, false)\n  const contractsRef = useRef<HTMLDivElement>(null)\n  useOnClickOutside(contractsRef, contractsModalIsOpen ? toggleContractsModal : undefined)\n\n  return (\n    <Row width=\"max-content\" justify=\"flex-end\" gap=\"sm\">\n      <div style={{ position: 'relative' }} ref={contractsRef}>\n        <DropdownSelector\n          isOpen={contractsModalIsOpen}\n          toggleOpen={toggleContractsModal}\n          menuLabel={\n            chainId === ChainId.MAINNET ? (\n              <EtherscanLogo width=\"18px\" height=\"18px\" fill={theme.neutral1} />\n            ) : (\n              <ExplorerIcon width=\"18px\" height=\"18px\" fill={theme.neutral1} />\n            )\n          }\n          internalMenuItems={\n            <>\n              <ContractsDropdownRow address={poolAddress} chainId={chainId} tokens={[token0, token1]} />\n              <ContractsDropdownRow address={token0?.address} chainId={chainId} tokens={[token0]} />\n              <ContractsDropdownRow address={token1?.address} chainId={chainId} tokens={[token1]} />\n            </>\n          }\n          tooltipText={t`Explorers`}\n          hideChevron\n          buttonCss={ActionButtonStyle}\n          menuFlyoutCss={ContractsModalContainer}\n        />\n      </div>\n      <ShareButton name={poolName} />\n    </Row>\n  )\n}\n\nconst StyledLink = styled(Link)`\n  color: ${({ theme }) => theme.neutral1};\n  text-decoration: none;\n  ${ClickableStyle}\n`\n\ninterface PoolDetailsHeaderProps {\n  chainId?: number\n  poolAddress?: string\n  token0?: Token\n  token1?: Token\n  feeTier?: number\n  protocolVersion?: ProtocolVersion\n  toggleReversed: React.DispatchWithoutAction\n  loading?: boolean\n}\n\nexport function PoolDetailsHeader({\n  chainId,\n  poolAddress,\n  token0,\n  token1,\n  feeTier,\n  protocolVersion,\n  toggleReversed,\n  loading,\n}: PoolDetailsHeaderProps) {\n  const screenSize = useScreenSize()\n  const shouldColumnBreak = !screenSize['sm']\n  const poolName = `${token0?.symbol} / ${token1?.symbol}`\n  const currencies = useMemo(\n    () => (token0 && token1 ? [gqlToCurrency(token0), gqlToCurrency(token1)] : []),\n    [token0, token1]\n  )\n\n  if (loading) {\n    return (\n      <HeaderContainer data-testid=\"pdp-header-loading-skeleton\">\n        {shouldColumnBreak ? (\n          <Column gap=\"sm\" style={{ width: '100%' }}>\n            <IconBubble />\n            <DetailBubble $height={40} $width={137} />\n          </Column>\n        ) : (\n          <Row gap=\"sm\">\n            <IconBubble />\n            <DetailBubble $height={40} $width={137} />\n          </Row>\n        )}\n      </HeaderContainer>\n    )\n  }\n  return (\n    <HeaderContainer>\n      {shouldColumnBreak ? (\n        <Column gap=\"sm\" style={{ width: '100%' }}>\n          <Row gap=\"md\" justify=\"space-between\">\n            {chainId && (\n              <DoubleCurrencyAndChainLogo data-testid=\"double-token-logo\" chainId={chainId} currencies={currencies} />\n            )}\n            <PoolDetailsHeaderActions\n              chainId={chainId}\n              poolAddress={poolAddress}\n              poolName={poolName}\n              token0={token0}\n              token1={token1}\n            />\n          </Row>\n          <PoolDetailsTitle\n            token0={token0}\n            token1={token1}\n            chainId={chainId}\n            feeTier={feeTier}\n            protocolVersion={protocolVersion}\n            toggleReversed={toggleReversed}\n          />\n        </Column>\n      ) : (\n        <>\n          <Row gap=\"md\">\n            {chainId && (\n              <DoubleCurrencyAndChainLogo data-testid=\"double-token-logo\" chainId={chainId} currencies={currencies} />\n            )}\n            <PoolDetailsTitle\n              token0={token0}\n              token1={token1}\n              chainId={chainId}\n              feeTier={feeTier}\n              protocolVersion={protocolVersion}\n              toggleReversed={toggleReversed}\n            />\n          </Row>\n          <PoolDetailsHeaderActions\n            chainId={chainId}\n            poolAddress={poolAddress}\n            poolName={poolName}\n            token0={token0}\n            token1={token1}\n          />\n        </>\n      )}\n    </HeaderContainer>\n  )\n}\n","import { ChainId } from '@uniswap/sdk-core'\nimport { EtherscanLogo } from 'components/Icons/Etherscan'\nimport { ExplorerIcon } from 'components/Icons/ExplorerIcon'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport Row from 'components/Row'\nimport Tooltip, { TooltipSize } from 'components/Tooltip'\nimport { getTokenDetailsURL, gqlToCurrency } from 'graphql/data/util'\nimport useCopyClipboard from 'hooks/useCopyClipboard'\nimport { Trans, t } from 'i18n'\nimport { useCallback, useState } from 'react'\nimport { ChevronRight, Copy } from 'react-feather'\nimport { useNavigate } from 'react-router-dom'\nimport styled, { useTheme } from 'styled-components'\nimport { BREAKPOINTS } from 'theme'\nimport { ClickableStyle, EllipsisStyle, ExternalLink, ThemedText } from 'theme/components'\nimport { Token } from 'uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks'\nimport { isAddress, shortenAddress } from 'utilities/src/addresses'\nimport { ExplorerDataType, getExplorerLink } from 'utils/getExplorerLink'\n\nimport { DoubleCurrencyAndChainLogo } from 'components/DoubleLogo'\nimport { SupportedInterfaceChainId, chainIdToBackendChain } from 'constants/chains'\nimport { NATIVE_CHAIN_ID } from 'constants/tokens'\nimport { DetailBubble, SmallDetailBubble } from './shared'\n\nconst TokenName = styled(ThemedText.BodyPrimary)`\n  display: none;\n\n  @media (max-width: ${BREAKPOINTS.lg}px) and (min-width: ${BREAKPOINTS.xs}px) {\n    display: block;\n  }\n  ${EllipsisStyle}\n`\n\nconst TokenTextWrapper = styled(Row)<{ isClickable?: boolean }>`\n  gap: 8px;\n  margin-right: 12px;\n  ${EllipsisStyle}\n  ${({ isClickable }) => isClickable && ClickableStyle}\n`\n\nconst SymbolText = styled(ThemedText.BodyPrimary)`\n  flex-shrink: 0;\n\n  @media (max-width: ${BREAKPOINTS.lg}px) and (min-width: ${BREAKPOINTS.xs}px) {\n    color: ${({ theme }) => theme.neutral2};\n  }\n`\n\nconst CopyAddress = styled(Row)`\n  gap: 8px;\n  padding: 8px 12px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.surface3};\n  font-size: 14px;\n  font-weight: 535;\n  line-height: 16px;\n  width: max-content;\n  flex-shrink: 0;\n  ${ClickableStyle}\n`\nconst StyledCopyIcon = styled(Copy)`\n  width: 16px;\n  height: 16px;\n  color: ${({ theme }) => theme.neutral2};\n  flex-shrink: 0;\n`\n\nconst ExplorerWrapper = styled.div`\n  padding: 8px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.surface3};\n  display: flex;\n  ${ClickableStyle}\n`\n\nconst ButtonsRow = styled(Row)`\n  gap: 8px;\n  flex-shrink: 0;\n  width: max-content;\n`\n\ninterface PoolDetailsLinkProps {\n  address?: string\n  chainId?: SupportedInterfaceChainId\n  tokens: (Token | undefined)[]\n  loading?: boolean\n}\n\nexport function PoolDetailsLink({ address, chainId, tokens, loading }: PoolDetailsLinkProps) {\n  const theme = useTheme()\n  const isNative = address === NATIVE_CHAIN_ID\n  const currency = tokens[0] && gqlToCurrency(tokens[0])\n  const [isCopied, setCopied] = useCopyClipboard()\n  const copy = useCallback(() => {\n    const checksummedAddress = isAddress(address)\n    checksummedAddress && setCopied(checksummedAddress)\n  }, [address, setCopied])\n\n  const isPool = tokens.length === 2\n  const currencies = isPool && tokens[1] ? [currency, gqlToCurrency(tokens[1])] : [currency]\n  const explorerUrl =\n    address &&\n    chainId &&\n    getExplorerLink(\n      chainId,\n      address,\n      isNative ? ExplorerDataType.NATIVE : isPool ? ExplorerDataType.ADDRESS : ExplorerDataType.TOKEN\n    )\n\n  const navigate = useNavigate()\n  const chainName = chainIdToBackendChain({ chainId, withFallback: true })\n  const handleTokenTextClick = useCallback(() => {\n    if (!isPool) {\n      navigate(getTokenDetailsURL({ address: tokens[0]?.address, chain: chainName }))\n    }\n  }, [navigate, tokens, isPool, chainName])\n\n  const [truncateAddress, setTruncateAddress] = useState<false | 'start' | 'both'>(false)\n  const onTextRender = useCallback(\n    (textRef: HTMLElement) => {\n      if (textRef) {\n        const hasOverflow = textRef.clientWidth < textRef.scrollWidth\n        if (hasOverflow) {\n          setTruncateAddress((prev) => (prev ? 'both' : 'start'))\n        }\n      }\n    },\n    // This callback must run after it sets truncateAddress to 'start' to see if it needs to 'both'.\n    // It checks if the textRef has overflow, and sets truncateAddress accordingly to avoid it.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [truncateAddress]\n  )\n\n  if (loading || !address || !chainId) {\n    return (\n      <Row gap=\"8px\" padding=\"6px 0px\">\n        <SmallDetailBubble />\n        <DetailBubble $width={117} />\n      </Row>\n    )\n  }\n\n  return (\n    <Row align=\"space-between\">\n      <TokenTextWrapper\n        data-testid={\n          isPool ? `pdp-pool-logo-${tokens[0]?.symbol}-${tokens[1]?.symbol}` : `pdp-token-logo-${tokens[0]?.symbol}`\n        }\n        isClickable={!isPool}\n        onClick={handleTokenTextClick}\n        ref={onTextRender}\n      >\n        {isPool ? (\n          <DoubleCurrencyAndChainLogo chainId={chainId} currencies={currencies} size={20} />\n        ) : (\n          <CurrencyLogo currency={currency} size={20} />\n        )}\n        <TokenName>{isPool ? <Trans>Pool</Trans> : tokens[0]?.name}</TokenName>\n        <SymbolText>\n          {isPool ? (\n            `${tokens[0]?.symbol} / ${tokens[1]?.symbol}`\n          ) : (\n            <Row gap=\"4px\">\n              {tokens[0]?.symbol} <ChevronRight size={16} color={theme.neutral2} />\n            </Row>\n          )}\n        </SymbolText>\n      </TokenTextWrapper>\n      <ButtonsRow>\n        {!isNative && (\n          <Tooltip placement=\"bottom\" size={TooltipSize.Max} show={isCopied} text={t`Copied`}>\n            <CopyAddress data-testid={`copy-address-${address}`} onClick={copy}>\n              {shortenAddress(address, truncateAddress ? 2 : undefined, truncateAddress === 'both' ? 2 : undefined)}\n              <StyledCopyIcon />\n            </CopyAddress>\n          </Tooltip>\n        )}\n        {explorerUrl && (\n          <ExternalLink href={explorerUrl} data-testid={`explorer-url-${explorerUrl}`}>\n            <ExplorerWrapper>\n              {chainId === ChainId.MAINNET ? (\n                <EtherscanLogo width=\"16px\" height=\"16px\" fill={theme.neutral1} />\n              ) : (\n                <ExplorerIcon width=\"16px\" height=\"16px\" fill={theme.neutral1} />\n              )}\n            </ExplorerWrapper>\n          </ExternalLink>\n        )}\n      </ButtonsRow>\n    </Row>\n  )\n}\n","import { Currency } from '@uniswap/sdk-core'\nimport Column from 'components/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport Row from 'components/Row'\nimport { DeltaArrow } from 'components/Tokens/TokenDetails/Delta'\nimport { LoadingBubble } from 'components/Tokens/loading'\nimport { getTokenDetailsURL, unwrapToken } from 'graphql/data/util'\nimport { useCurrency } from 'hooks/Tokens'\nimport { useScreenSize } from 'hooks/screenSize'\nimport { Trans } from 'i18n'\nimport { ReactNode, useMemo } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Text } from 'rebass'\nimport styled, { css, useTheme } from 'styled-components'\nimport { BREAKPOINTS } from 'theme'\nimport { ClickableStyle, ThemedText } from 'theme/components'\nimport { Token } from 'uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks'\nimport { NumberType, useFormatter } from 'utils/formatNumbers'\n\nimport { SupportedInterfaceChainId, chainIdToBackendChain } from 'constants/chains'\nimport { NATIVE_CHAIN_ID, nativeOnChain } from 'constants/tokens'\nimport { PoolData } from 'graphql/data/pools/usePoolData'\nimport { DetailBubble } from './shared'\n\nconst HeaderText = styled(Text)`\n  font-weight: 485;\n  font-size: 24px;\n  line-height: 36px;\n  @media (max-width: ${BREAKPOINTS.lg}px) {\n    width: 100%;\n  }\n`\n\nconst StatsWrapper = styled(Column)<{ loaded?: boolean }>`\n  gap: 24px;\n  padding: 20px;\n  border-radius: 20px;\n  background: ${({ theme }) => theme.surface2};\n  width: 100%;\n  z-index: 1;\n  margin-top: ${({ loaded }) => loaded && '-24px'};\n\n  @media (max-width: ${BREAKPOINTS.lg}px) {\n    flex-direction: row;\n    background: transparent;\n    flex-wrap: wrap;\n    padding: 20px 0px;\n    justify-content: space-between;\n    margin-top: 0px;\n  }\n`\n\nconst StatItemColumn = styled(Column)`\n  gap: 8px;\n  flex: 1;\n  min-width: 180px;\n\n  @media (max-width: ${BREAKPOINTS.sm}px) {\n    min-width: 150px;\n  }\n`\n\nconst PoolBalanceSymbols = styled(Row)`\n  justify-content: space-between;\n\n  @media (max-width: ${BREAKPOINTS.lg}px) {\n    flex-direction: column;\n  }\n`\n\nconst PoolBalanceTokenNamesContainer = styled(Row)`\n  font-weight: 485;\n  font-size: 16px;\n  line-height: 24px;\n  width: max-content;\n\n  @media (max-width: ${BREAKPOINTS.lg}px) {\n    font-size: 20px;\n    line-height: 28px;\n    width: 100%;\n  }\n`\n\nconst StyledLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.neutral1};\n  ${ClickableStyle}\n`\n\nconst leftBarChartStyles = css`\n  border-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n  border-right: 1px solid ${({ theme }) => theme.surface2};\n`\n\nconst rightBarChartStyles = css`\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n  border-left: 1px solid ${({ theme }) => theme.surface2};\n`\n\nconst BalanceChartSide = styled.div<{ percent: number; $color: string; isLeft: boolean }>`\n  height: 8px;\n  width: ${({ percent }) => percent * 100}%;\n  background: ${({ $color }) => $color};\n  ${({ isLeft }) => (isLeft ? leftBarChartStyles : rightBarChartStyles)}\n`\n\nconst StatSectionBubble = styled(LoadingBubble)`\n  width: 180px;\n  height: 40px;\n`\n\nconst StatHeaderBubble = styled(LoadingBubble)`\n  width: 116px;\n  height: 24px;\n  border-radius: 8px;\n`\n\ntype TokenFullData = Token & {\n  price: number\n  tvl: number\n  percent: number\n  currency?: Currency\n}\n\nconst PoolBalanceTokenNames = ({ token, chainId }: { token: TokenFullData; chainId?: SupportedInterfaceChainId }) => {\n  const isScreenSize = useScreenSize()\n  const screenIsNotLarge = isScreenSize['lg']\n  const { formatNumber } = useFormatter()\n  const unwrappedToken = chainId ? unwrapToken(chainId, token) : token\n  const isNative = unwrappedToken?.address === NATIVE_CHAIN_ID\n  const currency = isNative && chainId ? nativeOnChain(chainId) : token.currency\n  return (\n    <PoolBalanceTokenNamesContainer>\n      {!screenIsNotLarge && <CurrencyLogo currency={currency} size={20} style={{ marginRight: '8px' }} />}\n      {formatNumber({\n        input: token.tvl,\n        type: NumberType.TokenQuantityStats,\n      })}\n      &nbsp;\n      <StyledLink\n        to={getTokenDetailsURL({\n          address: unwrappedToken.address,\n          chain: chainIdToBackendChain({ chainId, withFallback: true }),\n        })}\n      >\n        {screenIsNotLarge && (\n          <CurrencyLogo currency={currency} size={16} style={{ marginRight: '4px', marginLeft: '4px' }} />\n        )}\n        {unwrappedToken.symbol}\n      </StyledLink>\n    </PoolBalanceTokenNamesContainer>\n  )\n}\n\ninterface PoolDetailsStatsProps {\n  poolData?: PoolData\n  isReversed?: boolean\n  chainId?: number\n  loading?: boolean\n}\n\nexport function PoolDetailsStats({ poolData, isReversed, chainId, loading }: PoolDetailsStatsProps) {\n  const isScreenSize = useScreenSize()\n  const screenIsNotLarge = isScreenSize['lg']\n  const theme = useTheme()\n\n  const currency0 = useCurrency(poolData?.token0?.address, chainId)\n  const currency1 = useCurrency(poolData?.token1?.address, chainId)\n\n  const [token0, token1] = useMemo(() => {\n    if (poolData && poolData.tvlToken0 && poolData.token0Price && poolData.tvlToken1 && poolData.token1Price) {\n      const fullWidth = poolData?.tvlToken0 * poolData?.token0Price + poolData?.tvlToken1 * poolData?.token1Price\n      const token0FullData: TokenFullData = {\n        ...poolData?.token0,\n        price: poolData?.token0Price,\n        tvl: poolData?.tvlToken0,\n        percent: (poolData?.tvlToken0 * poolData?.token0Price) / fullWidth,\n        currency: currency0,\n      }\n      const token1FullData: TokenFullData = {\n        ...poolData?.token1,\n        price: poolData?.token1Price,\n        tvl: poolData?.tvlToken1,\n        percent: (poolData?.tvlToken1 * poolData?.token1Price) / fullWidth,\n        currency: currency1,\n      }\n      return isReversed ? [token1FullData, token0FullData] : [token0FullData, token1FullData]\n    } else {\n      return [undefined, undefined]\n    }\n  }, [currency0, currency1, isReversed, poolData])\n\n  if (loading || !token0 || !token1 || !poolData) {\n    return (\n      <StatsWrapper>\n        <HeaderText>\n          <StatHeaderBubble />\n        </HeaderText>\n        {Array.from({ length: 4 }).map((_, i) => (\n          <Column gap=\"md\" key={`loading-info-row-${i}`}>\n            <DetailBubble />\n            <StatSectionBubble />\n          </Column>\n        ))}\n      </StatsWrapper>\n    )\n  }\n\n  return (\n    <StatsWrapper loaded>\n      <HeaderText>\n        <Trans>Stats</Trans>\n      </HeaderText>\n      <StatItemColumn>\n        <ThemedText.BodySecondary>\n          <Trans>Pool balances</Trans>\n        </ThemedText.BodySecondary>\n        <PoolBalanceSymbols>\n          <PoolBalanceTokenNames token={token0} chainId={chainId} />\n          <PoolBalanceTokenNames token={token1} chainId={chainId} />\n        </PoolBalanceSymbols>\n        {screenIsNotLarge && (\n          <Row data-testid=\"pool-balance-chart\">\n            <BalanceChartSide percent={token0.percent} $color={theme.token0} isLeft={true} />\n            <BalanceChartSide percent={token1.percent} $color={theme.token1} isLeft={false} />\n          </Row>\n        )}\n      </StatItemColumn>\n      {poolData?.tvlUSD && (\n        <StatItem title={<Trans>TVL</Trans>} value={poolData.tvlUSD} delta={poolData.tvlUSDChange} />\n      )}\n      {poolData?.volumeUSD24H !== undefined && (\n        <StatItem title={<Trans>24H volume</Trans>} value={poolData.volumeUSD24H} delta={poolData.volumeUSD24HChange} />\n      )}\n      {poolData?.volumeUSD24H !== undefined && poolData?.feeTier !== undefined && (\n        <StatItem title={<Trans>24H fees</Trans>} value={poolData.volumeUSD24H * (poolData.feeTier / 1000000)} />\n      )}\n    </StatsWrapper>\n  )\n}\n\nconst StatsTextContainer = styled(Row)`\n  gap: 4px;\n  width: 100%;\n  align-items: flex-end;\n\n  @media (max-width: ${BREAKPOINTS.lg}px) {\n    flex-direction: column;\n    gap: 0px;\n    align-items: flex-start;\n  }\n`\n\nconst StatItemText = styled(Text)`\n  color: ${({ theme }) => theme.neutral1};\n  font-size: 36px;\n  font-weight: 485;\n  line-height: 44px;\n\n  @media (max-width: ${BREAKPOINTS.lg}px) {\n    font-size: 20px;\n    line-height: 28px;\n  }\n`\n\nfunction StatItem({ title, value, delta }: { title: ReactNode; value: number; delta?: number }) {\n  const { formatNumber, formatDelta } = useFormatter()\n\n  return (\n    <StatItemColumn>\n      <ThemedText.BodySecondary>{title}</ThemedText.BodySecondary>\n      <StatsTextContainer>\n        <StatItemText>\n          {formatNumber({\n            input: value,\n            type: NumberType.FiatTokenStats,\n          })}\n        </StatItemText>\n        {!!delta && (\n          <Row width=\"max-content\" padding=\"4px 0px\">\n            <DeltaArrow delta={delta} />\n            <ThemedText.BodySecondary>{formatDelta(delta)}</ThemedText.BodySecondary>\n          </Row>\n        )}\n      </StatsTextContainer>\n    </StatItemColumn>\n  )\n}\n","import { ChainId, Token } from '@uniswap/sdk-core'\nimport { Interface } from 'ethers/lib/utils'\nimport ERC20_ABI from 'uniswap/src/abis/erc20.json'\nimport { Erc20Interface } from 'uniswap/src/abis/types/Erc20'\nimport { Erc20Bytes32Interface } from 'uniswap/src/abis/types/Erc20Bytes32'\nimport { UniswapInterfaceMulticall } from 'uniswap/src/abis/types/v3'\nimport { isAddress } from 'utilities/src/addresses'\nimport { DEFAULT_ERC20_DECIMALS } from 'utilities/src/tokens/constants'\nimport { arrayToSlices } from 'utils/arrays'\nimport { CurrencyKey, buildCurrencyKey, currencyKey } from 'utils/currencyKey'\n\ntype TokenMap = { [address: string]: Token | undefined }\nexport type Call = { target: string; callData: string; gasLimit: number }\ntype CallResult = { success: boolean; returnData: string }\nexport const DEFAULT_GAS_LIMIT = 1_000_000\n\nconst Erc20 = new Interface(ERC20_ABI) as Erc20Interface\nconst Erc20Bytes32 = new Interface(ERC20_ABI) as Erc20Bytes32Interface // Used for tokens that return bytes32 for name/symbol rather than string\n\n// TODO(WEB-1760): cartcrom - adapt support for multi-function multi-interface multicalls into redux-multicall to remove than this custom cache/chunking logic\n// Infura rejects calls with gas costs > 10x the current block gas limit; in such case we split the call into 2 chunks\nasync function fetchChunk(multicall: UniswapInterfaceMulticall, chunk: Call[]): Promise<CallResult[]> {\n  try {\n    return (await multicall.callStatic.multicall(chunk)).returnData\n  } catch (error) {\n    if (error.code === -32603 || error.message?.indexOf('execution ran out of gas') !== -1) {\n      if (chunk.length > 1) {\n        const half = Math.floor(chunk.length / 2)\n        return Promise.all([\n          fetchChunk(multicall, chunk.slice(0, half)),\n          fetchChunk(multicall, chunk.slice(half, chunk.length)),\n        ]).then(([c0, c1]) => [...c0, ...c1])\n      }\n    }\n    console.error('Failed to fetch chunk', error)\n    throw error\n  }\n}\n\nfunction tryParseToken(address: string, chainId: ChainId, data: CallResult[]) {\n  try {\n    const [nameData, symbolData, decimalsData, nameDataBytes32, symbolDataBytes32] = data\n\n    const name = nameData.success\n      ? (Erc20.decodeFunctionResult('name', nameData.returnData)[0] as string)\n      : nameDataBytes32.success\n      ? (Erc20Bytes32.decodeFunctionResult('name', nameDataBytes32.returnData)[0] as string)\n      : undefined\n    const symbol = symbolData.success\n      ? (Erc20.decodeFunctionResult('symbol', symbolData.returnData)[0] as string)\n      : symbolDataBytes32.success\n      ? (Erc20Bytes32.decodeFunctionResult('symbol', symbolDataBytes32.returnData)[0] as string)\n      : undefined\n    const decimals = decimalsData.success ? parseInt(decimalsData.returnData) : DEFAULT_ERC20_DECIMALS\n\n    return new Token(chainId, address, decimals, symbol, name)\n  } catch (error) {\n    console.error(`Failed to fetch token at address ${address} on chain ${chainId}`)\n    return undefined\n  }\n}\n\nfunction parseTokens(addresses: string[], chainId: ChainId, returnData: CallResult[]) {\n  const tokenDataSlices = arrayToSlices(returnData, 5)\n\n  return tokenDataSlices.reduce((acc: TokenMap, slice, index) => {\n    const parsedToken = tryParseToken(addresses[index], chainId, slice)\n    if (parsedToken) acc[parsedToken.address] = parsedToken\n    return acc\n  }, {})\n}\n\nconst createCalls = (target: string, callData: string[]): Call[] =>\n  callData.map((callData) => ({ target, callData, gasLimit: DEFAULT_GAS_LIMIT }))\n\nfunction createCallsForToken(address: string) {\n  return createCalls(address, [\n    Erc20.encodeFunctionData('name'),\n    Erc20.encodeFunctionData('symbol'),\n    Erc20.encodeFunctionData('decimals'),\n    Erc20Bytes32.encodeFunctionData('name'),\n    Erc20Bytes32.encodeFunctionData('symbol'),\n  ])\n}\n\n// Prevents tokens from being fetched multiple times\nconst TokenPromiseCache: { [key: CurrencyKey]: Promise<Token | undefined> | undefined } = {}\n\n// Returns tokens using a single RPC call to the multicall contract\nexport async function getTokensAsync(\n  addresses: string[],\n  chainId: ChainId,\n  multicall: UniswapInterfaceMulticall\n): Promise<TokenMap> {\n  if (addresses.length === 0) return {}\n  const formattedAddresses: string[] = []\n  const calls: Call[] = []\n  const previouslyCalledTokens: Promise<Token | undefined>[] = []\n\n  addresses.forEach((tokenAddress) => {\n    const key = buildCurrencyKey(chainId, tokenAddress)\n    const previousCall = TokenPromiseCache[key]\n    if (previousCall !== undefined) {\n      previouslyCalledTokens.push(previousCall)\n    } else {\n      const formattedAddress = isAddress(tokenAddress)\n      if (!formattedAddress) return\n      formattedAddresses.push(formattedAddress)\n      calls.push(...createCallsForToken(formattedAddress))\n    }\n  })\n\n  const calledTokens = fetchChunk(multicall, calls).then((returnData) => parseTokens(addresses, chainId, returnData))\n\n  // Caches tokens currently being fetched for further calls to use\n  formattedAddresses.forEach(\n    (address) =>\n      (TokenPromiseCache[buildCurrencyKey(chainId, address)] = calledTokens.then((tokenMap) => tokenMap[address]))\n  )\n\n  const tokenMap = await calledTokens\n  // Add tokens from previous calls to the map of tokens fetched in this call\n  const resolvedPreviousTokens = await Promise.all(previouslyCalledTokens)\n  resolvedPreviousTokens.forEach((token) => token && (tokenMap[currencyKey(token)] = token))\n\n  return tokenMap\n}\n","/**\n * Divides an array into slices of a given size\n * @param items\n * @param size\n * @returns\n */\nexport function arrayToSlices<T>(items: Array<T>, size: number): T[][] {\n  if (items.length % size !== 0) throw new Error('Input array length must be a multiple of desired output size')\n  return Array.from({ length: Math.floor(items.length / size) }, (_v, i) => items.slice(i * size, i * size + size))\n}\n","import { ChainId, Token } from '@uniswap/sdk-core'\nimport { Pool, Position } from '@uniswap/v3-sdk'\nimport { atom, useAtom } from 'jotai'\nimport { atomWithStorage } from 'jotai/utils'\nimport ms from 'ms'\nimport { useCallback } from 'react'\nimport { SerializedToken } from 'state/user/types'\nimport { PositionDetails } from 'types/position'\nimport { buildCurrencyKey, currencyKey } from 'utils/currencyKey'\n\nimport { deserializeToken, serializeToken } from 'state/user/utils'\nimport { getTokensAsync } from './getTokensAsync'\nimport { useInterfaceMulticallContracts } from './hooks'\n\nexport type PositionInfo = {\n  owner: string\n  chainId: ChainId\n  position: Position\n  pool: Pool\n  details: PositionDetails\n  inRange: boolean\n  closed: boolean\n  fees?: [number?, number?]\n  prices?: [number?, number?]\n}\n\nconst POSITION_CACHE_EXPIRY = ms(`1m`) // 1 minute is arbitrary here\n// Allows reusing recently fetched positions between component mounts\ntype CachedPositionsEntry = { result: PositionInfo[]; stale: boolean }\nconst cachedPositionsAtom = atom<{ [address: string]: CachedPositionsEntry | undefined }>({})\ntype UseCachedPositionsReturnType = [CachedPositionsEntry | undefined, (positions: PositionInfo[]) => void]\n/**\n * Caches positions to allow reusing between component mounts\n * @param account address to cache positions for\n * @returns cached positions for the account, whether the cache is stale, and a function to update the positions and cache\n */\nexport function useCachedPositions(account: string): UseCachedPositionsReturnType {\n  const [cachedPositions, setCachedPositions] = useAtom(cachedPositionsAtom)\n  const setPositionsAndStaleTimeout = useCallback(\n    (positions: PositionInfo[]) => {\n      setCachedPositions((cache) => ({ ...cache, [account]: { result: positions, stale: false } }))\n      setTimeout(\n        () =>\n          setCachedPositions((cache) => {\n            // sets stale to true if the positions haven't been updated since the timeout\n            if (positions === cache[account]?.result) {\n              return { ...cache, [account]: { result: positions, stale: true } }\n            } else {\n              return cache\n            }\n          }),\n        POSITION_CACHE_EXPIRY\n      )\n    },\n    [account, setCachedPositions]\n  )\n  return [cachedPositions[account], setPositionsAndStaleTimeout]\n}\n\nconst poolAddressKey = (details: PositionDetails, chainId: ChainId) =>\n  `${chainId}-${details.token0}-${details.token1}-${details.fee}`\n\ntype PoolAddressMap = { [key: string]: string | undefined }\nconst poolAddressCacheAtom = atomWithStorage<PoolAddressMap>('poolCache', {})\n/**\n * Caches pool addresses to prevent components from having to re-compute them\n * @returns get and set functions for the cache\n */\nexport function usePoolAddressCache() {\n  const [cache, updateCache] = useAtom(poolAddressCacheAtom)\n  const get = useCallback(\n    (details: PositionDetails, chainId: ChainId) => cache[poolAddressKey(details, chainId)],\n    [cache]\n  )\n  const set = useCallback(\n    (details: PositionDetails, chainId: ChainId, address: string) =>\n      updateCache((c) => ({ ...c, [poolAddressKey(details, chainId)]: address })),\n    [updateCache]\n  )\n  return { get, set }\n}\n\n// These values are static, so we can persist them across sessions using `WithStorage`\nconst tokenCacheAtom = atomWithStorage<{ [key: string]: SerializedToken | undefined }>('cachedAsyncTokens', {})\nfunction useTokenCache() {\n  const [cache, setCache] = useAtom(tokenCacheAtom)\n  const get = useCallback(\n    (chainId: number, address: string) => {\n      const entry = cache[buildCurrencyKey(chainId, address)]\n      return entry ? deserializeToken(entry) : undefined\n    },\n    [cache]\n  )\n  const set = useCallback(\n    (token?: Token) => {\n      if (token) {\n        setCache((cache) => ({ ...cache, [currencyKey(token)]: serializeToken(token) }))\n      }\n    },\n    [setCache]\n  )\n  return { get, set }\n}\n\ntype TokenGetterFn = (addresses: string[], chainId: ChainId) => Promise<{ [key: string]: Token | undefined }>\nexport function useGetCachedTokens(chains: ChainId[]): TokenGetterFn {\n  const multicallContracts = useInterfaceMulticallContracts(chains)\n  const tokenCache = useTokenCache()\n\n  // Used to fetch tokens not available in local state\n  const fetchRemoteTokens: TokenGetterFn = useCallback(\n    async (addresses, chainId) => {\n      const fetched = await getTokensAsync(addresses, chainId, multicallContracts[chainId])\n      Object.values(fetched).forEach(tokenCache.set)\n      return fetched\n    },\n    [multicallContracts, tokenCache]\n  )\n\n  // Uses tokens from local state if available, otherwise fetches them\n  const getTokens: TokenGetterFn = useCallback(\n    async (addresses, chainId) => {\n      const local: { [address: string]: Token | undefined } = {}\n      const missing = new Set<string>()\n      addresses.forEach((address) => {\n        const cached = tokenCache.get(chainId, address)\n        cached ? (local[address] = cached) : missing.add(address)\n      })\n\n      const fetched = await fetchRemoteTokens([...missing], chainId)\n      return { ...local, ...fetched }\n    },\n    [fetchRemoteTokens, tokenCache]\n  )\n\n  return getTokens\n}\n","import { ChainId, CurrencyAmount, Token, V3_CORE_FACTORY_ADDRESSES } from '@uniswap/sdk-core'\nimport IUniswapV3PoolStateJSON from '@uniswap/v3-core/artifacts/contracts/interfaces/pool/IUniswapV3PoolState.sol/IUniswapV3PoolState.json'\nimport { Pool, Position, computePoolAddress } from '@uniswap/v3-sdk'\nimport { BigNumber } from 'ethers/lib/ethers'\nimport { Interface } from 'ethers/lib/utils'\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport { PositionDetails } from 'types/position'\nimport { NonfungiblePositionManager, UniswapInterfaceMulticall } from 'uniswap/src/abis/types/v3'\nimport { UniswapV3PoolInterface } from 'uniswap/src/abis/types/v3/UniswapV3Pool'\nimport { DEFAULT_ERC20_DECIMALS } from 'utilities/src/tokens/constants'\nimport { currencyKey } from 'utils/currencyKey'\n\nimport { L1_CHAIN_IDS, L2_CHAIN_IDS, TESTNET_CHAIN_IDS } from 'constants/chains'\nimport { PositionInfo, useCachedPositions, useGetCachedTokens, usePoolAddressCache } from './cache'\nimport { Call, DEFAULT_GAS_LIMIT } from './getTokensAsync'\nimport { useInterfaceMulticallContracts, usePoolPriceMap, useV3ManagerContracts } from './hooks'\n\nfunction createPositionInfo(\n  owner: string,\n  chainId: ChainId,\n  details: PositionDetails,\n  slot0: any,\n  tokenA: Token,\n  tokenB: Token\n): PositionInfo {\n  /* Instantiates a Pool with a hardcoded 0 liqudity value since the sdk only uses this value for swap state and this avoids an RPC fetch */\n  const pool = new Pool(tokenA, tokenB, details.fee, slot0.sqrtPriceX96.toString(), 0, slot0.tick)\n  const position = new Position({\n    pool,\n    liquidity: details.liquidity.toString(),\n    tickLower: details.tickLower,\n    tickUpper: details.tickUpper,\n  })\n  const inRange = slot0.tick >= details.tickLower && slot0.tick < details.tickUpper\n  const closed = details.liquidity.eq(0)\n  return { owner, chainId, pool, position, details, inRange, closed }\n}\n\ntype FeeAmounts = [BigNumber, BigNumber]\n\nconst MAX_UINT128 = BigNumber.from(2).pow(128).sub(1)\n\nconst DEFAULT_CHAINS = [...L1_CHAIN_IDS, ...L2_CHAIN_IDS].filter((chain: number) => {\n  return !TESTNET_CHAIN_IDS.includes(chain)\n})\n\ntype UseMultiChainPositionsData = { positions?: PositionInfo[]; loading: boolean }\n\n/**\n * Returns all positions for a given account on multiple chains.\n *\n * This hook doesn't use the redux-multicall library to avoid having to manually fetching blocknumbers for each chain.\n *\n * @param account - account to fetch positions for\n * @param chains - chains to fetch positions from\n * @returns positions, fees\n */\nexport default function useMultiChainPositions(account: string, chains = DEFAULT_CHAINS): UseMultiChainPositionsData {\n  const pms = useV3ManagerContracts(chains)\n  const multicalls = useInterfaceMulticallContracts(chains)\n\n  const getTokens = useGetCachedTokens(chains)\n  const poolAddressCache = usePoolAddressCache()\n\n  const [cachedPositions, setPositions] = useCachedPositions(account)\n  const positions = cachedPositions?.result\n  const positionsFetching = useRef(false)\n  const positionsLoading = !cachedPositions?.result && positionsFetching.current\n\n  const [feeMap, setFeeMap] = useState<{ [key: string]: FeeAmounts }>({})\n\n  const { priceMap, pricesLoading } = usePoolPriceMap(positions)\n\n  const fetchPositionFees = useCallback(\n    async (pm: NonfungiblePositionManager, positionIds: BigNumber[], chainId: number) => {\n      const callData = positionIds.map((id) =>\n        pm.interface.encodeFunctionData('collect', [\n          { tokenId: id, recipient: account, amount0Max: MAX_UINT128, amount1Max: MAX_UINT128 },\n        ])\n      )\n      const fees = (await pm.callStatic.multicall(callData)).reduce((acc, feeBytes, index) => {\n        const key = chainId.toString() + positionIds[index]\n        acc[key] = pm.interface.decodeFunctionResult('collect', feeBytes) as FeeAmounts\n        return acc\n      }, {} as { [key: string]: FeeAmounts })\n\n      setFeeMap((prev) => ({ ...prev, ...fees }))\n    },\n    [account]\n  )\n\n  const fetchPositionIds = useCallback(\n    async (pm: NonfungiblePositionManager, balance: BigNumber) => {\n      const callData = Array.from({ length: balance.toNumber() }, (_, i) =>\n        pm.interface.encodeFunctionData('tokenOfOwnerByIndex', [account, i])\n      )\n      return (await pm.callStatic.multicall(callData)).map((idByte) => BigNumber.from(idByte))\n    },\n    [account]\n  )\n\n  const fetchPositionDetails = useCallback(async (pm: NonfungiblePositionManager, positionIds: BigNumber[]) => {\n    const callData = positionIds.map((id) => pm.interface.encodeFunctionData('positions', [id]))\n    return (await pm.callStatic.multicall(callData)).map(\n      (positionBytes, index) =>\n        ({\n          ...pm.interface.decodeFunctionResult('positions', positionBytes),\n          tokenId: positionIds[index],\n        } as unknown as PositionDetails)\n    )\n  }, [])\n\n  // Combines PositionDetails with Pool data to build our return type\n  const fetchPositionInfo = useCallback(\n    async (positionDetails: PositionDetails[], chainId: ChainId, multicall: UniswapInterfaceMulticall) => {\n      const poolInterface = new Interface(IUniswapV3PoolStateJSON.abi) as UniswapV3PoolInterface\n      const tokens = await getTokens(\n        positionDetails.flatMap((details) => [details.token0, details.token1]),\n        chainId\n      )\n\n      const calls: Call[] = []\n      const poolPairs: [Token, Token][] = []\n      positionDetails.forEach((details) => {\n        const tokenA = tokens[details.token0] ?? new Token(chainId, details.token0, DEFAULT_ERC20_DECIMALS)\n        const tokenB = tokens[details.token1] ?? new Token(chainId, details.token1, DEFAULT_ERC20_DECIMALS)\n\n        let poolAddress = poolAddressCache.get(details, chainId)\n        if (!poolAddress) {\n          const factoryAddress = V3_CORE_FACTORY_ADDRESSES[chainId]\n          poolAddress = computePoolAddress({ factoryAddress, tokenA, tokenB, fee: details.fee })\n          poolAddressCache.set(details, chainId, poolAddress)\n        }\n        poolPairs.push([tokenA, tokenB])\n        calls.push({\n          target: poolAddress,\n          callData: poolInterface.encodeFunctionData('slot0'),\n          gasLimit: DEFAULT_GAS_LIMIT,\n        })\n      }, [])\n\n      return (await multicall.callStatic.multicall(calls)).returnData.reduce((acc: PositionInfo[], result, i) => {\n        if (result.success) {\n          const slot0 = poolInterface.decodeFunctionResult('slot0', result.returnData)\n          acc.push(createPositionInfo(account, chainId, positionDetails[i], slot0, ...poolPairs[i]))\n        } else {\n          console.debug('slot0 fetch errored', result)\n        }\n        return acc\n      }, [])\n    },\n    [account, poolAddressCache, getTokens]\n  )\n\n  const fetchPositionsForChain = useCallback(\n    async (chainId: ChainId): Promise<PositionInfo[]> => {\n      if (!account || account.length === 0) {\n        return []\n      }\n      try {\n        const pm = pms[chainId]\n        const multicall = multicalls[chainId]\n        const balance = await pm?.balanceOf(account)\n        if (!pm || !multicall || balance.lt(1)) return []\n\n        const positionIds = await fetchPositionIds(pm, balance)\n        // Fetches fees in the background and stores them separetely from the results of this function\n        fetchPositionFees(pm, positionIds, chainId)\n\n        const postionDetails = await fetchPositionDetails(pm, positionIds)\n        return fetchPositionInfo(postionDetails, chainId, multicall)\n      } catch (error) {\n        console.error(`Failed to fetch positions for chain ${chainId}`, error)\n        return []\n      }\n    },\n    [account, fetchPositionDetails, fetchPositionFees, fetchPositionIds, fetchPositionInfo, pms, multicalls]\n  )\n\n  const fetchAllPositions = useCallback(async () => {\n    positionsFetching.current = true\n    const positions = (await Promise.all(chains.map(fetchPositionsForChain))).flat()\n    positionsFetching.current = false\n    setPositions(positions)\n  }, [chains, fetchPositionsForChain, setPositions])\n\n  // Fetches positions when existing positions are stale and the document has focus\n  useEffect(() => {\n    if (positionsFetching.current || cachedPositions?.stale === false) return\n    else if (document.hasFocus()) {\n      fetchAllPositions()\n    } else {\n      // Avoids refetching positions until the user returns to Interface to avoid polling unnused rpc data\n      const onFocus = () => {\n        fetchAllPositions()\n        window.removeEventListener('focus', onFocus)\n      }\n      window.addEventListener('focus', onFocus)\n      return () => {\n        window.removeEventListener('focus', onFocus)\n      }\n    }\n    return\n  }, [fetchAllPositions, positionsFetching, cachedPositions?.stale])\n\n  const positionsWithFeesAndPrices: PositionInfo[] | undefined = useMemo(\n    () =>\n      positions?.map((position) => {\n        const key = position.chainId.toString() + position.details.tokenId\n        const fees = feeMap[key]\n          ? [\n              // We parse away from SDK/ethers types so fees can be multiplied by primitive number prices\n              parseFloat(CurrencyAmount.fromRawAmount(position.pool.token0, feeMap[key]?.[0].toString()).toExact()),\n              parseFloat(CurrencyAmount.fromRawAmount(position.pool.token1, feeMap[key]?.[1].toString()).toExact()),\n            ]\n          : undefined\n        const prices = [priceMap[currencyKey(position.pool.token0)], priceMap[currencyKey(position.pool.token1)]]\n        return { ...position, fees, prices } as PositionInfo\n      }),\n    [feeMap, positions, priceMap]\n  )\n\n  return { positions: positionsWithFeesAndPrices, loading: pricesLoading || positionsLoading }\n}\n","import { useWeb3React } from '@web3-react/core'\nimport { Scrim } from 'components/AccountDrawer'\nimport { PositionInfo } from 'components/AccountDrawer/MiniPortfolio/Pools/cache'\nimport useMultiChainPositions from 'components/AccountDrawer/MiniPortfolio/Pools/useMultiChainPositions'\nimport Column from 'components/Column'\nimport { CurrencySelect } from 'components/CurrencyInputPanel/SwapCurrencyInputPanel'\nimport { ReverseArrow } from 'components/Icons/ReverseArrow'\nimport Row from 'components/Row'\nimport { SwapWrapperOuter } from 'components/swap/styled'\nimport { LoadingBubble } from 'components/Tokens/loading'\nimport TokenSafetyMessage from 'components/TokenSafety/TokenSafetyMessage'\nimport { chainIdToBackendChain, SupportedInterfaceChainId } from 'constants/chains'\nimport { getPriorityWarning, StrongWarning, useTokenWarning } from 'constants/tokenSafety'\nimport { useTokenBalancesQuery } from 'graphql/data/apollo/TokenBalancesProvider'\nimport { gqlToCurrency } from 'graphql/data/util'\nimport { useScreenSize } from 'hooks/screenSize'\nimport { useSwitchChain } from 'hooks/useSwitchChain'\nimport { Trans } from 'i18n'\nimport { Swap } from 'pages/Swap'\nimport { useMemo, useReducer } from 'react'\nimport { Plus, X } from 'react-feather'\nimport { useNavigate } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { BREAKPOINTS } from 'theme'\nimport { ClickableStyle, ThemedText } from 'theme/components'\nimport { opacify } from 'theme/utils'\nimport { Z_INDEX } from 'theme/zIndex'\nimport { Token } from 'uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks'\nimport { currencyId } from 'utils/currencyId'\nimport { NumberType, useFormatter } from 'utils/formatNumbers'\n\nconst PoolDetailsStatsButtonsRow = styled(Row)`\n  gap: 12px;\n  z-index: 1;\n\n  @media (max-width: ${BREAKPOINTS.lg}px) {\n    gap: 8px;\n    position: fixed;\n    bottom: 0px;\n    left: 0;\n    margin: 8px;\n    width: calc(100% - 16px);\n    background: ${({ theme }) => theme.surface1};\n    padding: 12px 32px;\n    border: 1px solid ${({ theme }) => theme.surface3};\n    border-radius: 20px;\n    backdrop-filter: blur(10px);\n    & > :first-child {\n      margin-right: auto;\n    }\n    z-index: ${Z_INDEX.sticky};\n  }\n  @media (max-width: ${BREAKPOINTS.md}px) {\n    bottom: 56px;\n  }\n`\n\nconst PoolButton = styled.button<{ $open?: boolean; $hideOnMobile?: boolean; $fixedWidth?: boolean }>`\n  display: flex;\n  flex-direction: row;\n  padding: 12px 16px 12px 12px;\n  border: unset;\n  border-radius: 900px;\n  width: ${({ $open }) => ($open ? '100px' : '50%')};\n  gap: 8px;\n  color: ${({ theme, $open }) => ($open ? theme.neutral1 : theme.accent1)};\n  background-color: ${({ theme, $open }) => ($open ? theme.surface1 : opacify(12, theme.accent1))};\n  justify-content: center;\n  transition: ${({ theme }) => `width ${theme.transition.duration.medium} ${theme.transition.timing.inOut}`};\n  border: ${({ theme, $open }) => $open && `1px solid ${theme.surface3}`};\n  ${ClickableStyle}\n  @media (max-width: ${BREAKPOINTS.lg}px) {\n    width: ${({ $fixedWidth }) => $fixedWidth && '120px'};\n  }\n  @media (max-width: ${BREAKPOINTS.sm}px) {\n    display: ${({ $hideOnMobile }) => $hideOnMobile && 'none'};\n    width: ${({ $fixedWidth }) => !$fixedWidth && '100%'};\n  }\n`\n\nconst SwapIcon = styled(ReverseArrow)`\n  fill: ${({ theme }) => theme.accent1};\n  rotate: 90deg;\n`\n\nconst ButtonBubble = styled(LoadingBubble)`\n  height: 44px;\n  width: 175px;\n  border-radius: 900px;\n`\n\nconst SwapModalWrapper = styled(Column)<{ open?: boolean }>`\n  z-index: 0;\n  gap: 24px;\n  visibility: ${({ open }) => (open ? 'visible' : 'hidden')};\n  opacity: ${({ open }) => (open ? '1' : '0')};\n  max-height: ${({ open }) => (open ? '100vh' : '0')};\n  transition: ${({ theme }) => `max-height ${theme.transition.duration.medium} ${theme.transition.timing.ease}`};\n  padding-bottom: ${({ open }) => (open ? '24px' : '0')};\n\n  ${SwapWrapperOuter} {\n    &:before {\n      background-color: unset;\n    }\n  }\n\n  // Need to override the default visibility to properly hide\n  ${CurrencySelect} {\n    visibility: ${({ open }) => (open ? 'visible' : 'hidden')};\n  }\n\n  @media (max-width: ${BREAKPOINTS.lg}px) {\n    position: fixed;\n    width: calc(100% - 16px);\n    padding: 0px 12px 12px;\n    border-radius: 24px;\n    max-width: 480px;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    z-index: ${Z_INDEX.fixed};\n    background: ${({ theme }) => theme.surface1};\n    transition: ${({ theme }) => `opacity ${theme.transition.duration.medium} ${theme.transition.timing.ease}`};\n  }\n`\n\nconst MobileBalance = styled(Column)`\n  gap: 2px;\n  display: none;\n  @media (max-width: ${BREAKPOINTS.lg}px) {\n    display: flex;\n  }\n`\n\ninterface PoolDetailsStatsButtonsProps {\n  chainId?: SupportedInterfaceChainId\n  token0?: Token\n  token1?: Token\n  feeTier?: number\n  loading?: boolean\n}\n\nfunction findMatchingPosition(positions: PositionInfo[], token0?: Token, token1?: Token, feeTier?: number) {\n  return positions?.find(\n    (position) =>\n      (position?.details.token0.toLowerCase() === token0?.address ||\n        position?.details.token0.toLowerCase() === token1?.address) &&\n      (position?.details.token1.toLowerCase() === token0?.address ||\n        position?.details.token1.toLowerCase() === token1?.address) &&\n      position?.details.fee == feeTier &&\n      !position.closed\n  )\n}\n\nexport function PoolDetailsStatsButtons({ chainId, token0, token1, feeTier, loading }: PoolDetailsStatsButtonsProps) {\n  const { chainId: walletChainId, account } = useWeb3React()\n  const { positions: userOwnedPositions } = useMultiChainPositions(account ?? '', chainId ? [chainId] : undefined)\n  const position = userOwnedPositions && findMatchingPosition(userOwnedPositions, token0, token1, feeTier)\n  const tokenId = position?.details.tokenId\n  const switchChain = useSwitchChain()\n  const navigate = useNavigate()\n  const currency0 = token0 && gqlToCurrency(token0)\n  const currency1 = token1 && gqlToCurrency(token1)\n\n  // Mobile Balance Data\n  const { data: balanceQuery } = useTokenBalancesQuery()\n  const { balance0, balance1, balance0Fiat, balance1Fiat } = useMemo(() => {\n    const filteredBalances = balanceQuery?.portfolios?.[0]?.tokenBalances?.filter(\n      (tokenBalance) => tokenBalance?.token?.chain === chainIdToBackendChain({ chainId, withFallback: true })\n    )\n    const tokenBalance0 = filteredBalances?.find((tokenBalance) => tokenBalance?.token?.address === token0?.address)\n    const tokenBalance1 = filteredBalances?.find((tokenBalance) => tokenBalance?.token?.address === token1?.address)\n    return {\n      balance0: tokenBalance0?.quantity ?? 0,\n      balance1: tokenBalance1?.quantity ?? 0,\n      balance0Fiat: tokenBalance0?.denominatedValue?.value ?? 0,\n      balance1Fiat: tokenBalance1?.denominatedValue?.value ?? 0,\n    }\n  }, [balanceQuery?.portfolios, chainId, token0?.address, token1?.address])\n  const { formatNumber } = useFormatter()\n  const formattedBalance0 = formatNumber({\n    input: balance0,\n    type: NumberType.TokenNonTx,\n  })\n  const formattedBalance1 = formatNumber({\n    input: balance1,\n    type: NumberType.TokenNonTx,\n  })\n  const totalFiatValue = balance0Fiat + balance1Fiat\n  const formattedFiatValue = formatNumber({\n    input: totalFiatValue,\n    type: NumberType.PortfolioBalance,\n  })\n\n  const handleAddLiquidity = async () => {\n    if (currency0 && currency1) {\n      if (walletChainId !== chainId && chainId) await switchChain(chainId)\n      navigate(`/add/${currencyId(currency0)}/${currencyId(currency1)}/${feeTier}${tokenId ? `/${tokenId}` : ''}`)\n    }\n  }\n  const [swapModalOpen, toggleSwapModalOpen] = useReducer((state) => !state, false)\n  const isScreenSize = useScreenSize()\n  const screenSizeLargerThanTablet = isScreenSize['lg']\n  const isMobile = !isScreenSize['sm']\n  const token0Warning = useTokenWarning(token0?.address, chainId)\n  const token1Warning = useTokenWarning(token1?.address, chainId)\n  const priorityWarning = getPriorityWarning(token0Warning, token1Warning)\n\n  if (loading || !currency0 || !currency1)\n    return (\n      <PoolDetailsStatsButtonsRow data-testid=\"pdp-buttons-loading-skeleton\">\n        <MobileBalance>\n          <ButtonBubble />\n        </MobileBalance>\n        <ButtonBubble />\n        <ButtonBubble />\n      </PoolDetailsStatsButtonsRow>\n    )\n\n  return (\n    <Column gap=\"lg\">\n      <PoolDetailsStatsButtonsRow>\n        {account && (\n          <MobileBalance>\n            <ThemedText.SubHeaderSmall>\n              <Trans>Your balances</Trans>\n            </ThemedText.SubHeaderSmall>\n            <Row gap=\"8px\">\n              <ThemedText.HeadlineSmall>\n                {formattedBalance0} {currency0.symbol}\n              </ThemedText.HeadlineSmall>\n              <ThemedText.HeadlineSmall color=\"neutral3\">|</ThemedText.HeadlineSmall>\n              <ThemedText.HeadlineSmall>\n                {formattedBalance1} {currency1.symbol}\n              </ThemedText.HeadlineSmall>\n              {Boolean(totalFiatValue) && !isMobile && <ThemedText.Caption>({formattedFiatValue})</ThemedText.Caption>}\n            </Row>\n          </MobileBalance>\n        )}\n        <PoolButton\n          onClick={toggleSwapModalOpen}\n          $open={swapModalOpen}\n          $fixedWidth={Boolean(account)}\n          data-testid={`pool-details-${swapModalOpen ? 'close' : 'swap'}-button`}\n        >\n          {swapModalOpen ? (\n            <>\n              {screenSizeLargerThanTablet && <X size={20} />}\n              <ThemedText.BodyPrimary fontWeight={535} color=\"accentActive\">\n                <Trans>Close</Trans>\n              </ThemedText.BodyPrimary>\n            </>\n          ) : (\n            <>\n              {screenSizeLargerThanTablet && <SwapIcon />}\n              <ThemedText.BodyPrimary fontWeight={535} color=\"accentActive\">\n                <Trans>Swap</Trans>\n              </ThemedText.BodyPrimary>\n            </>\n          )}\n        </PoolButton>\n        <PoolButton\n          onClick={handleAddLiquidity}\n          data-testid=\"pool-details-add-liquidity-button\"\n          $fixedWidth={Boolean(account)}\n          $hideOnMobile\n        >\n          {screenSizeLargerThanTablet && <Plus size={20} />}\n          <ThemedText.BodyPrimary fontWeight={535} color=\"accentActive\">\n            <Trans>Add liquidity</Trans>\n          </ThemedText.BodyPrimary>\n        </PoolButton>\n      </PoolDetailsStatsButtonsRow>\n      <SwapModalWrapper open={swapModalOpen} data-testid=\"pool-details-swap-modal\">\n        <Swap\n          syncTabToUrl={false}\n          chainId={chainId}\n          initialInputCurrency={currency0}\n          initialOutputCurrency={currency1}\n          compact\n          disableTokenInputs={chainId !== walletChainId}\n        />\n        {Boolean(priorityWarning) && (\n          <TokenSafetyMessage\n            tokenAddress={(priorityWarning === token0Warning ? token0?.address : token1?.address) ?? ''}\n            warning={priorityWarning ?? StrongWarning}\n            plural={Boolean(token0Warning && token1Warning)}\n            tokenSymbol={priorityWarning === token0Warning ? token0?.symbol : token1?.symbol}\n          />\n        )}\n      </SwapModalWrapper>\n      <Scrim\n        $open={swapModalOpen && !screenSizeLargerThanTablet}\n        $maxWidth={BREAKPOINTS.lg}\n        $zIndex={Z_INDEX.sticky}\n        onClick={toggleSwapModalOpen}\n      />\n    </Column>\n  )\n}\n","type SVGProps = React.SVGProps<SVGSVGElement> & {\n  fill?: string\n  height?: string | number\n  width?: string | number\n  gradientId?: string\n}\n\nexport const ClosedCircle = (props: SVGProps) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" {...props}>\n    <g clipPath=\"url(#clip0_2958_135280)\">\n      <path\n        d=\"M6 11C8.76142 11 11 8.76142 11 6C11 3.23858 8.76142 1 6 1C3.23858 1 1 3.23858 1 6C1 8.76142 3.23858 11 6 11Z\"\n        stroke=\"#9B9B9B\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path d=\"M2.46484 2.46509L9.53484 9.53509\" stroke=\"#9B9B9B\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_2958_135280\">\n        <rect width=\"12\" height=\"12\" fill=\"white\" />\n      </clipPath>\n    </defs>\n  </svg>\n)\n\nexport const DoubleArrow = (props: SVGProps) => (\n  <svg width=\"14\" height=\"9\" viewBox=\"0 0 14 9\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n    <path\n      d=\"M4.00284 8.5L0.184659 4.68182L4.00284 0.863636L4.65909 1.51136L1.95739 4.21307H12.1335L9.43182 1.51136L10.0881 0.863636L13.9062 4.68182L10.0881 8.5L9.43182 7.84375L12.1335 5.15057H1.95739L4.65909 7.84375L4.00284 8.5Z\"\n      fill=\"#5E5E5E\"\n    />\n  </svg>\n)\n","import { useWeb3React } from '@web3-react/core'\nimport { PositionInfo } from 'components/AccountDrawer/MiniPortfolio/Pools/cache'\nimport Column from 'components/Column'\nimport { DoubleCurrencyLogo } from 'components/DoubleLogo'\nimport { ClosedCircle, DoubleArrow } from 'components/Pools/PoolDetails/icons'\nimport Row from 'components/Row'\nimport { BIPS_BASE } from 'constants/misc'\nimport { useCurrency } from 'hooks/Tokens'\nimport { useSwitchChain } from 'hooks/useSwitchChain'\nimport { Trans } from 'i18n'\nimport { useCallback } from 'react'\nimport { AlertTriangle } from 'react-feather'\nimport { useNavigate } from 'react-router-dom'\nimport { Bound } from 'state/mint/v3/actions'\nimport styled, { useTheme } from 'styled-components'\nimport { BREAKPOINTS } from 'theme'\nimport { ClickableStyle, ThemedText } from 'theme/components'\nimport { useFormatter } from 'utils/formatNumbers'\n\nconst PositionTableWrapper = styled(Column)`\n  gap: 24px;\n  margin-top: 24px;\n  width: 100%;\n`\n\nconst PositionWrapper = styled(Column)`\n  gap: 4px;\n  background: ${({ theme }) => theme.surface2};\n  border-radius: 12px;\n  width: 100%;\n  ${ClickableStyle}\n  padding: 16px;\n`\n\nconst FeeTier = styled(ThemedText.LabelMicro)`\n  padding: 4px 6px;\n  background: ${({ theme }) => theme.surface2};\n`\n\nconst StatusWrapper = styled(Row)<{ status: PositionStatus }>`\n  gap: 8px;\n  width: max-content;\n  margin-right: 0;\n  margin-left: auto;\n  color: ${({ theme, status }) =>\n    status === PositionStatus.IN_RANGE\n      ? theme.success\n      : status === PositionStatus.OUT_OF_RANGE\n      ? theme.deprecated_accentWarning\n      : theme.neutral2};\n`\n\nconst RangeWrapper = styled(Row)`\n  gap: 10px;\n\n  @media screen and (max-width: ${BREAKPOINTS.sm}px) {\n    flex-direction: column;\n    gap: 4px;\n    align-items: flex-start;\n  }\n`\n\nconst StyledDoubleArrow = styled(DoubleArrow)`\n  @media screen and (max-width: ${BREAKPOINTS.sm}px) {\n    display: none;\n  }\n`\n\nconst RangeText = styled(ThemedText.Caption)`\n  width: max-content;\n  white-space: nowrap;\n`\n\nconst StyledDot = styled.div`\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  background-color: ${({ theme }) => theme.success};\n`\n\nenum PositionStatus {\n  IN_RANGE = 'In range',\n  OUT_OF_RANGE = 'Out of range',\n  CLOSED = 'Closed',\n}\n\nfunction PositionRow({ positionInfo }: { positionInfo: PositionInfo }) {\n  const tokens = [\n    useCurrency(positionInfo.details.token0, positionInfo.chainId),\n    useCurrency(positionInfo.details.token1, positionInfo.chainId),\n  ]\n  const { chainId: walletChainId } = useWeb3React()\n  const navigate = useNavigate()\n  const switchChain = useSwitchChain()\n  const theme = useTheme()\n  const { formatTickPrice } = useFormatter()\n\n  const onClick = useCallback(async () => {\n    if (walletChainId !== positionInfo.chainId) await switchChain(positionInfo.chainId)\n    navigate('/pool/' + positionInfo.details.tokenId)\n  }, [navigate, positionInfo.chainId, positionInfo.details.tokenId, switchChain, walletChainId])\n\n  const status = positionInfo.inRange\n    ? PositionStatus.IN_RANGE\n    : positionInfo.closed\n    ? PositionStatus.CLOSED\n    : PositionStatus.OUT_OF_RANGE\n\n  const priceUpper = positionInfo.position.token0PriceLower.invert()\n  const priceLower = positionInfo.position.token0PriceUpper.invert()\n\n  const ticksAtLimit = {\n    LOWER: parseFloat(priceLower.toFixed(0)) === 0,\n    UPPER: parseFloat(priceUpper.toFixed(0)) > Number.MAX_SAFE_INTEGER,\n  }\n\n  return (\n    <PositionWrapper onClick={onClick}>\n      <Row gap=\"8px\">\n        <DoubleCurrencyLogo currencies={tokens} size={16} />\n        <ThemedText.SubHeader>\n          {positionInfo.pool.token0.symbol}/{positionInfo.pool.token1.symbol}\n        </ThemedText.SubHeader>\n        <FeeTier>{positionInfo.pool.fee / BIPS_BASE}%</FeeTier>\n        <StatusWrapper status={status}>\n          <ThemedText.Caption color=\"inherit\">{status}</ThemedText.Caption>\n          {status === PositionStatus.IN_RANGE && <StyledDot />}\n          {status === PositionStatus.OUT_OF_RANGE && <AlertTriangle size={12} color={theme.deprecated_accentWarning} />}\n          {status === PositionStatus.CLOSED && <ClosedCircle />}\n        </StatusWrapper>\n      </Row>\n      <RangeWrapper>\n        <RangeText data-testid={`position-min-${priceLower.toFixed(0)}`}>\n          <Trans>Min:</Trans>&nbsp;\n          {formatTickPrice({\n            price: priceLower,\n            atLimit: ticksAtLimit,\n            direction: Bound.LOWER,\n          })}\n          &nbsp;\n          {positionInfo.pool.token0.symbol}&nbsp;\n          <Trans>per</Trans>&nbsp;\n          {positionInfo.pool.token1.symbol}\n        </RangeText>\n        <StyledDoubleArrow />\n        <RangeText data-testid={`position-max-${priceUpper.toFixed(0)}`}>\n          <Trans>Max:</Trans>&nbsp;\n          {formatTickPrice({\n            price: priceUpper,\n            atLimit: ticksAtLimit,\n            direction: Bound.UPPER,\n          })}\n          &nbsp;\n          {positionInfo.pool.token0.symbol}&nbsp;\n          <Trans>per</Trans>&nbsp;\n          {positionInfo.pool.token1.symbol}\n        </RangeText>\n      </RangeWrapper>\n    </PositionWrapper>\n  )\n}\n\nexport function PoolDetailsPositionsTable({ positions }: { positions: PositionInfo[] }) {\n  return (\n    <PositionTableWrapper>\n      {positions.map((position, index) => (\n        <PositionRow positionInfo={position} key={`pool-position-${index}`} />\n      ))}\n    </PositionTableWrapper>\n  )\n}\n","import { ChainId } from '@uniswap/sdk-core'\nimport { SupportedInterfaceChainId, chainIdToBackendChain } from 'constants/chains'\nimport { useCallback, useMemo, useRef } from 'react'\nimport {\n  PoolTransactionType,\n  ProtocolVersion,\n  Token,\n  V2PairTransactionsQuery,\n  V3PoolTransactionsQuery,\n  useV2PairTransactionsQuery,\n  useV3PoolTransactionsQuery,\n} from 'uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks'\nimport { FeatureFlags } from 'uniswap/src/features/gating/flags'\nimport { useFeatureFlag } from 'uniswap/src/features/gating/hooks'\n\nexport enum PoolTableTransactionType {\n  BUY = 'Buy',\n  SELL = 'Sell',\n  BURN = 'Burn',\n  MINT = 'Mint',\n}\n\nexport interface PoolTableTransaction {\n  timestamp: number\n  transaction: string\n  pool: {\n    token0: {\n      id: string\n      symbol: string\n    }\n    token1: {\n      id: string\n      symbol: string\n    }\n  }\n  maker: string\n  amount0: number\n  amount1: number\n  amountUSD: number\n  type: PoolTableTransactionType\n}\n\nconst PoolTransactionDefaultQuerySize = 25\n\nexport function usePoolTransactions(\n  address: string,\n  chainId?: SupportedInterfaceChainId,\n  // sortState: PoolTxTableSortState, TODO(WEB-3706): Implement sorting when BE supports\n  filter: PoolTableTransactionType[] = [\n    PoolTableTransactionType.BUY,\n    PoolTableTransactionType.SELL,\n    PoolTableTransactionType.BURN,\n    PoolTableTransactionType.MINT,\n  ],\n  token0?: Token,\n  protocolVersion: ProtocolVersion = ProtocolVersion.V3,\n  first = PoolTransactionDefaultQuerySize\n) {\n  const v2ExploreEnabled = useFeatureFlag(FeatureFlags.V2Explore)\n  const {\n    loading: loadingV3,\n    error: errorV3,\n    data: dataV3,\n    fetchMore: fetchMoreV3,\n  } = useV3PoolTransactionsQuery({\n    variables: { first, chain: chainIdToBackendChain({ chainId, withFallback: true }), address },\n    skip: protocolVersion !== ProtocolVersion.V3,\n  })\n  const {\n    loading: loadingV2,\n    error: errorV2,\n    data: dataV2,\n    fetchMore: fetchMoreV2,\n  } = useV2PairTransactionsQuery({\n    variables: { first, chain: chainIdToBackendChain({ chainId, withFallback: true }), address },\n    skip: !chainId || protocolVersion !== ProtocolVersion.V2 || (chainId !== ChainId.MAINNET && !v2ExploreEnabled),\n  })\n  const loadingMore = useRef(false)\n  const { transactions, loading, fetchMore, error } =\n    protocolVersion === ProtocolVersion.V3\n      ? { transactions: dataV3?.v3Pool?.transactions, loading: loadingV3, fetchMore: fetchMoreV3, error: errorV3 }\n      : { transactions: dataV2?.v2Pair?.transactions, loading: loadingV2, fetchMore: fetchMoreV2, error: errorV2 }\n\n  const loadMore = useCallback(\n    ({ onComplete }: { onComplete?: () => void }) => {\n      if (loadingMore.current) {\n        return\n      }\n      loadingMore.current = true\n      fetchMore({\n        variables: {\n          cursor: transactions?.[transactions.length - 1]?.timestamp,\n        },\n        updateQuery: (prev, { fetchMoreResult }: any) => {\n          if (!fetchMoreResult) return prev\n          onComplete?.()\n          const mergedData =\n            protocolVersion === ProtocolVersion.V3\n              ? {\n                  v3Pool: {\n                    ...fetchMoreResult.v3Pool,\n                    transactions: [\n                      ...((prev as V3PoolTransactionsQuery).v3Pool?.transactions ?? []),\n                      ...fetchMoreResult.v3Pool.transactions,\n                    ],\n                  },\n                }\n              : {\n                  v2Pair: {\n                    ...fetchMoreResult.v2Pair,\n                    transactions: [\n                      ...((prev as V2PairTransactionsQuery).v2Pair?.transactions ?? []),\n                      ...fetchMoreResult.v2Pair.transactions,\n                    ],\n                  },\n                }\n          loadingMore.current = false\n          return mergedData\n        },\n      })\n    },\n    [fetchMore, transactions, protocolVersion]\n  )\n\n  const filteredTransactions = useMemo(() => {\n    return (transactions ?? [])\n      ?.map((tx) => {\n        if (!tx) {\n          return undefined\n        }\n        const tokenIn = parseFloat(tx.token0Quantity) > 0 ? tx.token0 : tx.token1\n        const isSell = tokenIn?.address?.toLowerCase() === token0?.address?.toLowerCase()\n        const type =\n          tx.type === PoolTransactionType.Swap\n            ? isSell\n              ? PoolTableTransactionType.SELL\n              : PoolTableTransactionType.BUY\n            : tx.type === PoolTransactionType.Remove\n            ? PoolTableTransactionType.BURN\n            : PoolTableTransactionType.MINT\n        if (!filter.includes(type)) return undefined\n        return {\n          timestamp: tx.timestamp,\n          transaction: tx.hash,\n          pool: {\n            token0: {\n              id: tx.token0.address ?? '',\n              symbol: tx.token0.symbol ?? '',\n            },\n            token1: {\n              id: tx.token1.address ?? '',\n              symbol: tx.token1.symbol ?? '',\n            },\n          },\n          maker: tx.account,\n          amount0: parseFloat(tx.token0Quantity),\n          amount1: parseFloat(tx.token1Quantity),\n          amountUSD: tx.usdValue.value,\n          type,\n        }\n      })\n      .filter((value: PoolTableTransaction | undefined): value is PoolTableTransaction => value !== undefined)\n  }, [transactions, filter, token0?.address])\n\n  return useMemo(() => {\n    return {\n      transactions: filteredTransactions,\n      loading,\n      loadMore,\n      error,\n    }\n  }, [filteredTransactions, loading, loadMore, error])\n}\n","import { createColumnHelper } from '@tanstack/react-table'\nimport Row from 'components/Row'\nimport { Table } from 'components/Table'\nimport { Cell } from 'components/Table/Cell'\nimport { Filter } from 'components/Table/Filter'\nimport { FilterHeaderRow, HeaderArrow, HeaderSortText, TimestampCell } from 'components/Table/styled'\nimport { useChainFromUrlParam } from 'constants/chains'\nimport { NATIVE_CHAIN_ID, WRAPPED_NATIVE_CURRENCY } from 'constants/tokens'\nimport {\n  PoolTableTransaction,\n  PoolTableTransactionType,\n  usePoolTransactions,\n} from 'graphql/data/pools/usePoolTransactions'\nimport { getSupportedGraphQlChain, supportedChainIdFromGQLChain } from 'graphql/data/util'\nimport { OrderDirection, Transaction_OrderBy } from 'graphql/thegraph/__generated__/types-and-hooks'\nimport { useActiveLocalCurrency } from 'hooks/useActiveLocalCurrency'\nimport { Trans } from 'i18n'\nimport { useMemo, useReducer, useState } from 'react'\nimport styled from 'styled-components'\nimport { ExternalLink, ThemedText } from 'theme/components'\nimport { ProtocolVersion, Token } from 'uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks'\nimport { shortenAddress } from 'utilities/src/addresses'\nimport { NumberType, useFormatter } from 'utils/formatNumbers'\nimport { ExplorerDataType, getExplorerLink } from 'utils/getExplorerLink'\n\nconst StyledExternalLink = styled(ExternalLink)`\n  color: ${({ theme }) => theme.neutral2};\n  stroke: ${({ theme }) => theme.neutral2};\n`\n\nconst TableWrapper = styled.div`\n  min-height: 256px;\n`\n\ntype PoolTxTableSortState = {\n  sortBy: Transaction_OrderBy\n  sortDirection: OrderDirection\n}\n\nenum PoolTransactionColumn {\n  Timestamp,\n  Type,\n  MakerAddress,\n  FiatValue,\n  InputAmount,\n  OutputAmount,\n}\n\nconst PoolTransactionColumnWidth: { [key in PoolTransactionColumn]: number } = {\n  [PoolTransactionColumn.Timestamp]: 120,\n  [PoolTransactionColumn.Type]: 144,\n  [PoolTransactionColumn.MakerAddress]: 100,\n  [PoolTransactionColumn.FiatValue]: 125,\n  [PoolTransactionColumn.InputAmount]: 125,\n  [PoolTransactionColumn.OutputAmount]: 125,\n}\n\nfunction comparePoolTokens(tokenA: PoolTableTransaction['pool']['token0'], tokenB?: Token) {\n  if (tokenB?.address === NATIVE_CHAIN_ID) {\n    const chainId = supportedChainIdFromGQLChain(tokenB.chain)\n    return chainId && tokenA.id.toLowerCase() === WRAPPED_NATIVE_CURRENCY[chainId]?.address.toLowerCase()\n  }\n  return tokenA.id.toLowerCase() === tokenB?.address?.toLowerCase()\n}\n\nexport function PoolDetailsTransactionsTable({\n  poolAddress,\n  token0,\n  token1,\n  protocolVersion,\n}: {\n  poolAddress: string\n  token0?: Token\n  token1?: Token\n  protocolVersion?: ProtocolVersion\n}) {\n  const chain = getSupportedGraphQlChain(useChainFromUrlParam(), { fallbackToEthereum: true })\n  const activeLocalCurrency = useActiveLocalCurrency()\n  const { formatNumber, formatFiatPrice } = useFormatter()\n  const [filterModalIsOpen, toggleFilterModal] = useReducer((s) => !s, false)\n  const [filter, setFilters] = useState<PoolTableTransactionType[]>([\n    PoolTableTransactionType.BUY,\n    PoolTableTransactionType.SELL,\n    PoolTableTransactionType.BURN,\n    PoolTableTransactionType.MINT,\n  ])\n\n  const [sortState] = useState<PoolTxTableSortState>({\n    sortBy: Transaction_OrderBy.Timestamp,\n    sortDirection: OrderDirection.Desc,\n  })\n  const { transactions, loading, loadMore, error } = usePoolTransactions(\n    poolAddress,\n    chain.id,\n    filter,\n    token0,\n    protocolVersion\n  )\n\n  const showLoadingSkeleton = loading || !!error\n  const columns = useMemo(() => {\n    const columnHelper = createColumnHelper<PoolTableTransaction>()\n    return [\n      columnHelper.accessor((row) => row, {\n        id: 'timestamp',\n        header: () => (\n          <Cell minWidth={PoolTransactionColumnWidth[PoolTransactionColumn.Timestamp]} justifyContent=\"flex-start\">\n            <Row gap=\"4px\">\n              {sortState.sortBy === Transaction_OrderBy.Timestamp && <HeaderArrow direction={OrderDirection.Desc} />}\n              <HeaderSortText $active={sortState.sortBy === Transaction_OrderBy.Timestamp}>\n                <Trans>Time</Trans>\n              </HeaderSortText>\n            </Row>\n          </Cell>\n        ),\n        cell: (row) => (\n          <Cell\n            loading={showLoadingSkeleton}\n            minWidth={PoolTransactionColumnWidth[PoolTransactionColumn.Timestamp]}\n            justifyContent=\"flex-start\"\n          >\n            <TimestampCell\n              timestamp={Number(row.getValue?.().timestamp)}\n              link={getExplorerLink(chain.id, row.getValue?.().transaction, ExplorerDataType.TRANSACTION)}\n            />\n          </Cell>\n        ),\n      }),\n      columnHelper.accessor(\n        (row) => {\n          let color, text\n          if (row.type === PoolTableTransactionType.BUY) {\n            color = 'success'\n            text = (\n              <span>\n                <Trans>Buy</Trans>&nbsp;{token0?.symbol}\n              </span>\n            )\n          } else if (row.type === PoolTableTransactionType.SELL) {\n            color = 'critical'\n            text = (\n              <span>\n                <Trans>Sell</Trans>&nbsp;{token0?.symbol}\n              </span>\n            )\n          } else {\n            color = row.type === PoolTableTransactionType.MINT ? 'success' : 'critical'\n            text = row.type === PoolTableTransactionType.MINT ? <Trans>Add</Trans> : <Trans>Remove</Trans>\n          }\n          return <ThemedText.BodyPrimary color={color}>{text}</ThemedText.BodyPrimary>\n        },\n        {\n          id: 'swap-type',\n          header: () => (\n            <Cell minWidth={PoolTransactionColumnWidth[PoolTransactionColumn.Type]} justifyContent=\"flex-start\">\n              <FilterHeaderRow modalOpen={filterModalIsOpen} onClick={() => toggleFilterModal()}>\n                <Filter\n                  allFilters={Object.values(PoolTableTransactionType)}\n                  activeFilter={filter}\n                  setFilters={setFilters}\n                  isOpen={filterModalIsOpen}\n                  toggleFilterModal={toggleFilterModal}\n                />\n                <ThemedText.BodySecondary>\n                  <Trans>Type</Trans>\n                </ThemedText.BodySecondary>\n              </FilterHeaderRow>\n            </Cell>\n          ),\n          cell: (PoolTransactionTableType) => (\n            <Cell\n              loading={showLoadingSkeleton}\n              minWidth={PoolTransactionColumnWidth[PoolTransactionColumn.Type]}\n              justifyContent=\"flex-start\"\n            >\n              {PoolTransactionTableType.getValue?.()}\n            </Cell>\n          ),\n        }\n      ),\n      columnHelper.accessor((row) => row.amountUSD, {\n        id: 'fiat-value',\n        header: () => (\n          <Cell minWidth={PoolTransactionColumnWidth[PoolTransactionColumn.FiatValue]} justifyContent=\"flex-end\" grow>\n            <ThemedText.BodySecondary>{activeLocalCurrency}</ThemedText.BodySecondary>\n          </Cell>\n        ),\n        cell: (fiat) => (\n          <Cell\n            loading={showLoadingSkeleton}\n            minWidth={PoolTransactionColumnWidth[PoolTransactionColumn.FiatValue]}\n            justifyContent=\"flex-end\"\n            grow\n          >\n            <ThemedText.BodyPrimary>{formatFiatPrice({ price: fiat.getValue?.() })}</ThemedText.BodyPrimary>\n          </Cell>\n        ),\n      }),\n      columnHelper.accessor((row) => (comparePoolTokens(row.pool.token0, token0) ? row.amount0 : row.amount1), {\n        id: 'input-amount',\n        header: () => (\n          <Cell\n            loading={showLoadingSkeleton}\n            minWidth={PoolTransactionColumnWidth[PoolTransactionColumn.InputAmount]}\n            justifyContent=\"flex-end\"\n            grow\n          >\n            <ThemedText.BodySecondary>{token0?.symbol}</ThemedText.BodySecondary>\n          </Cell>\n        ),\n        cell: (inputTokenAmount) => (\n          <Cell\n            loading={showLoadingSkeleton}\n            minWidth={PoolTransactionColumnWidth[PoolTransactionColumn.InputAmount]}\n            justifyContent=\"flex-end\"\n            grow\n          >\n            <ThemedText.BodyPrimary>\n              {formatNumber({ input: Math.abs(inputTokenAmount.getValue?.() ?? 0), type: NumberType.TokenTx })}\n            </ThemedText.BodyPrimary>\n          </Cell>\n        ),\n      }),\n      columnHelper.accessor((row) => (comparePoolTokens(row.pool.token0, token0) ? row.amount1 : row.amount0), {\n        id: 'output-amount',\n        header: () => (\n          <Cell\n            loading={showLoadingSkeleton}\n            minWidth={PoolTransactionColumnWidth[PoolTransactionColumn.OutputAmount]}\n            justifyContent=\"flex-end\"\n            grow\n          >\n            <ThemedText.BodySecondary>{token1?.symbol}</ThemedText.BodySecondary>\n          </Cell>\n        ),\n        cell: (outputTokenAmount) => (\n          <Cell\n            loading={showLoadingSkeleton}\n            minWidth={PoolTransactionColumnWidth[PoolTransactionColumn.OutputAmount]}\n            justifyContent=\"flex-end\"\n            grow\n          >\n            <ThemedText.BodyPrimary>\n              {formatNumber({ input: Math.abs(outputTokenAmount.getValue?.() ?? 0), type: NumberType.TokenTx })}\n            </ThemedText.BodyPrimary>\n          </Cell>\n        ),\n      }),\n      columnHelper.accessor((row) => row.maker, {\n        id: 'maker-address',\n        header: () => (\n          <Cell\n            minWidth={PoolTransactionColumnWidth[PoolTransactionColumn.MakerAddress]}\n            justifyContent=\"flex-end\"\n            grow\n          >\n            <ThemedText.BodySecondary>\n              <Trans>Wallet</Trans>\n            </ThemedText.BodySecondary>\n          </Cell>\n        ),\n        cell: (makerAddress) => (\n          <Cell\n            loading={showLoadingSkeleton}\n            minWidth={PoolTransactionColumnWidth[PoolTransactionColumn.MakerAddress]}\n            justifyContent=\"flex-end\"\n            grow\n          >\n            <StyledExternalLink href={getExplorerLink(chain.id, makerAddress.getValue?.(), ExplorerDataType.ADDRESS)}>\n              <ThemedText.BodyPrimary>{shortenAddress(makerAddress.getValue?.(), 0)}</ThemedText.BodyPrimary>\n            </StyledExternalLink>\n          </Cell>\n        ),\n      }),\n    ]\n  }, [\n    activeLocalCurrency,\n    chain.id,\n    filter,\n    filterModalIsOpen,\n    formatFiatPrice,\n    formatNumber,\n    showLoadingSkeleton,\n    sortState.sortBy,\n    token0,\n    token1?.symbol,\n  ])\n\n  return (\n    <TableWrapper data-testid=\"pool-details-transactions-table\">\n      <Table\n        columns={columns}\n        data={transactions}\n        loading={loading}\n        error={error}\n        loadMore={loadMore}\n        maxHeight={600}\n      />\n    </TableWrapper>\n  )\n}\n","import { Pool } from '@uniswap/v3-sdk'\nimport { useWeb3React } from '@web3-react/core'\nimport useMultiChainPositions from 'components/AccountDrawer/MiniPortfolio/Pools/useMultiChainPositions'\nimport Column from 'components/Column'\nimport { PoolDetailsPositionsTable } from 'components/Pools/PoolDetails/PoolDetailsPositionsTable'\nimport Row from 'components/Row'\nimport { getSupportedGraphQlChain } from 'graphql/data/util'\nimport { Trans } from 'i18n'\nimport { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { ClickableStyle, ThemedText } from 'theme/components'\nimport { ProtocolVersion, Token } from 'uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks'\n\nimport { useChainFromUrlParam } from 'constants/chains'\nimport { PoolDetailsTransactionsTable } from './PoolDetailsTransactionsTable'\n\nenum PoolDetailsTableTabs {\n  TRANSACTIONS = 'transactions',\n  POSITIONS = 'positions',\n}\n\nconst TableHeader = styled(ThemedText.HeadlineMedium)<{ active: boolean }>`\n  color: ${({ theme, active }) => !active && theme.neutral2};\n  ${({ disabled }) => !disabled && ClickableStyle}\n  user-select: none;\n`\n\nexport function PoolDetailsTableTab({\n  poolAddress,\n  token0,\n  token1,\n  protocolVersion,\n}: {\n  poolAddress: string\n  token0?: Token\n  token1?: Token\n  protocolVersion?: ProtocolVersion\n}) {\n  const [activeTable, setActiveTable] = useState<PoolDetailsTableTabs>(PoolDetailsTableTabs.TRANSACTIONS)\n  const chain = getSupportedGraphQlChain(useChainFromUrlParam(), { fallbackToEthereum: true })\n  const { account } = useWeb3React()\n  const { positions } = useMultiChainPositions(account ?? '', [chain.id])\n  const positionsInThisPool = useMemo(\n    () =>\n      positions?.filter(\n        (position) =>\n          Pool.getAddress(position.pool.token0, position.pool.token1, position.pool.fee).toLowerCase() ===\n          poolAddress.toLowerCase()\n      ) ?? [],\n    [poolAddress, positions]\n  )\n  return (\n    <Column gap=\"lg\">\n      <Row gap=\"16px\">\n        <TableHeader\n          active={activeTable === PoolDetailsTableTabs.TRANSACTIONS}\n          onClick={() => setActiveTable(PoolDetailsTableTabs.TRANSACTIONS)}\n          disabled={!positionsInThisPool.length}\n        >\n          <Trans>Transactions</Trans>\n        </TableHeader>\n        {Boolean(positionsInThisPool.length) && (\n          <TableHeader\n            active={activeTable === PoolDetailsTableTabs.POSITIONS}\n            onClick={() => setActiveTable(PoolDetailsTableTabs.POSITIONS)}\n          >\n            <Trans>Positions</Trans>\n            {` (${positionsInThisPool?.length})`}\n          </TableHeader>\n        )}\n      </Row>\n      {activeTable === PoolDetailsTableTabs.TRANSACTIONS ? (\n        <PoolDetailsTransactionsTable\n          poolAddress={poolAddress}\n          token0={token0}\n          token1={token1}\n          protocolVersion={protocolVersion}\n        />\n      ) : (\n        <PoolDetailsPositionsTable positions={positionsInThisPool} />\n      )}\n    </Column>\n  )\n}\n","import { ChainId } from '@uniswap/sdk-core'\nimport { SupportedInterfaceChainId, chainIdToBackendChain } from 'constants/chains'\nimport { V2_BIPS } from 'graphql/data/pools/useTopPools'\nimport ms from 'ms'\nimport { useMemo } from 'react'\nimport {\n  ProtocolVersion,\n  Token,\n  useV2PairQuery,\n  useV3PoolQuery,\n} from 'uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks'\nimport { FeatureFlags } from 'uniswap/src/features/gating/flags'\nimport { useFeatureFlag } from 'uniswap/src/features/gating/hooks'\n\nexport interface PoolData {\n  // basic pool info\n  address: string\n  feeTier?: number\n  txCount?: number\n  protocolVersion?: ProtocolVersion\n\n  // token info\n  token0: Token\n  tvlToken0?: number\n  token0Price?: number\n\n  token1: Token\n  tvlToken1?: number\n  token1Price?: number\n\n  // volume\n  volumeUSD24H?: number\n  volumeUSD24HChange?: number\n\n  // liquidity\n  tvlUSD?: number\n  tvlUSDChange?: number\n}\n\ntype VolumeChange = { value: number; timestamp: number }\n\n/**\n * Given an array of historical volume, calculate the 24h % change in volume\n */\nfunction calc24HVolChange(historicalVolume?: (VolumeChange | undefined)[]) {\n  if (!historicalVolume) {\n    return undefined\n  }\n  const currentTime = new Date().getTime()\n  const dayAgo = (currentTime - ms('1d')) / 1000\n  const twoDaysAgo = (currentTime - ms('2d')) / 1000\n\n  const volume24h = historicalVolume\n    .filter((entry): entry is VolumeChange => entry?.timestamp !== undefined && entry.timestamp >= dayAgo)\n    .reduce((acc, cur) => acc + cur.value, 0)\n  const volume48h = historicalVolume\n    .filter(\n      (entry): entry is VolumeChange =>\n        entry?.timestamp !== undefined && entry.timestamp >= twoDaysAgo && entry.timestamp < dayAgo\n    )\n    .reduce((acc, cur) => acc + cur.value, 0)\n  return ((volume24h - volume48h) / volume48h) * 100\n}\n\n/**\n * Queries both v3 and v2 for pool data\n * @param poolAddress\n * @param chainId\n * @returns\n */\nexport function usePoolData(\n  poolAddress: string,\n  chainId?: SupportedInterfaceChainId\n): {\n  loading: boolean\n  error: boolean\n  data?: PoolData\n} {\n  const v2ExploreEnabled = useFeatureFlag(FeatureFlags.V2Explore)\n  const {\n    loading: loadingV3,\n    error: errorV3,\n    data: dataV3,\n  } = useV3PoolQuery({\n    variables: { chain: chainIdToBackendChain({ chainId, withFallback: true }), address: poolAddress },\n    errorPolicy: 'all',\n  })\n  const {\n    loading: loadingV2,\n    error: errorV2,\n    data: dataV2,\n  } = useV2PairQuery({\n    variables: { chain: chainIdToBackendChain({ chainId, withFallback: true }), address: poolAddress },\n    skip: !chainId || (chainId !== ChainId.MAINNET && !v2ExploreEnabled),\n    errorPolicy: 'all',\n  })\n\n  return useMemo(() => {\n    const anyError = Boolean(errorV3 || (errorV2 && (chainId === ChainId.MAINNET || v2ExploreEnabled)))\n    const anyLoading = Boolean(loadingV3 || (loadingV2 && (chainId === ChainId.MAINNET || v2ExploreEnabled)))\n\n    const pool = dataV3?.v3Pool ?? dataV2?.v2Pair ?? undefined\n    const feeTier = dataV3?.v3Pool?.feeTier ?? V2_BIPS\n\n    return {\n      data: pool\n        ? {\n            address: pool.address,\n            txCount: pool.txCount,\n            protocolVersion: pool.protocolVersion,\n            token0: pool.token0 as Token,\n            tvlToken0: pool.token0Supply,\n            token0Price: pool.token0?.project?.markets?.[0]?.price?.value,\n            token1: pool.token1 as Token,\n            tvlToken1: pool.token1Supply,\n            token1Price: pool.token1?.project?.markets?.[0]?.price?.value,\n            feeTier,\n            volumeUSD24H: pool.volume24h?.value,\n            volumeUSD24HChange: calc24HVolChange(pool.historicalVolume?.concat()),\n            tvlUSD: pool.totalLiquidity?.value,\n            tvlUSDChange: pool.totalLiquidityPercentChange24h?.value,\n          }\n        : undefined,\n      error: anyError,\n      loading: anyLoading,\n    }\n  }, [chainId, dataV2?.v2Pair, dataV3?.v3Pool, errorV2, errorV3, loadingV2, loadingV3, v2ExploreEnabled])\n}\n","import { PoolData } from 'graphql/data/pools/usePoolData'\nimport { t } from 'i18n'\n\nexport const getPoolDetailPageTitle = (poolData?: PoolData) => {\n  const token0Symbol = poolData?.token0.symbol\n  const token1Symbol = poolData?.token1.symbol\n  const baseTitle = t`Buy and sell on Uniswap`\n  if (!token0Symbol || !token1Symbol) {\n    return baseTitle\n  }\n\n  return `${token0Symbol}/${token1Symbol}: ${baseTitle}`\n}\n","import { InterfacePageName } from '@uniswap/analytics-events'\nimport { Trace } from 'analytics'\nimport Column from 'components/Column'\nimport ChartSection from 'components/Pools/PoolDetails/ChartSection'\nimport { PoolDetailsBreadcrumb, PoolDetailsHeader } from 'components/Pools/PoolDetails/PoolDetailsHeader'\nimport { PoolDetailsLink } from 'components/Pools/PoolDetails/PoolDetailsLink'\nimport { PoolDetailsStats } from 'components/Pools/PoolDetails/PoolDetailsStats'\nimport { PoolDetailsStatsButtons } from 'components/Pools/PoolDetails/PoolDetailsStatsButtons'\nimport { PoolDetailsTableTab } from 'components/Pools/PoolDetails/PoolDetailsTable'\nimport Row from 'components/Row'\nimport { useChainFromUrlParam } from 'constants/chains'\nimport { PoolData, usePoolData } from 'graphql/data/pools/usePoolData'\nimport { getSupportedGraphQlChain, gqlToCurrency, unwrapToken } from 'graphql/data/util'\nimport { useColor } from 'hooks/useColor'\nimport { Trans } from 'i18n'\nimport NotFound from 'pages/NotFound'\nimport { getPoolDetailPageTitle } from 'pages/PoolDetails/utils'\nimport { useDynamicMetatags } from 'pages/metatags'\nimport { useMemo, useReducer } from 'react'\nimport { Helmet } from 'react-helmet-async/lib/index'\nimport { useParams } from 'react-router-dom'\nimport { Text } from 'rebass'\nimport styled, { useTheme } from 'styled-components'\nimport { BREAKPOINTS, ThemeProvider } from 'theme'\nimport { isAddress } from 'utilities/src/addresses'\n\nconst PageWrapper = styled(Row)`\n  padding: 0 16px 52px;\n  justify-content: center;\n  width: 100%;\n  gap: 40px;\n  align-items: flex-start;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint.md}px) {\n    padding: 48px 20px;\n  }\n  @media screen and (max-width: ${({ theme }) => theme.breakpoint.lg}px) {\n    flex-direction: column;\n    align-items: center;\n    gap: 0px;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint.xl}px) {\n    gap: 60px;\n  }\n`\n\nconst LeftColumn = styled(Column)`\n  gap: 40px;\n  max-width: 780px;\n  overflow: hidden;\n  justify-content: flex-start;\n\n  @media (max-width: ${BREAKPOINTS.lg}px) {\n    width: 100%;\n    max-width: unset;\n  }\n`\n\nconst HR = styled.hr`\n  border: 0.5px solid ${({ theme }) => theme.surface3};\n  width: 100%;\n`\n\nconst RightColumn = styled(Column)`\n  gap: 24px;\n  width: 360px;\n\n  @media (max-width: ${BREAKPOINTS.lg}px) {\n    margin: 44px 0px;\n    width: 100%;\n    min-width: unset;\n    & > *:first-child {\n      margin-top: -24px;\n    }\n  }\n`\n\nconst TokenDetailsWrapper = styled(Column)`\n  gap: 24px;\n  padding: 20px;\n\n  @media (max-width: ${BREAKPOINTS.lg}px) and (min-width: ${BREAKPOINTS.sm}px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: unset;\n  }\n\n  @media (max-width: ${BREAKPOINTS.sm}px) {\n    padding: unset;\n  }\n`\n\nconst TokenDetailsHeader = styled(Text)`\n  width: 100%;\n  font-size: 24px;\n  font-weight: 485;\n  line-height: 32px;\n`\n\nconst LinksContainer = styled(Column)`\n  gap: 16px;\n  width: 100%;\n`\n\nfunction getUnwrappedPoolToken(poolData?: PoolData, chainId?: number) {\n  return poolData?.token0 && poolData?.token1 && chainId\n    ? [unwrapToken(chainId, poolData?.token0), unwrapToken(chainId, poolData?.token1)]\n    : [undefined, undefined]\n}\n\nexport default function PoolDetailsPage() {\n  const { poolAddress } = useParams<{ poolAddress: string }>()\n  const chainInfo = getSupportedGraphQlChain(useChainFromUrlParam())\n  const { data: poolData, loading } = usePoolData(poolAddress?.toLowerCase() ?? '', chainInfo?.id)\n  const [isReversed, toggleReversed] = useReducer((x) => !x, false)\n  const unwrappedTokens = getUnwrappedPoolToken(poolData, chainInfo?.id)\n  const [token0, token1] = isReversed ? [unwrappedTokens?.[1], unwrappedTokens?.[0]] : unwrappedTokens\n\n  const { darkMode, surface2, accent1 } = useTheme()\n  const color0 = useColor(token0 && gqlToCurrency(token0), {\n    backgroundColor: surface2,\n    darkMode,\n  })\n  const color1 = useColor(token1 && gqlToCurrency(token1), {\n    backgroundColor: surface2,\n    darkMode,\n  })\n\n  const isInvalidPool = !poolAddress || !chainInfo || !isAddress(poolAddress)\n  const poolNotFound = (!loading && !poolData) || isInvalidPool\n\n  const metatagProperties = useMemo(() => {\n    const token0Symbol = poolData?.token0.symbol\n    const token1Symbol = poolData?.token1.symbol\n    const poolName = `${token0Symbol}/${token1Symbol}`\n    const chainName = chainInfo?.label ?? 'Ethereum'\n    return {\n      title: poolName,\n      url: window.location.href,\n      description: `Swap ${poolName} on ${chainName}. Trade tokens and provide liquidity. Real-time prices, charts, transaction data, and more.`,\n    }\n  }, [chainInfo?.label, poolData?.token0.symbol, poolData?.token1.symbol])\n  const metatags = useDynamicMetatags(metatagProperties)\n\n  if (poolNotFound) return <NotFound />\n  return (\n    <ThemeProvider token0={color0 !== accent1 ? color0 : undefined} token1={color1 !== accent1 ? color1 : undefined}>\n      <Helmet>\n        <title>{getPoolDetailPageTitle(poolData)}</title>\n        {metatags.map((tag, index) => (\n          <meta key={index} {...tag} />\n        ))}\n      </Helmet>\n      <Trace\n        page={InterfacePageName.POOL_DETAILS_PAGE}\n        properties={{\n          poolAddress,\n          chainId: chainInfo?.id,\n          feeTier: poolData?.feeTier,\n          token0Address: poolData?.token0.address,\n          token1Address: poolData?.token1.address,\n          token0Symbol: poolData?.token0.symbol,\n          token1Symbol: poolData?.token1.symbol,\n          token0Name: poolData?.token0.name,\n          token1Name: poolData?.token1.name,\n        }}\n        shouldLogImpression={!loading}\n      >\n        <PageWrapper>\n          <LeftColumn>\n            <Column gap=\"20px\">\n              <Column>\n                <PoolDetailsBreadcrumb\n                  chainId={chainInfo?.id}\n                  poolAddress={poolAddress}\n                  token0={token0}\n                  token1={token1}\n                  loading={loading}\n                />\n                <PoolDetailsHeader\n                  chainId={chainInfo?.id}\n                  poolAddress={poolAddress}\n                  token0={token0}\n                  token1={token1}\n                  feeTier={poolData?.feeTier}\n                  protocolVersion={poolData?.protocolVersion}\n                  toggleReversed={toggleReversed}\n                  loading={loading}\n                />\n              </Column>\n              <ChartSection\n                poolData={poolData}\n                loading={loading}\n                isReversed={isReversed}\n                chain={chainInfo?.backendChain.chain}\n              />\n            </Column>\n            <HR />\n            <PoolDetailsTableTab\n              poolAddress={poolAddress}\n              token0={token0}\n              token1={token1}\n              protocolVersion={poolData?.protocolVersion}\n            />\n          </LeftColumn>\n          <RightColumn>\n            <PoolDetailsStatsButtons\n              chainId={chainInfo?.id}\n              token0={token0}\n              token1={token1}\n              feeTier={poolData?.feeTier}\n              loading={loading}\n            />\n            <PoolDetailsStats poolData={poolData} isReversed={isReversed} chainId={chainInfo?.id} loading={loading} />\n            <TokenDetailsWrapper>\n              <TokenDetailsHeader>\n                <Trans>Links</Trans>\n              </TokenDetailsHeader>\n              <LinksContainer>\n                <PoolDetailsLink\n                  address={poolAddress}\n                  chainId={chainInfo?.id}\n                  tokens={[token0, token1]}\n                  loading={loading}\n                />\n                <PoolDetailsLink\n                  address={token0?.address}\n                  chainId={chainInfo?.id}\n                  tokens={[token0]}\n                  loading={loading}\n                />\n                <PoolDetailsLink\n                  address={token1?.address}\n                  chainId={chainInfo?.id}\n                  tokens={[token1]}\n                  loading={loading}\n                />\n              </LinksContainer>\n            </TokenDetailsWrapper>\n          </RightColumn>\n        </PageWrapper>\n      </Trace>\n    </ThemeProvider>\n  )\n}\n","import { ChainId, Currency } from '@uniswap/sdk-core'\nimport { NATIVE_CHAIN_ID } from 'constants/tokens'\nimport { supportedChainIdFromGQLChain } from 'graphql/data/util'\nimport { Chain, TokenStandard } from 'uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks'\n\nexport type CurrencyKey = string\n\nexport function buildCurrencyKey(chainId: ChainId, address: string): CurrencyKey {\n  // We lowercase for compatibility/indexability between gql tokens and sdk currencies\n  return `${chainId}-${address.toLowerCase()}`\n}\n\nexport function currencyKey(currency: Currency): CurrencyKey {\n  return buildCurrencyKey(currency.chainId, currency.isToken ? currency.address : NATIVE_CHAIN_ID)\n}\n\nexport function currencyKeyFromGraphQL(contract: {\n  address?: string\n  chain: Chain\n  standard?: TokenStandard\n}): CurrencyKey {\n  const chainId = supportedChainIdFromGQLChain(contract.chain)\n  const address = contract.standard === TokenStandard.Native ? NATIVE_CHAIN_ID : contract.address\n  if (!address) throw new Error('Non-native token missing address')\n  if (!chainId) throw new Error('Unsupported chain from pools query')\n  return buildCurrencyKey(chainId, address)\n}\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Plus","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","propTypes","displayName","useContractMultichain","addressMap","ABI","chainIds","chainId","walletChainId","provider","walletProvider","useWeb3React","isSupportedChain","useIsSupportedChainIdCallback","useMemo","map","parseInt","filter","reduce","acc","RPC_PROVIDERS","undefined","getContract","useV3ManagerContracts","V3NFT_ADDRESSES","NFTPositionManagerJSON","useInterfaceMulticallContracts","MULTICALL_ADDRESSES","MulticallJSON","usePoolPriceMap","positions","data","contracts","contractMap","pool","token0","token1","currencyKey","toContractInput","values","loading","useUniswapPricesQuery","variables","skip","priceMap","tokens","current","currencyKeyFromGraphQL","project","markets","price","value","pricesLoading","httpLink","HttpLink","uri","CHAIN_SUBGRAPH_URL","ChainId","MAINNET","authMiddleware","ApolloLink","operation","forward","store","getState","application","setContext","isSupportedChainId","apolloClient","ApolloClient","cache","InMemoryCache","link","concat","chainToApolloClient","fromEntries","entries","url","PRICE_FIXED_DIGITS","computeSurroundingTicks","activeTickProcessed","sortedTickData","pivot","ascending","previousTickProcessed","processedTicks","tick","Number","sdkPrice","tickToPrice","currentTickProcessed","liquidityActive","liquidityNet","JSBI","price0","toFixed","push","reverse","getActiveTick","tickCurrent","feeAmount","Math","floor","TICK_SPACINGS","MAX_THE_GRAPH_TICK_FETCH_VALUE","useAllV3Ticks","currencyA","currencyB","skipNumber","setSkipNumber","useState","subgraphTickData","setSubgraphTickData","error","isLoading","poolAddress","Pool","getAddress","wrapped","V3_CORE_FACTORY_ADDRESSES","useAllV3TicksQuery","toLowerCase","pollInterval","ms","client","useTicksFromSubgraph","useEffect","ticks","tickData","usePoolActiveLiquidity","defaultChainId","usePoolMultichain","liquidity","sqrtPriceX96","sqrtRatioX96","currentTick","activeTick","PoolState","EXISTS","LOADING","findIndex","console","subsequentTicks","ticksProcessed","POOL_STATE_INTERFACE","Interface","IUniswapV3PoolStateJSON","getPoolAddress","factoryAddress","tokenA","tokenB","fee","addresses","MAX_ENTRIES","slice","address","addressA","addressB","toString","found","find","computePoolAddress","unshift","getPool","pools","usePools","poolKeys","useChainId","poolTokens","equals","sortsBefore","Array","poolAddresses","v3CoreFactoryAddress","PoolCache","slot0s","useMultipleContractSingleData","liquidities","_key","index","INVALID","result","slot0","slot0Loading","valid","slot0Valid","liquidityLoading","liquidityValid","NOT_EXISTS","eq","usePool","poolData","useRef","contract","e","Image","styled","img","Container","div","Header","PageWrapper","theme","breakpoint","md","NotFound","isDarkMode","useIsDarkMode","isMobile","useIsMobile","Title","ThemedText","LargeHeader","Hero","Paragraph","HeadlineMedium","HeadlineLarge","Trace","page","InterfacePageName","NOT_FOUND","shouldLogImpression","Trans","src","darkImage","lightImage","alt","SmallButtonPrimary","as","Link","to","LiquidityBarSeriesRenderer","_data","_options","constructor","props","hoveredTick","draw","priceConverter","useBitmapCoordinateSpace","scope","_drawImpl","update","options","renderingScope","priceToCoordinate","bars","visibleRange","ctx","context","bar","x","y","originalData","calculateColumnPositionsInPlace","barSpacing","horizontalPixelRatio","from","zeroY","fillStyle","tokenAColor","stack","column","isCurrentTick","isHoveredTick","min","max","right","left","margin","widthWithMargin","totalBox","positionsBox","verticalPixelRatio","highlightOffset","canvas","highlightLength","highlightColor","beginPath","roundRect","globalAlpha","tokenBColor","position","activeTickProgress","globalCompositeOperation","activeRangeAdjustedHeight","activeRangeAdjustedPosition","fillRect","LiquidityBarSeries","_renderer","_tokenAColor","_tokenBColor","_highlightColor","priceValueBuilder","plotRow","isWhitespace","renderer","defaultOptions","customSeriesDefaultOptions","LiquidityBarChartModel","ChartModel","series","chartDiv","params","super","api","addCustomSeries","setData","updateOptions","fitContent","localization","locale","rightPriceScale","visible","borderVisible","scaleMargins","top","bottom","autoScale","timeScale","fixLeftEdge","fixRightEdge","crosshair","horzLine","labelVisible","vertLine","grid","vertLines","horzLines","applyOptions","priceFormat","type","priceLineVisible","lastValueVisible","onSeriesHover","hoverData","updatedOptions","item","activeTickIndex","midPoint","setVisibleLogicalRange","MAX_UINT128","BigNumber","pow","sub","maxAmount","token","CurrencyAmount","fromRawAmount","calculateActiveRangeTokensLocked","feeTier","liqGross","mockTicks","liquidityGross","pool1","bottomOfRangePrice","TickMath","getSqrtRatioAtTick","token1Amount","getOutputAmount","amount0Locked","parseFloat","invert","quote","toExact","topOfRangePrice","token0Amount","amount1Locked","calculateTokensLocked","tickSpacing","nextSqrtX96","maxAmountToken0","useLiquidityBarData","isReversed","formatNumber","formatPrice","useFormatter","activePoolData","setTickData","formatData","barData","activeRangePercentage","activeRangeIndex","t","fakeTime","isActive","price1","NumberType","SwapDetailsAmount","time","entry","activeRangeData","activeTickTvl","PDP_CHART_HEIGHT_PX","PDP_CHART_SELECTOR_OPTIONS","ChartType","VOLUME","PRICE","LIQUIDITY","TimePeriodSelectorContainer","sm","ChartTypeSelectorContainer","StyledChart","Chart","PDPChartTypeSelector","chartType","onChartTypeChange","ChartTypeDropdown","currentChartType","onSelectOption","usePDPChartState","chain","protocolVersion","timePeriod","setTimePeriod","TimePeriod","DAY","setChartType","isV3","ProtocolVersion","V3","duration","toHistoryDuration","priceQuery","usePoolPriceHistoryQuery","priceHistory","v2Pair","v3Pool","referenceToken","token0Price","token1Price","timestamp","open","high","low","close","dataQuality","DataQuality","VALID","usePDPPriceChartData","volumeQuery","usePoolVolumeHistoryQuery","historicalVolume","amt","withUTCTimestamp","checkDataQuality","usePDPVolumeChartData","activeQuery","ChartSection","gqlToCurrency","Chain","Ethereum","refitChartContent","useAtomValue","refitChartContentAtom","ChartBody","ChartSkeleton","selectedChartProps","supportedChainIdFromGQLChain","LiquidityChart","errorText","stale","STALE","PriceChart","VolumeChart","filteredTimeOptions","DEFAULT_PILL_TIME_SELECTOR_OPTIONS","option","TimePeriodDisplay","HOUR","data-testid","ChartActionsContainer","PillMultiToggle","currentSelected","DISPLAYS","getTimePeriodFromDisplay","PriceDisplayContainer","ChartPriceText","EllipsisStyle","formatCurrencyAmount","primaryToken","PriceChartType","LINE","stablecoinPrice","useStablecoinPrice","lastPrice","Model","PriceChartModel","crosshairData","displayValue","currencyBAmountRaw","decimals","priceDisplay","symbol","amount","ChartHeader","additionalFields","PriceChartDelta","startingPrice","endingPrice","valueFormatterType","FiatTokenPrice","FadeInHeading","H1Medium","textFadeIn","FadeInSubheader","SubHeader","LiquidityTooltipDisplay","tokenADescriptor","tokenBDescriptor","displayValue0","input","TokenQuantityStats","displayValue1","BodySmall","name","useTheme","surface3","LoadingChart","TooltipBody","FeeAmount","LOWEST","displayPoint","display","paddingTop","DetailBubble","LoadingBubble","$height","$width","SmallDetailBubble","HeaderContainer","transition","medium","Badge","LabelMicro","surface2","ToggleReverseArrows","ReverseArrow","ClickableStyle","neutral2","IconBubble","PoolDetailsBreadcrumb","chainName","chainIdToBackendChain","withFallback","exploreOrigin","poolsOrigin","BreadcrumbNavContainer","aria-label","BreadcrumbNavLink","ChevronRight","CurrentPageBreadcrumb","poolName","StyledPoolDetailsTitle","PoolName","PoolDetailsTitle","toggleReversed","formatPercent","feePercent","Percent","BIPS_BASE","StyledLink","getTokenDetailsURL","V2","onClick","ContractsDropdownRowContainer","Row","ContractsDropdownRow","currency","isPool","currencies","isNative","NATIVE_CHAIN_ID","explorerUrl","getExplorerLink","ExplorerDataType","NATIVE","ADDRESS","TOKEN","StyledExternalLink","href","gap","DoubleCurrencyAndChainLogo","CurrencyLogo","BodyPrimary","BodySecondary","shortenAddress","ExternalLinkIcon","ContractsModalContainer","css","ActionMenuFlyoutStyle","PoolDetailsHeaderActions","contractsModalIsOpen","toggleContractsModal","useReducer","s","contractsRef","useOnClickOutside","justify","style","DropdownSelector","isOpen","toggleOpen","menuLabel","EtherscanLogo","neutral1","ExplorerIcon","internalMenuItems","tooltipText","hideChevron","buttonCss","ActionButtonStyle","menuFlyoutCss","ShareButton","PoolDetailsHeader","shouldColumnBreak","useScreenSize","Column","TokenName","BREAKPOINTS","lg","xs","TokenTextWrapper","isClickable","SymbolText","CopyAddress","StyledCopyIcon","Copy","ExplorerWrapper","ButtonsRow","PoolDetailsLink","isCopied","setCopied","useCopyClipboard","copy","useCallback","checksummedAddress","isAddress","navigate","useNavigate","handleTokenTextClick","truncateAddress","setTruncateAddress","onTextRender","textRef","clientWidth","scrollWidth","prev","align","Tooltip","placement","TooltipSize","Max","show","text","ExternalLink","padding","HeaderText","Text","StatsWrapper","loaded","StatItemColumn","PoolBalanceSymbols","PoolBalanceTokenNamesContainer","leftBarChartStyles","rightBarChartStyles","BalanceChartSide","percent","$color","isLeft","StatSectionBubble","StatHeaderBubble","PoolBalanceTokenNames","unwrappedToken","screenIsNotLarge","unwrapToken","nativeOnChain","marginRight","tvl","marginLeft","PoolDetailsStats","currency0","useCurrency","currency1","tvlToken0","tvlToken1","fullWidth","token0FullData","token1FullData","tvlUSD","StatItem","title","delta","tvlUSDChange","volumeUSD24H","volumeUSD24HChange","_","StatsTextContainer","StatItemText","formatDelta","FiatTokenStats","DeltaArrow","DEFAULT_GAS_LIMIT","Erc20","ERC20_ABI","Erc20Bytes32","fetchChunk","multicall","chunk","callStatic","returnData","code","message","half","Promise","all","then","c0","c1","parseTokens","items","Error","_v","arrayToSlices","parsedToken","nameData","symbolData","decimalsData","nameDataBytes32","symbolDataBytes32","success","decodeFunctionResult","DEFAULT_ERC20_DECIMALS","Token","tryParseToken","createCalls","callData","gasLimit","TokenPromiseCache","getTokensAsync","formattedAddresses","calls","previouslyCalledTokens","forEach","tokenAddress","buildCurrencyKey","previousCall","formattedAddress","encodeFunctionData","calledTokens","tokenMap","POSITION_CACHE_EXPIRY","cachedPositionsAtom","atom","poolAddressKey","details","poolAddressCacheAtom","atomWithStorage","tokenCacheAtom","useGetCachedTokens","chains","multicallContracts","tokenCache","setCache","useAtom","get","deserializeToken","set","serializeToken","useTokenCache","fetchRemoteTokens","fetched","getTokens","local","missing","Set","cached","add","DEFAULT_CHAINS","L1_CHAIN_IDS","L2_CHAIN_IDS","TESTNET_CHAIN_IDS","includes","useMultiChainPositions","account","cachedPositions","pms","multicalls","poolAddressCache","updateCache","c","usePoolAddressCache","setPositions","setCachedPositions","setPositionsAndStaleTimeout","setTimeout","useCachedPositions","positionsFetching","positionsLoading","feeMap","setFeeMap","fetchPositionFees","pm","positionIds","id","interface","tokenId","recipient","amount0Max","amount1Max","fees","feeBytes","fetchPositionIds","balance","toNumber","idByte","fetchPositionDetails","positionBytes","fetchPositionInfo","positionDetails","poolInterface","flatMap","poolPairs","owner","Position","tickLower","tickUpper","inRange","closed","createPositionInfo","debug","fetchPositionsForChain","balanceOf","lt","postionDetails","fetchAllPositions","flat","document","hasFocus","onFocus","window","removeEventListener","addEventListener","prices","PoolDetailsStatsButtonsRow","surface1","Z_INDEX","sticky","PoolButton","button","$open","accent1","opacify","timing","inOut","$fixedWidth","$hideOnMobile","SwapIcon","ButtonBubble","SwapModalWrapper","ease","SwapWrapperOuter","CurrencySelect","fixed","MobileBalance","PoolDetailsStatsButtons","balanceQuery","userOwnedPositions","findMatchingPosition","switchChain","useSwitchChain","useTokenBalancesQuery","balance0","balance1","balance0Fiat","balance1Fiat","filteredBalances","tokenBalance0","tokenBalance1","portfolios","tokenBalances","tokenBalance","quantity","denominatedValue","formattedBalance0","TokenNonTx","formattedBalance1","totalFiatValue","formattedFiatValue","PortfolioBalance","handleAddLiquidity","currencyId","swapModalOpen","toggleSwapModalOpen","state","isScreenSize","screenSizeLargerThanTablet","token0Warning","useTokenWarning","token1Warning","priorityWarning","getPriorityWarning","SubHeaderSmall","HeadlineSmall","Boolean","Caption","X","fontWeight","Swap","syncTabToUrl","initialInputCurrency","initialOutputCurrency","compact","disableTokenInputs","TokenSafetyMessage","warning","StrongWarning","plural","tokenSymbol","Scrim","$maxWidth","$zIndex","ClosedCircle","svg","g","clipPath","path","d","defs","rect","PositionTableWrapper","PositionWrapper","FeeTier","StatusWrapper","status","PositionStatus","IN_RANGE","OUT_OF_RANGE","deprecated_accentWarning","RangeWrapper","StyledDoubleArrow","DoubleArrow","RangeText","StyledDot","PositionRow","positionInfo","formatTickPrice","CLOSED","priceUpper","token0PriceLower","priceLower","token0PriceUpper","ticksAtLimit","LOWER","UPPER","MAX_SAFE_INTEGER","DoubleCurrencyLogo","AlertTriangle","atLimit","direction","Bound","PoolDetailsPositionsTable","PoolTableTransactionType","BUY","SELL","BURN","MINT","PoolTransactionDefaultQuerySize","TableWrapper","PoolTransactionColumn","Timestamp","Type","MakerAddress","FiatValue","InputAmount","OutputAmount","PoolTransactionColumnWidth","comparePoolTokens","WRAPPED_NATIVE_CURRENCY","PoolDetailsTransactionsTable","getSupportedGraphQlChain","useChainFromUrlParam","fallbackToEthereum","activeLocalCurrency","useActiveLocalCurrency","formatFiatPrice","filterModalIsOpen","toggleFilterModal","setFilters","sortState","sortBy","Transaction_OrderBy","sortDirection","OrderDirection","Desc","transactions","loadMore","first","dataV3","dataV2","v2ExploreEnabled","useFeatureFlag","FeatureFlags","V2Explore","loadingV3","errorV3","fetchMore","fetchMoreV3","useV3PoolTransactionsQuery","loadingV2","errorV2","fetchMoreV2","useV2PairTransactionsQuery","loadingMore","onComplete","cursor","updateQuery","fetchMoreResult","mergedData","filteredTransactions","tx","tokenIn","isSell","token0Quantity","PoolTransactionType","Remove","transaction","hash","maker","amount0","amount1","token1Quantity","amountUSD","usdValue","usePoolTransactions","showLoadingSkeleton","columns","columnHelper","createColumnHelper","accessor","row","header","Cell","minWidth","justifyContent","HeaderArrow","HeaderSortText","$active","cell","TimestampCell","getValue","TRANSACTION","span","FilterHeaderRow","modalOpen","Filter","allFilters","activeFilter","PoolTransactionTableType","grow","fiat","inputTokenAmount","abs","TokenTx","outputTokenAmount","makerAddress","Table","maxHeight","PoolDetailsTableTabs","TRANSACTIONS","POSITIONS","TableHeader","active","disabled","PoolDetailsTableTab","positionsInThisPool","activeTable","setActiveTable","calc24HVolChange","currentTime","Date","getTime","dayAgo","twoDaysAgo","volume24h","cur","volume48h","getPoolDetailPageTitle","token0Symbol","token1Symbol","baseTitle","xl","LeftColumn","HR","hr","RightColumn","TokenDetailsWrapper","TokenDetailsHeader","LinksContainer","PoolDetailsPage","chainInfo","unwrappedTokens","useParams","useV3PoolQuery","errorPolicy","useV2PairQuery","anyError","anyLoading","V2_BIPS","txCount","token0Supply","token1Supply","totalLiquidity","totalLiquidityPercentChange24h","usePoolData","getUnwrappedPoolToken","darkMode","color0","useColor","backgroundColor","color1","isInvalidPool","poolNotFound","metatagProperties","label","location","description","metatags","useDynamicMetatags","ThemeProvider","Helmet","tag","meta","POOL_DETAILS_PAGE","properties","token0Address","token1Address","token0Name","token1Name","backendChain","isToken","standard","TokenStandard","Native"],"sourceRoot":""}