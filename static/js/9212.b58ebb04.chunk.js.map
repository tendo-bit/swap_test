{"version":3,"file":"static/js/9212.b58ebb04.chunk.js","mappings":"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","sources":["components/AccountDrawer/MiniPortfolio/Pools/hooks.ts","components/Badge/RangeBadge.tsx","components/HoverInlineText/index.tsx","components/PositionListItem/index.tsx","hooks/useIsTickAtLimit.ts","hooks/usePools.ts","hooks/useV3Positions.ts","utils/currencyKey.ts"],"sourcesContent":["import {\n  ChainId,\n  MULTICALL_ADDRESSES,\n  Token,\n  NONFUNGIBLE_POSITION_MANAGER_ADDRESSES as V3NFT_ADDRESSES,\n} from '@uniswap/sdk-core'\nimport type { AddressMap } from '@uniswap/smart-order-router'\nimport NFTPositionManagerJSON from '@uniswap/v3-periphery/artifacts/contracts/NonfungiblePositionManager.sol/NonfungiblePositionManager.json'\nimport MulticallJSON from '@uniswap/v3-periphery/artifacts/contracts/lens/UniswapInterfaceMulticall.sol/UniswapInterfaceMulticall.json'\nimport { useWeb3React } from '@web3-react/core'\nimport { useIsSupportedChainIdCallback } from 'constants/chains'\nimport { RPC_PROVIDERS } from 'constants/providers'\nimport { BaseContract } from 'ethers/lib/ethers'\nimport { toContractInput } from 'graphql/data/util'\nimport useStablecoinPrice from 'hooks/useStablecoinPrice'\nimport { useMemo } from 'react'\nimport { NonfungiblePositionManager, UniswapInterfaceMulticall } from 'uniswap/src/abis/types/v3'\nimport {\n  ContractInput,\n  useUniswapPricesQuery,\n} from 'uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks'\nimport { getContract } from 'utilities/src/contracts/getContract'\nimport { CurrencyKey, currencyKey, currencyKeyFromGraphQL } from 'utils/currencyKey'\nimport { PositionInfo } from './cache'\n\ntype ContractMap<T extends BaseContract> = { [key: number]: T }\n\n// Constructs a chain-to-contract map, using the wallet's provider when available\nexport function useContractMultichain<T extends BaseContract>(\n  addressMap: AddressMap,\n  ABI: any,\n  chainIds?: ChainId[]\n): ContractMap<T> {\n  const { chainId: walletChainId, provider: walletProvider } = useWeb3React()\n  const isSupportedChain = useIsSupportedChainIdCallback()\n\n  return useMemo(() => {\n    const relevantChains =\n      chainIds ??\n      Object.keys(addressMap)\n        .map((chainId) => parseInt(chainId))\n        .filter((chainId) => isSupportedChain(chainId))\n\n    return relevantChains.reduce((acc: ContractMap<T>, chainId) => {\n      const provider =\n        walletProvider && walletChainId === chainId\n          ? walletProvider\n          : isSupportedChain(chainId)\n          ? RPC_PROVIDERS[chainId]\n          : undefined\n      if (provider) {\n        acc[chainId] = getContract(addressMap[chainId] ?? '', ABI, provider) as T\n      }\n      return acc\n    }, {})\n  }, [ABI, addressMap, chainIds, isSupportedChain, walletChainId, walletProvider])\n}\n\nexport function useV3ManagerContracts(chainIds: ChainId[]): ContractMap<NonfungiblePositionManager> {\n  return useContractMultichain<NonfungiblePositionManager>(V3NFT_ADDRESSES, NFTPositionManagerJSON.abi, chainIds)\n}\n\nexport function useInterfaceMulticallContracts(chainIds: ChainId[]): ContractMap<UniswapInterfaceMulticall> {\n  return useContractMultichain<UniswapInterfaceMulticall>(MULTICALL_ADDRESSES, MulticallJSON.abi, chainIds)\n}\n\ntype PriceMap = { [key: CurrencyKey]: number | undefined }\nexport function usePoolPriceMap(positions: PositionInfo[] | undefined) {\n  const contracts = useMemo(() => {\n    if (!positions || !positions.length) return []\n    // Avoids fetching duplicate tokens by placing in map\n    const contractMap = positions.reduce((acc: { [key: string]: ContractInput }, { pool: { token0, token1 } }) => {\n      acc[currencyKey(token0)] = toContractInput(token0)\n      acc[currencyKey(token1)] = toContractInput(token1)\n      return acc\n    }, {})\n    return Object.values(contractMap)\n  }, [positions])\n\n  const { data, loading } = useUniswapPricesQuery({ variables: { contracts }, skip: !contracts.length })\n\n  const priceMap = useMemo(\n    () =>\n      data?.tokens?.reduce((acc: PriceMap, current) => {\n        if (current) acc[currencyKeyFromGraphQL(current)] = current.project?.markets?.[0]?.price?.value\n        return acc\n      }, {}) ?? {},\n    [data?.tokens]\n  )\n\n  return { priceMap, pricesLoading: loading && !data }\n}\n\nfunction useFeeValue(token: Token, fee: number | undefined, queriedPrice: number | undefined) {\n  const stablecoinPrice = useStablecoinPrice(!queriedPrice ? token : undefined)\n  return useMemo(() => {\n    // Prefers gql price, as fetching stablecoinPrice will trigger multiple infura calls for each pool position\n    const price = queriedPrice ?? (stablecoinPrice ? parseFloat(stablecoinPrice.toSignificant()) : undefined)\n    const feeValue = fee && price ? fee * price : undefined\n\n    return [price, feeValue]\n  }, [fee, queriedPrice, stablecoinPrice])\n}\n\nexport function useFeeValues(position: PositionInfo) {\n  const [priceA, feeValueA] = useFeeValue(position.pool.token0, position.fees?.[0], position.prices?.[0])\n  const [priceB, feeValueB] = useFeeValue(position.pool.token1, position.fees?.[1], position.prices?.[1])\n\n  return { priceA, priceB, fees: (feeValueA || 0) + (feeValueB || 0) }\n}\n","import { Trans } from 'i18n'\nimport { AlertTriangle, Slash } from 'react-feather'\nimport styled, { useTheme } from 'styled-components'\n\nimport { MouseoverTooltip } from '../../components/Tooltip'\n\nconst BadgeWrapper = styled.div`\n  font-size: 14px;\n  display: flex;\n  justify-content: flex-end;\n`\n\nconst BadgeText = styled.div`\n  font-weight: 535;\n  font-size: 12px;\n  line-height: 14px;\n  margin-right: 8px;\n`\n\nconst ActiveDot = styled.span`\n  background-color: ${({ theme }) => theme.success};\n  border-radius: 50%;\n  height: 8px;\n  width: 8px;\n`\n\nconst LabelText = styled.div<{ color: string }>`\n  align-items: center;\n  color: ${({ color }) => color};\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n`\n\nexport default function RangeBadge({ removed, inRange }: { removed?: boolean; inRange?: boolean }) {\n  const theme = useTheme()\n  return (\n    <BadgeWrapper>\n      {removed ? (\n        <MouseoverTooltip text={<Trans>Your position has 0 liquidity, and is not earning fees.</Trans>}>\n          <LabelText color={theme.neutral2}>\n            <BadgeText>\n              <Trans>Closed</Trans>\n            </BadgeText>\n            <Slash width={12} height={12} />\n          </LabelText>\n        </MouseoverTooltip>\n      ) : inRange ? (\n        <MouseoverTooltip\n          text={\n            <Trans>\n              The price of this pool is within your selected range. Your position is currently earning fees.\n            </Trans>\n          }\n        >\n          <LabelText color={theme.success}>\n            <BadgeText>\n              <Trans>In range</Trans>\n            </BadgeText>\n            <ActiveDot />\n          </LabelText>\n        </MouseoverTooltip>\n      ) : (\n        <MouseoverTooltip\n          text={\n            <Trans>\n              The price of this pool is outside of your selected range. Your position is not currently earning fees.\n            </Trans>\n          }\n        >\n          <LabelText color={theme.deprecated_accentWarning}>\n            <BadgeText>\n              <Trans>Out of range</Trans>\n            </BadgeText>\n            <AlertTriangle width={12} height={12} />\n          </LabelText>\n        </MouseoverTooltip>\n      )}\n    </BadgeWrapper>\n  )\n}\n","import Tooltip from 'components/Tooltip'\nimport { useState } from 'react'\nimport styled from 'styled-components'\n\nconst TextWrapper = styled.span<{\n  margin: boolean\n  link?: boolean\n  fontSize?: string\n  adjustSize?: boolean\n  textColor?: string\n}>`\n  margin-left: ${({ margin }) => margin && '4px'};\n  font-size: ${({ fontSize }) => fontSize ?? 'inherit'};\n\n  @media screen and (max-width: 600px) {\n    font-size: ${({ adjustSize }) => adjustSize && '12px'};\n  }\n`\n\nconst HoverInlineText = ({\n  text,\n  maxCharacters = 20,\n  margin = false,\n  adjustSize = false,\n  fontSize,\n  textColor,\n  link,\n  ...rest\n}: {\n  text?: string\n  maxCharacters?: number\n  margin?: boolean\n  adjustSize?: boolean\n  fontSize?: string\n  textColor?: string\n  link?: boolean\n}) => {\n  const [showHover, setShowHover] = useState(false)\n\n  if (!text) {\n    return <span />\n  }\n\n  if (text.length > maxCharacters) {\n    return (\n      <Tooltip text={text} show={showHover}>\n        <TextWrapper\n          onMouseEnter={() => setShowHover(true)}\n          onMouseLeave={() => setShowHover(false)}\n          margin={margin}\n          adjustSize={adjustSize}\n          textColor={textColor}\n          link={link}\n          fontSize={fontSize}\n          {...rest}\n        >\n          {' ' + text.slice(0, maxCharacters - 1) + '...'}\n        </TextWrapper>\n      </Tooltip>\n    )\n  }\n\n  return (\n    <TextWrapper\n      margin={margin}\n      adjustSize={adjustSize}\n      link={link}\n      fontSize={fontSize}\n      textColor={textColor}\n      {...rest}\n    >\n      {text}\n    </TextWrapper>\n  )\n}\n\nexport default HoverInlineText\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Percent, Price, Token } from '@uniswap/sdk-core'\nimport { Position } from '@uniswap/v3-sdk'\nimport RangeBadge from 'components/Badge/RangeBadge'\nimport HoverInlineText from 'components/HoverInlineText'\nimport Loader from 'components/Icons/LoadingSpinner'\nimport { RowBetween } from 'components/Row'\nimport { useToken } from 'hooks/Tokens'\nimport useIsTickAtLimit from 'hooks/useIsTickAtLimit'\nimport { usePool } from 'hooks/usePools'\nimport { Trans } from 'i18n'\nimport { useMemo } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Bound } from 'state/mint/v3/actions'\nimport styled from 'styled-components'\nimport { MEDIA_WIDTHS } from 'theme'\nimport { HideSmall, SmallOnly, ThemedText } from 'theme/components'\nimport { useFormatter } from 'utils/formatNumbers'\nimport { unwrappedToken } from 'utils/unwrappedToken'\n\nimport { DoubleCurrencyLogo } from 'components/DoubleLogo'\nimport { DAI, USDC_MAINNET, USDT, WBTC, WRAPPED_NATIVE_CURRENCY } from '../../constants/tokens'\n\nconst LinkRow = styled(Link)`\n  align-items: center;\n  display: flex;\n  cursor: pointer;\n  user-select: none;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  color: ${({ theme }) => theme.neutral1};\n  padding: 16px;\n  text-decoration: none;\n  font-weight: 535;\n\n  & > div:not(:first-child) {\n    text-align: center;\n  }\n  :hover {\n    background-color: ${({ theme }) => theme.deprecated_hoverDefault};\n  }\n\n  @media screen and (min-width: ${MEDIA_WIDTHS.deprecated_upToSmall}px) {\n    /* flex-direction: row; */\n  }\n\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToSmall`\n    flex-direction: column;\n    row-gap: 8px;\n  `};\n`\n\nconst DataLineItem = styled.div`\n  font-size: 14px;\n`\n\nconst RangeLineItem = styled(DataLineItem)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-top: 4px;\n  width: 100%;\n`\n\nconst DoubleArrow = styled.span`\n  font-size: 12px;\n  margin: 0 2px;\n  color: ${({ theme }) => theme.neutral1};\n`\n\nconst RangeText = styled(ThemedText.BodySmall)`\n  font-size: 14px !important;\n  word-break: break-word;\n  padding: 0.25rem 0.25rem;\n  border-radius: 8px;\n`\n\nconst FeeTierText = styled(ThemedText.BodyPrimary)`\n  margin-left: 8px !important;\n  line-height: 12px;\n  color: ${({ theme }) => theme.neutral3};\n`\n\nconst ExtentsText = styled(ThemedText.BodySmall)`\n  color: ${({ theme }) => theme.neutral2};\n  display: inline-block;\n  line-height: 16px;\n  margin-right: 4px !important;\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToSmall`\n    display: none;\n  `};\n`\n\nconst PrimaryPositionIdData = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  > * {\n    margin-right: 8px;\n  }\n`\n\ninterface PositionListItemProps {\n  token0: string\n  token1: string\n  tokenId: BigNumber\n  fee: number\n  liquidity: BigNumber\n  tickLower: number\n  tickUpper: number\n}\n\nexport function getPriceOrderingFromPositionForUI(position?: Position): {\n  priceLower?: Price<Token, Token>\n  priceUpper?: Price<Token, Token>\n  quote?: Token\n  base?: Token\n} {\n  if (!position) {\n    return {}\n  }\n\n  const token0 = position.amount0.currency\n  const token1 = position.amount1.currency\n\n  // if token0 is a dollar-stable asset, set it as the quote token\n  const stables = [DAI, USDC_MAINNET, USDT]\n  if (stables.some((stable) => stable.equals(token0))) {\n    return {\n      priceLower: position.token0PriceUpper.invert(),\n      priceUpper: position.token0PriceLower.invert(),\n      quote: token0,\n      base: token1,\n    }\n  }\n\n  // if token1 is an ETH-/BTC-stable asset, set it as the base token\n  const bases = [...Object.values(WRAPPED_NATIVE_CURRENCY), WBTC]\n  if (bases.some((base) => base && base.equals(token1))) {\n    return {\n      priceLower: position.token0PriceUpper.invert(),\n      priceUpper: position.token0PriceLower.invert(),\n      quote: token0,\n      base: token1,\n    }\n  }\n\n  // if both prices are below 1, invert\n  if (position.token0PriceUpper.lessThan(1)) {\n    return {\n      priceLower: position.token0PriceUpper.invert(),\n      priceUpper: position.token0PriceLower.invert(),\n      quote: token0,\n      base: token1,\n    }\n  }\n\n  // otherwise, just return the default\n  return {\n    priceLower: position.token0PriceLower,\n    priceUpper: position.token0PriceUpper,\n    quote: token1,\n    base: token0,\n  }\n}\n\nexport default function PositionListItem({\n  token0: token0Address,\n  token1: token1Address,\n  tokenId,\n  fee: feeAmount,\n  liquidity,\n  tickLower,\n  tickUpper,\n}: PositionListItemProps) {\n  const { formatDelta, formatTickPrice } = useFormatter()\n\n  const token0 = useToken(token0Address)\n  const token1 = useToken(token1Address)\n\n  const currency0 = token0 ? unwrappedToken(token0) : undefined\n  const currency1 = token1 ? unwrappedToken(token1) : undefined\n\n  // construct Position from details returned\n  const [, pool] = usePool(currency0 ?? undefined, currency1 ?? undefined, feeAmount)\n\n  const position = useMemo(() => {\n    if (pool) {\n      return new Position({ pool, liquidity: liquidity.toString(), tickLower, tickUpper })\n    }\n    return undefined\n  }, [liquidity, pool, tickLower, tickUpper])\n\n  const tickAtLimit = useIsTickAtLimit(feeAmount, tickLower, tickUpper)\n\n  // prices\n  const { priceLower, priceUpper, quote, base } = getPriceOrderingFromPositionForUI(position)\n\n  const currencyQuote = quote && unwrappedToken(quote)\n  const currencyBase = base && unwrappedToken(base)\n\n  // check if price is within range\n  const outOfRange: boolean = pool ? pool.tickCurrent < tickLower || pool.tickCurrent >= tickUpper : false\n\n  const positionSummaryLink = '/pools/' + tokenId\n\n  const removed = liquidity?.eq(0)\n\n  return (\n    <LinkRow to={positionSummaryLink}>\n      <RowBetween>\n        <PrimaryPositionIdData>\n          <DoubleCurrencyLogo currencies={[currencyBase, currencyQuote]} size={18} />\n          <ThemedText.SubHeader>\n            &nbsp;{currencyQuote?.symbol}&nbsp;/&nbsp;{currencyBase?.symbol}\n          </ThemedText.SubHeader>\n\n          <FeeTierText>{formatDelta(parseFloat(new Percent(feeAmount, 1_000_000).toSignificant()))}</FeeTierText>\n        </PrimaryPositionIdData>\n        <RangeBadge removed={removed} inRange={!outOfRange} />\n      </RowBetween>\n\n      {priceLower && priceUpper ? (\n        <RangeLineItem>\n          <RangeText>\n            <ExtentsText>\n              <Trans>Min: </Trans>\n            </ExtentsText>\n            <span>\n              {formatTickPrice({\n                price: priceLower,\n                atLimit: tickAtLimit,\n                direction: Bound.LOWER,\n              })}{' '}\n            </span>\n            <Trans>\n              <HoverInlineText text={currencyQuote?.symbol} /> per <HoverInlineText text={currencyBase?.symbol ?? ''} />\n            </Trans>\n          </RangeText>{' '}\n          <HideSmall>\n            <DoubleArrow>↔</DoubleArrow>{' '}\n          </HideSmall>\n          <SmallOnly>\n            <DoubleArrow>↔</DoubleArrow>{' '}\n          </SmallOnly>\n          <RangeText>\n            <ExtentsText>\n              <Trans>Max:</Trans>\n            </ExtentsText>\n            <span>\n              {formatTickPrice({\n                price: priceUpper,\n                atLimit: tickAtLimit,\n                direction: Bound.UPPER,\n              })}{' '}\n            </span>\n            <Trans>\n              <HoverInlineText text={currencyQuote?.symbol} /> per{' '}\n              <HoverInlineText maxCharacters={10} text={currencyBase?.symbol} />\n            </Trans>\n          </RangeText>\n        </RangeLineItem>\n      ) : (\n        <Loader />\n      )}\n    </LinkRow>\n  )\n}\n","import { FeeAmount, TICK_SPACINGS, TickMath, nearestUsableTick } from '@uniswap/v3-sdk'\nimport { useMemo } from 'react'\nimport { Bound } from 'state/mint/v3/actions'\n\nexport default function useIsTickAtLimit(\n  feeAmount: FeeAmount | undefined,\n  tickLower: number | undefined,\n  tickUpper: number | undefined\n) {\n  return useMemo(\n    () => ({\n      [Bound.LOWER]:\n        feeAmount && tickLower\n          ? tickLower === nearestUsableTick(TickMath.MIN_TICK, TICK_SPACINGS[feeAmount as FeeAmount])\n          : undefined,\n      [Bound.UPPER]:\n        feeAmount && tickUpper\n          ? tickUpper === nearestUsableTick(TickMath.MAX_TICK, TICK_SPACINGS[feeAmount as FeeAmount])\n          : undefined,\n    }),\n    [feeAmount, tickLower, tickUpper]\n  )\n}\n","import { Interface } from '@ethersproject/abi'\nimport { BigintIsh, ChainId, Currency, Token, V3_CORE_FACTORY_ADDRESSES } from '@uniswap/sdk-core'\nimport IUniswapV3PoolStateJSON from '@uniswap/v3-core/artifacts/contracts/interfaces/pool/IUniswapV3PoolState.sol/IUniswapV3PoolState.json'\nimport { FeeAmount, Pool, computePoolAddress } from '@uniswap/v3-sdk'\nimport { useContractMultichain } from 'components/AccountDrawer/MiniPortfolio/Pools/hooks'\nimport JSBI from 'jsbi'\nimport { useMultipleContractSingleData } from 'lib/hooks/multicall'\nimport { useEffect, useMemo, useRef } from 'react'\nimport { IUniswapV3PoolStateInterface } from 'uniswap/src/abis/types/v3/IUniswapV3PoolState'\nimport { UniswapV3Pool } from 'uniswap/src/abis/types/v3/UniswapV3Pool'\nimport { useChainId } from 'wagmi'\n\nconst POOL_STATE_INTERFACE = new Interface(IUniswapV3PoolStateJSON.abi) as IUniswapV3PoolStateInterface\n\n// Classes are expensive to instantiate, so this caches the recently instantiated pools.\n// This avoids re-instantiating pools as the other pools in the same request are loaded.\nclass PoolCache {\n  // Evict after 128 entries. Empirically, a swap uses 64 entries.\n  private static MAX_ENTRIES = 128\n\n  // These are FIFOs, using unshift/pop. This makes recent entries faster to find.\n  private static pools: Pool[] = []\n  private static addresses: { key: string; address: string }[] = []\n\n  static getPoolAddress(factoryAddress: string, tokenA: Token, tokenB: Token, fee: FeeAmount): string {\n    if (this.addresses.length > this.MAX_ENTRIES) {\n      this.addresses = this.addresses.slice(0, this.MAX_ENTRIES / 2)\n    }\n\n    const { address: addressA } = tokenA\n    const { address: addressB } = tokenB\n    const key = `${factoryAddress}:${addressA}:${addressB}:${fee.toString()}`\n    const found = this.addresses.find((address) => address.key === key)\n    if (found) return found.address\n\n    const address = {\n      key,\n      address: computePoolAddress({\n        factoryAddress,\n        tokenA,\n        tokenB,\n        fee,\n      }),\n    }\n    this.addresses.unshift(address)\n    return address.address\n  }\n\n  static getPool(\n    tokenA: Token,\n    tokenB: Token,\n    fee: FeeAmount,\n    sqrtPriceX96: BigintIsh,\n    liquidity: BigintIsh,\n    tick: number\n  ): Pool {\n    if (this.pools.length > this.MAX_ENTRIES) {\n      this.pools = this.pools.slice(0, this.MAX_ENTRIES / 2)\n    }\n\n    const found = this.pools.find(\n      (pool) =>\n        pool.token0 === tokenA &&\n        pool.token1 === tokenB &&\n        pool.fee === fee &&\n        JSBI.EQ(pool.sqrtRatioX96, sqrtPriceX96) &&\n        JSBI.EQ(pool.liquidity, liquidity) &&\n        pool.tickCurrent === tick\n    )\n    if (found) return found\n\n    const pool = new Pool(tokenA, tokenB, fee, sqrtPriceX96, liquidity, tick)\n    this.pools.unshift(pool)\n    return pool\n  }\n}\n\nexport enum PoolState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePools(\n  poolKeys: [Currency | undefined, Currency | undefined, FeeAmount | undefined][]\n): [PoolState, Pool | null][] {\n  const chainId = useChainId()\n\n  const poolTokens: ([Token, Token, FeeAmount] | undefined)[] = useMemo(() => {\n    if (!chainId) return new Array(poolKeys.length)\n\n    return poolKeys.map(([currencyA, currencyB, feeAmount]) => {\n      if (currencyA && currencyB && feeAmount) {\n        const tokenA = currencyA.wrapped\n        const tokenB = currencyB.wrapped\n        if (tokenA.equals(tokenB)) return undefined\n\n        return tokenA.sortsBefore(tokenB) ? [tokenA, tokenB, feeAmount] : [tokenB, tokenA, feeAmount]\n      }\n      return undefined\n    })\n  }, [chainId, poolKeys])\n\n  const poolAddresses: (string | undefined)[] = useMemo(() => {\n    const v3CoreFactoryAddress = chainId && V3_CORE_FACTORY_ADDRESSES[chainId]\n    if (!v3CoreFactoryAddress) return new Array(poolTokens.length)\n\n    return poolTokens.map((value) => value && PoolCache.getPoolAddress(v3CoreFactoryAddress, ...value))\n  }, [chainId, poolTokens])\n\n  const slot0s = useMultipleContractSingleData(poolAddresses, POOL_STATE_INTERFACE, 'slot0')\n  const liquidities = useMultipleContractSingleData(poolAddresses, POOL_STATE_INTERFACE, 'liquidity')\n\n  return useMemo(() => {\n    return poolKeys.map((_key, index) => {\n      const tokens = poolTokens[index]\n      if (!tokens) return [PoolState.INVALID, null]\n      const [token0, token1, fee] = tokens\n\n      if (!slot0s[index]) return [PoolState.INVALID, null]\n      const { result: slot0, loading: slot0Loading, valid: slot0Valid } = slot0s[index]\n\n      if (!liquidities[index]) return [PoolState.INVALID, null]\n      const { result: liquidity, loading: liquidityLoading, valid: liquidityValid } = liquidities[index]\n\n      if (!tokens || !slot0Valid || !liquidityValid) return [PoolState.INVALID, null]\n      if (slot0Loading || liquidityLoading) return [PoolState.LOADING, null]\n      if (!slot0 || !liquidity) return [PoolState.NOT_EXISTS, null]\n      if (!slot0.sqrtPriceX96 || slot0.sqrtPriceX96.eq(0)) return [PoolState.NOT_EXISTS, null]\n\n      try {\n        const pool = PoolCache.getPool(token0, token1, fee, slot0.sqrtPriceX96, liquidity[0], slot0.tick)\n        return [PoolState.EXISTS, pool]\n      } catch (error) {\n        console.error('Error when constructing the pool', error)\n        return [PoolState.NOT_EXISTS, null]\n      }\n    })\n  }, [liquidities, poolKeys, slot0s, poolTokens])\n}\n\nexport function usePool(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n  feeAmount: FeeAmount | undefined\n): [PoolState, Pool | null] {\n  const poolKeys: [Currency | undefined, Currency | undefined, FeeAmount | undefined][] = useMemo(\n    () => [[currencyA, currencyB, feeAmount]],\n    [currencyA, currencyB, feeAmount]\n  )\n\n  return usePools(poolKeys)[0]\n}\n\nexport function usePoolMultichain(\n  tokenA: Token | undefined,\n  tokenB: Token | undefined,\n  fee: number | undefined,\n  chainId: ChainId\n): [PoolState, Pool | null] {\n  const poolData = useRef<[PoolState, Pool | null]>([PoolState.LOADING, null])\n  const poolAddress =\n    tokenA && tokenB && fee\n      ? PoolCache.getPoolAddress(V3_CORE_FACTORY_ADDRESSES[chainId], tokenA, tokenB, fee)\n      : undefined\n\n  const contractMap = useMemo(() => (poolAddress ? { [chainId]: poolAddress } : {}), [chainId, poolAddress])\n  const contract = useContractMultichain<UniswapV3Pool>(contractMap, IUniswapV3PoolStateJSON.abi)[chainId]\n\n  useEffect(() => {\n    async function getPool() {\n      try {\n        if (!tokenA || !tokenB || !fee || !poolAddress || !contract) {\n          poolData.current = [PoolState.INVALID, null]\n          return\n        }\n\n        const slot0 = await contract.slot0()\n        const liquidity = await contract.liquidity()\n        poolData.current = [PoolState.NOT_EXISTS, null]\n\n        const pool = new Pool(tokenA, tokenB, fee, slot0.sqrtPriceX96.toString(), liquidity.toString(), slot0.tick)\n        poolData.current = [PoolState.EXISTS, pool]\n      } catch (e) {\n        poolData.current = [PoolState.INVALID, null]\n      }\n    }\n    getPool()\n  }, [contract, fee, poolAddress, tokenA, tokenB])\n  return poolData.current\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { CallStateResult, useSingleCallResult, useSingleContractMultipleData } from 'lib/hooks/multicall'\nimport { useMemo } from 'react'\nimport { PositionDetails } from 'types/position'\n\nimport { useV3NFTPositionManagerContract } from './useContract'\n\ninterface UseV3PositionsResults {\n  loading: boolean\n  positions?: PositionDetails[]\n}\n\nfunction useV3PositionsFromTokenIds(tokenIds: BigNumber[] | undefined): UseV3PositionsResults {\n  const positionManager = useV3NFTPositionManagerContract()\n  const inputs = useMemo(() => (tokenIds ? tokenIds.map((tokenId) => [BigNumber.from(tokenId)]) : []), [tokenIds])\n  const results = useSingleContractMultipleData(positionManager, 'positions', inputs)\n\n  const loading = useMemo(() => results.some(({ loading }) => loading), [results])\n  const error = useMemo(() => results.some(({ error }) => error), [results])\n\n  const positions = useMemo(() => {\n    if (!loading && !error && tokenIds) {\n      return results.map((call, i) => {\n        const tokenId = tokenIds[i]\n        const result = call.result as CallStateResult\n        return {\n          tokenId,\n          fee: result.fee,\n          feeGrowthInside0LastX128: result.feeGrowthInside0LastX128,\n          feeGrowthInside1LastX128: result.feeGrowthInside1LastX128,\n          liquidity: result.liquidity,\n          nonce: result.nonce,\n          operator: result.operator,\n          tickLower: result.tickLower,\n          tickUpper: result.tickUpper,\n          token0: result.token0,\n          token1: result.token1,\n          tokensOwed0: result.tokensOwed0,\n          tokensOwed1: result.tokensOwed1,\n        }\n      })\n    }\n    return undefined\n  }, [loading, error, results, tokenIds])\n\n  return {\n    loading,\n    positions: positions?.map((position, i) => ({ ...position, tokenId: inputs[i][0] })),\n  }\n}\n\ninterface UseV3PositionResults {\n  loading: boolean\n  position?: PositionDetails\n}\n\nexport function useV3PositionFromTokenId(tokenId: BigNumber | undefined): UseV3PositionResults {\n  const position = useV3PositionsFromTokenIds(tokenId ? [tokenId] : undefined)\n  return {\n    loading: position.loading,\n    position: position.positions?.[0],\n  }\n}\n\nexport function useV3Positions(account: string | null | undefined): UseV3PositionsResults {\n  const positionManager = useV3NFTPositionManagerContract()\n\n  const { loading: balanceLoading, result: balanceResult } = useSingleCallResult(positionManager, 'balanceOf', [\n    account ?? undefined,\n  ])\n\n  // we don't expect any account balance to ever exceed the bounds of max safe int\n  const accountBalance: number | undefined = balanceResult?.[0]?.toNumber()\n\n  const tokenIdsArgs = useMemo(() => {\n    if (accountBalance && account) {\n      const tokenRequests = []\n      for (let i = 0; i < accountBalance; i++) {\n        tokenRequests.push([account, i])\n      }\n      return tokenRequests\n    }\n    return []\n  }, [account, accountBalance])\n\n  const tokenIdResults = useSingleContractMultipleData(positionManager, 'tokenOfOwnerByIndex', tokenIdsArgs)\n  const someTokenIdsLoading = useMemo(() => tokenIdResults.some(({ loading }) => loading), [tokenIdResults])\n\n  const tokenIds = useMemo(() => {\n    if (account) {\n      return tokenIdResults\n        .map(({ result }) => result)\n        .filter((result): result is CallStateResult => !!result)\n        .map((result) => BigNumber.from(result[0]))\n    }\n    return []\n  }, [account, tokenIdResults])\n\n  const { positions, loading: positionsLoading } = useV3PositionsFromTokenIds(tokenIds)\n\n  return {\n    loading: someTokenIdsLoading || balanceLoading || positionsLoading,\n    positions,\n  }\n}\n","import { ChainId, Currency } from '@uniswap/sdk-core'\nimport { NATIVE_CHAIN_ID } from 'constants/tokens'\nimport { supportedChainIdFromGQLChain } from 'graphql/data/util'\nimport { Chain, TokenStandard } from 'uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks'\n\nexport type CurrencyKey = string\n\nexport function buildCurrencyKey(chainId: ChainId, address: string): CurrencyKey {\n  // We lowercase for compatibility/indexability between gql tokens and sdk currencies\n  return `${chainId}-${address.toLowerCase()}`\n}\n\nexport function currencyKey(currency: Currency): CurrencyKey {\n  return buildCurrencyKey(currency.chainId, currency.isToken ? currency.address : NATIVE_CHAIN_ID)\n}\n\nexport function currencyKeyFromGraphQL(contract: {\n  address?: string\n  chain: Chain\n  standard?: TokenStandard\n}): CurrencyKey {\n  const chainId = supportedChainIdFromGQLChain(contract.chain)\n  const address = contract.standard === TokenStandard.Native ? NATIVE_CHAIN_ID : contract.address\n  if (!address) throw new Error('Non-native token missing address')\n  if (!chainId) throw new Error('Unsupported chain from pools query')\n  return buildCurrencyKey(chainId, address)\n}\n"],"names":["useContractMultichain","addressMap","ABI","chainIds","chainId","walletChainId","provider","walletProvider","useWeb3React","isSupportedChain","useIsSupportedChainIdCallback","useMemo","Object","keys","map","parseInt","filter","reduce","acc","RPC_PROVIDERS","undefined","getContract","useV3ManagerContracts","V3NFT_ADDRESSES","NFTPositionManagerJSON","useInterfaceMulticallContracts","MULTICALL_ADDRESSES","MulticallJSON","usePoolPriceMap","positions","data","contracts","length","contractMap","pool","token0","token1","currencyKey","toContractInput","values","loading","useUniswapPricesQuery","variables","skip","priceMap","tokens","current","currencyKeyFromGraphQL","project","markets","price","value","pricesLoading","BadgeWrapper","styled","div","BadgeText","ActiveDot","span","theme","success","LabelText","color","RangeBadge","removed","inRange","useTheme","MouseoverTooltip","text","Trans","neutral2","Slash","width","height","deprecated_accentWarning","AlertTriangle","TextWrapper","margin","fontSize","adjustSize","maxCharacters","textColor","link","rest","showHover","setShowHover","useState","Tooltip","show","onMouseEnter","onMouseLeave","slice","LinkRow","Link","neutral1","deprecated_hoverDefault","MEDIA_WIDTHS","deprecated_upToSmall","deprecated_mediaWidth","DataLineItem","RangeLineItem","DoubleArrow","RangeText","ThemedText","BodySmall","FeeTierText","BodyPrimary","neutral3","ExtentsText","PrimaryPositionIdData","getPriceOrderingFromPositionForUI","position","amount0","currency","amount1","DAI","USDC_MAINNET","USDT","some","stable","equals","priceLower","token0PriceUpper","invert","priceUpper","token0PriceLower","quote","base","WRAPPED_NATIVE_CURRENCY","WBTC","lessThan","PositionListItem","token0Address","token1Address","tokenId","fee","feeAmount","liquidity","tickLower","tickUpper","currencyQuote","currencyBase","formatDelta","formatTickPrice","useFormatter","useToken","currency0","unwrappedToken","currency1","usePool","Position","toString","tickAtLimit","useIsTickAtLimit","outOfRange","tickCurrent","positionSummaryLink","eq","to","RowBetween","DoubleCurrencyLogo","currencies","size","SubHeader","symbol","parseFloat","Percent","toSignificant","atLimit","direction","Bound","LOWER","HoverInlineText","HideSmall","SmallOnly","UPPER","Loader","nearestUsableTick","TickMath","MIN_TICK","TICK_SPACINGS","MAX_TICK","POOL_STATE_INTERFACE","Interface","IUniswapV3PoolStateJSON","getPoolAddress","factoryAddress","tokenA","tokenB","this","addresses","MAX_ENTRIES","address","addressA","addressB","key","found","find","computePoolAddress","unshift","getPool","sqrtPriceX96","tick","pools","JSBI","sqrtRatioX96","Pool","usePools","poolKeys","useChainId","poolTokens","currencyA","currencyB","wrapped","sortsBefore","Array","poolAddresses","v3CoreFactoryAddress","V3_CORE_FACTORY_ADDRESSES","PoolCache","slot0s","useMultipleContractSingleData","liquidities","_key","index","PoolState","INVALID","result","slot0","slot0Loading","valid","slot0Valid","liquidityLoading","liquidityValid","LOADING","NOT_EXISTS","EXISTS","error","console","usePoolMultichain","poolData","useRef","poolAddress","contract","useEffect","e","useV3PositionsFromTokenIds","tokenIds","positionManager","useV3NFTPositionManagerContract","inputs","BigNumber","from","results","useSingleContractMultipleData","call","i","feeGrowthInside0LastX128","feeGrowthInside1LastX128","nonce","operator","tokensOwed0","tokensOwed1","useV3PositionFromTokenId","useV3Positions","account","balanceResult","balanceLoading","useSingleCallResult","accountBalance","toNumber","tokenIdsArgs","tokenRequests","push","tokenIdResults","someTokenIdsLoading","positionsLoading","buildCurrencyKey","toLowerCase","isToken","NATIVE_CHAIN_ID","supportedChainIdFromGQLChain","chain","standard","TokenStandard","Native","Error"],"sourceRoot":""}