{"version":3,"file":"static/js/155.83fb8129.chunk.js","mappings":"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","sources":["assets/images/blue-loader.svg","components/AccountDetails/TransactionSummary.tsx","components/TransactionConfirmationModal/AnimatedConfirmation.tsx","components/TransactionConfirmationModal/index.tsx","pages/Pool/styled.tsx","state/governance/types.ts"],"sourcesContent":["var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgBlueLoader(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 94,\n    height: 94,\n    viewBox: \"0 0 94 94\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M92 47C92 22.1472 71.8528 2 47 2C22.1472 2 2 22.1472 2 47C2 71.8528 22.1472 92 47 92\",\n    stroke: \"#2172E5\",\n    strokeWidth: 3,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgBlueLoader);\nexport default __webpack_public_path__ + \"static/media/blue-loader.249140daf016adc355cfb029ec67de19.svg\";\nexport { ForwardRef as ReactComponent };","import { Fraction, TradeType } from '@uniswap/sdk-core'\nimport { BigNumber } from 'ethers/lib/ethers'\nimport { Trans } from 'i18n'\nimport JSBI from 'jsbi'\n\nimport { nativeOnChain } from '../../constants/tokens'\nimport { useCurrency, useToken } from '../../hooks/Tokens'\nimport useENSName from '../../hooks/useENSName'\nimport { VoteOption } from '../../state/governance/types'\nimport {\n  AddLiquidityV2PoolTransactionInfo,\n  AddLiquidityV3PoolTransactionInfo,\n  ApproveTransactionInfo,\n  ClaimTransactionInfo,\n  CollectFeesTransactionInfo,\n  CreateV3PoolTransactionInfo,\n  DelegateTransactionInfo,\n  ExactInputSwapTransactionInfo,\n  ExactOutputSwapTransactionInfo,\n  ExecuteTransactionInfo,\n  MigrateV2LiquidityToV3TransactionInfo,\n  QueueTransactionInfo,\n  RemoveLiquidityV3TransactionInfo,\n  SendTransactionInfo,\n  TransactionInfo,\n  TransactionType,\n  VoteTransactionInfo,\n  WrapTransactionInfo,\n} from '../../state/transactions/types'\n\nfunction formatAmount(amountRaw: string, decimals: number, sigFigs: number): string {\n  return new Fraction(amountRaw, JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(decimals))).toSignificant(sigFigs)\n}\n\nfunction FormattedCurrencyAmount({\n  rawAmount,\n  symbol,\n  decimals,\n  sigFigs,\n}: {\n  rawAmount: string\n  symbol: string\n  decimals: number\n  sigFigs: number\n}) {\n  return (\n    <>\n      {formatAmount(rawAmount, decimals, sigFigs)} {symbol}\n    </>\n  )\n}\n\nfunction FormattedCurrencyAmountManaged({\n  rawAmount,\n  currencyId,\n  sigFigs = 6,\n}: {\n  rawAmount: string\n  currencyId: string\n  sigFigs: number\n}) {\n  const currency = useCurrency(currencyId)\n  return currency ? (\n    <FormattedCurrencyAmount\n      rawAmount={rawAmount}\n      decimals={currency.decimals}\n      sigFigs={sigFigs}\n      symbol={currency.symbol ?? '???'}\n    />\n  ) : null\n}\n\nfunction ClaimSummary({ info: { recipient, uniAmountRaw } }: { info: ClaimTransactionInfo }) {\n  const { ENSName } = useENSName()\n  const name = ENSName ?? recipient\n  return typeof uniAmountRaw === 'string' ? (\n    <Trans>\n      Claim <FormattedCurrencyAmount rawAmount={uniAmountRaw} symbol=\"UNI\" decimals={18} sigFigs={4} /> for {{ name }}\n    </Trans>\n  ) : (\n    <Trans>Claim UNI reward for {{ name }}</Trans>\n  )\n}\n\nfunction SubmitProposalTransactionSummary() {\n  return <Trans>Submit new proposal</Trans>\n}\n\nfunction ApprovalSummary({ info }: { info: ApproveTransactionInfo }) {\n  const token = useToken(info.tokenAddress)\n\n  return BigNumber.from(info.amount)?.eq(0) ? (\n    <Trans>Revoke {{ sym: token?.symbol }}</Trans>\n  ) : (\n    <Trans>Approve {{ sym: token?.symbol }}</Trans>\n  )\n}\n\nfunction VoteSummary({ info }: { info: VoteTransactionInfo }) {\n  const proposalKey = `${info.governorAddress}/${info.proposalId}`\n  if (info.reason && info.reason.trim().length > 0) {\n    switch (info.decision) {\n      case VoteOption.For:\n        return <Trans>Vote for proposal {{ proposalKey }}</Trans>\n      case VoteOption.Abstain:\n        return <Trans>Vote to abstain on proposal {{ proposalKey }}</Trans>\n      case VoteOption.Against:\n        return <Trans>Vote against proposal {{ proposalKey }}</Trans>\n    }\n  } else {\n    switch (info.decision) {\n      case VoteOption.For:\n        return (\n          <Trans>\n            Vote for proposal {{ proposalKey }} with reason &quot;{{ reason: info.reason }}&quot;\n          </Trans>\n        )\n      case VoteOption.Abstain:\n        return (\n          <Trans>\n            Vote to abstain on proposal {{ proposalKey }} with reason &quot;{{ reason: info.reason }}&quot;\n          </Trans>\n        )\n      case VoteOption.Against:\n        return (\n          <Trans>\n            Vote against proposal {{ proposalKey }} with reason &quot;{{ reason: info.reason }}&quot;\n          </Trans>\n        )\n    }\n  }\n}\n\nfunction QueueSummary({ info }: { info: QueueTransactionInfo }) {\n  const proposalKey = `${info.governorAddress}/${info.proposalId}`\n  return <Trans>Queue proposal {{ proposalKey }}.</Trans>\n}\n\nfunction ExecuteSummary({ info }: { info: ExecuteTransactionInfo }) {\n  const proposalKey = `${info.governorAddress}/${info.proposalId}`\n  return <Trans>Execute proposal {{ proposalKey }}.</Trans>\n}\n\nfunction DelegateSummary({ info: { delegatee } }: { info: DelegateTransactionInfo }) {\n  const { ENSName } = useENSName(delegatee)\n  const name = ENSName ?? delegatee\n  return <Trans>Delegate voting power to {{ name }}</Trans>\n}\n\nfunction WrapSummary({ info: { chainId, currencyAmountRaw, unwrapped } }: { info: WrapTransactionInfo }) {\n  const native = chainId ? nativeOnChain(chainId) : undefined\n\n  if (unwrapped) {\n    return (\n      <Trans>\n        Unwrap{' '}\n        <FormattedCurrencyAmount\n          rawAmount={currencyAmountRaw}\n          symbol={native?.wrapped?.symbol ?? 'WETH'}\n          decimals={18}\n          sigFigs={6}\n        />{' '}\n        to {{ symbol: native?.symbol ?? 'ETH' }}\n      </Trans>\n    )\n  } else {\n    return (\n      <Trans>\n        Wrap{' '}\n        <FormattedCurrencyAmount\n          rawAmount={currencyAmountRaw}\n          symbol={native?.symbol ?? 'ETH'}\n          decimals={18}\n          sigFigs={6}\n        />{' '}\n        to {{ symbol: native?.wrapped?.symbol ?? 'WETH' }}\n      </Trans>\n    )\n  }\n}\n\nfunction DepositLiquidityStakingSummary() {\n  // not worth rendering the tokens since you can should no longer deposit liquidity in the staking contracts\n  // todo: deprecate and delete the code paths that allow this, show user more information\n  return <Trans>Deposit liquidity</Trans>\n}\n\nfunction WithdrawLiquidityStakingSummary() {\n  return <Trans>Withdraw deposited liquidity</Trans>\n}\n\nfunction MigrateLiquidityToV3Summary({\n  info: { baseCurrencyId, quoteCurrencyId },\n}: {\n  info: MigrateV2LiquidityToV3TransactionInfo\n}) {\n  const baseCurrency = useCurrency(baseCurrencyId)\n  const quoteCurrency = useCurrency(quoteCurrencyId)\n\n  return (\n    <Trans>\n      Migrate {{ baseSymbol: baseCurrency?.symbol }}/{{ quoteSymbol: quoteCurrency?.symbol }} liquidity to V3\n    </Trans>\n  )\n}\n\nfunction CreateV3PoolSummary({ info: { quoteCurrencyId, baseCurrencyId } }: { info: CreateV3PoolTransactionInfo }) {\n  const baseCurrency = useCurrency(baseCurrencyId)\n  const quoteCurrency = useCurrency(quoteCurrencyId)\n\n  return (\n    <Trans>\n      Create {{ baseSymbol: baseCurrency?.symbol }}/{{ quoteSymbol: quoteCurrency?.symbol }} V3 pool\n    </Trans>\n  )\n}\n\nfunction CollectFeesSummary({ info: { currencyId0, currencyId1 } }: { info: CollectFeesTransactionInfo }) {\n  const currency0 = useCurrency(currencyId0)\n  const currency1 = useCurrency(currencyId1)\n\n  return (\n    <Trans>\n      Collect {{ symbol0: currency0?.symbol }}/{{ symbol1: currency1?.symbol }} fees\n    </Trans>\n  )\n}\n\nfunction RemoveLiquidityV3Summary({\n  info: { baseCurrencyId, quoteCurrencyId, expectedAmountBaseRaw, expectedAmountQuoteRaw },\n}: {\n  info: RemoveLiquidityV3TransactionInfo\n}) {\n  return (\n    <Trans>\n      Remove{' '}\n      <FormattedCurrencyAmountManaged rawAmount={expectedAmountBaseRaw} currencyId={baseCurrencyId} sigFigs={3} /> and{' '}\n      <FormattedCurrencyAmountManaged rawAmount={expectedAmountQuoteRaw} currencyId={quoteCurrencyId} sigFigs={3} />\n    </Trans>\n  )\n}\n\nfunction AddLiquidityV3PoolSummary({\n  info: { createPool, quoteCurrencyId, baseCurrencyId },\n}: {\n  info: AddLiquidityV3PoolTransactionInfo\n}) {\n  const baseCurrency = useCurrency(baseCurrencyId)\n  const quoteCurrency = useCurrency(quoteCurrencyId)\n\n  return createPool ? (\n    <Trans>\n      Create pool and add {{ baseSymbol: baseCurrency?.symbol }}/{{ quoteSymbol: quoteCurrency?.symbol }} V3 liquidity\n    </Trans>\n  ) : (\n    <Trans>\n      Add {{ baseSymbol: baseCurrency?.symbol }}/{{ quoteSymbol: quoteCurrency?.symbol }} V3 liquidity\n    </Trans>\n  )\n}\n\nfunction AddLiquidityV2PoolSummary({\n  info: { quoteCurrencyId, expectedAmountBaseRaw, expectedAmountQuoteRaw, baseCurrencyId },\n}: {\n  info: AddLiquidityV2PoolTransactionInfo\n}) {\n  return (\n    <Trans>\n      Add <FormattedCurrencyAmountManaged rawAmount={expectedAmountBaseRaw} currencyId={baseCurrencyId} sigFigs={3} />{' '}\n      and <FormattedCurrencyAmountManaged rawAmount={expectedAmountQuoteRaw} currencyId={quoteCurrencyId} sigFigs={3} />{' '}\n      to Uniswap V2\n    </Trans>\n  )\n}\n\nfunction SendSummary({ info }: { info: SendTransactionInfo }) {\n  return (\n    <Trans>\n      Sent\n      <FormattedCurrencyAmountManaged rawAmount={info.amount} currencyId={info.currencyId} sigFigs={6} /> to{' '}\n      {{ recipient: info.recipient }}\n    </Trans>\n  )\n}\n\nfunction SwapSummary({ info }: { info: ExactInputSwapTransactionInfo | ExactOutputSwapTransactionInfo }) {\n  if (info.tradeType === TradeType.EXACT_INPUT) {\n    return (\n      <Trans>\n        Swap exactly{' '}\n        <FormattedCurrencyAmountManaged\n          rawAmount={info.inputCurrencyAmountRaw}\n          currencyId={info.inputCurrencyId}\n          sigFigs={6}\n        />{' '}\n        for{' '}\n        <FormattedCurrencyAmountManaged\n          rawAmount={info.settledOutputCurrencyAmountRaw ?? info.expectedOutputCurrencyAmountRaw}\n          currencyId={info.outputCurrencyId}\n          sigFigs={6}\n        />\n      </Trans>\n    )\n  } else {\n    return (\n      <Trans>\n        Swap{' '}\n        <FormattedCurrencyAmountManaged\n          rawAmount={info.expectedInputCurrencyAmountRaw}\n          currencyId={info.inputCurrencyId}\n          sigFigs={6}\n        />{' '}\n        for exactly{' '}\n        <FormattedCurrencyAmountManaged\n          rawAmount={info.outputCurrencyAmountRaw}\n          currencyId={info.outputCurrencyId}\n          sigFigs={6}\n        />\n      </Trans>\n    )\n  }\n}\n\nexport function TransactionSummary({ info }: { info: TransactionInfo }) {\n  switch (info.type) {\n    case TransactionType.ADD_LIQUIDITY_V3_POOL:\n      return <AddLiquidityV3PoolSummary info={info} />\n\n    case TransactionType.ADD_LIQUIDITY_V2_POOL:\n      return <AddLiquidityV2PoolSummary info={info} />\n\n    case TransactionType.CLAIM:\n      return <ClaimSummary info={info} />\n\n    case TransactionType.DEPOSIT_LIQUIDITY_STAKING:\n      return <DepositLiquidityStakingSummary />\n\n    case TransactionType.WITHDRAW_LIQUIDITY_STAKING:\n      return <WithdrawLiquidityStakingSummary />\n\n    case TransactionType.SWAP:\n      return <SwapSummary info={info} />\n\n    case TransactionType.APPROVAL:\n      return <ApprovalSummary info={info} />\n\n    case TransactionType.VOTE:\n      return <VoteSummary info={info} />\n\n    case TransactionType.DELEGATE:\n      return <DelegateSummary info={info} />\n\n    case TransactionType.WRAP:\n      return <WrapSummary info={info} />\n\n    case TransactionType.CREATE_V3_POOL:\n      return <CreateV3PoolSummary info={info} />\n\n    case TransactionType.MIGRATE_LIQUIDITY_V3:\n      return <MigrateLiquidityToV3Summary info={info} />\n\n    case TransactionType.COLLECT_FEES:\n      return <CollectFeesSummary info={info} />\n\n    case TransactionType.REMOVE_LIQUIDITY_V3:\n      return <RemoveLiquidityV3Summary info={info} />\n\n    case TransactionType.QUEUE:\n      return <QueueSummary info={info} />\n\n    case TransactionType.EXECUTE:\n      return <ExecuteSummary info={info} />\n\n    case TransactionType.SUBMIT_PROPOSAL:\n      return <SubmitProposalTransactionSummary />\n\n    case TransactionType.SEND:\n      return <SendSummary info={info} />\n  }\n}\n","import styled, { keyframes, useTheme } from 'styled-components'\n\nconst Wrapper = styled.div<{ size?: string }>`\n  height: 90px;\n  width: 90px;\n`\n\nconst dash = keyframes`\n  0% {\n    stroke-dashoffset: 1000;\n  }\n  100% {\n    stroke-dashoffset: 0;\n  }\n`\n\nconst dashCheck = keyframes`\n  0% {\n    stroke-dashoffset: -100;\n  }\n  100% {\n    stroke-dashoffset: 900;\n  }\n`\n\nconst Circle = styled.circle`\n  stroke-dasharray: 1000;\n  stroke-dashoffset: 0;\n  -webkit-animation: ${dash} 0.9s ease-in-out;\n  animation: ${dash} 0.9s ease-in-out;\n`\n\nconst PolyLine = styled.polyline`\n  stroke-dasharray: 1000;\n  stroke-dashoffset: 0;\n  stroke-dashoffset: -100;\n  -webkit-animation: ${dashCheck} 0.9s 0.35s ease-in-out forwards;\n  animation: ${dashCheck} 0.9s 0.35s ease-in-out forwards;\n`\n\nexport default function AnimatedConfirmation({ className }: { className?: string }) {\n  const theme = useTheme()\n\n  return (\n    <Wrapper className={className} data-testid=\"animated-confirmation\">\n      <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 130.2 130.2\">\n        <Circle\n          className=\"path circle\"\n          fill=\"none\"\n          stroke={theme.success}\n          strokeWidth=\"6\"\n          strokeMiterlimit=\"10\"\n          cx=\"65.1\"\n          cy=\"65.1\"\n          r=\"62.1\"\n        />\n        <PolyLine\n          className=\"path check\"\n          fill=\"none\"\n          stroke={theme.success}\n          strokeWidth=\"6\"\n          strokeLinecap=\"round\"\n          strokeMiterlimit=\"10\"\n          points=\"100.2,40.2 51.5,88.8 29.8,67.5 \"\n        />\n      </svg>\n    </Wrapper>\n  )\n}\n","import { ChainId, Currency } from '@uniswap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport Badge from 'components/Badge'\nimport { ChainLogo } from 'components/Logo/ChainLogo'\nimport { CHAIN_INFO, SupportedL2ChainId, useIsSupportedChainId } from 'constants/chains'\nimport { useCurrencyInfo } from 'hooks/Tokens'\nimport { Trans, t } from 'i18n'\nimport { ReactNode, useCallback, useState } from 'react'\nimport { AlertCircle, ArrowUpCircle, CheckCircle } from 'react-feather'\nimport { isConfirmedTx, useTransaction } from 'state/transactions/hooks'\nimport styled, { useTheme } from 'styled-components'\nimport { CloseIcon, CustomLightSpinner, ExternalLink, ThemedText } from 'theme/components'\nimport { isL2ChainId } from 'utils/chains'\nimport { ExplorerDataType, getExplorerLink } from 'utils/getExplorerLink'\nimport { useChainId } from 'wagmi'\n\nimport { TransactionStatus } from 'uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks'\nimport Circle from '../../assets/images/blue-loader.svg'\nimport { TransactionSummary } from '../AccountDetails/TransactionSummary'\nimport { ButtonLight, ButtonPrimary } from '../Button'\nimport { AutoColumn, ColumnCenter } from '../Column'\nimport Modal from '../Modal'\nimport Row, { RowBetween, RowFixed } from '../Row'\nimport AnimatedConfirmation from './AnimatedConfirmation'\n\nconst Wrapper = styled.div`\n  background-color: ${({ theme }) => theme.surface1};\n  border-radius: 20px;\n  outline: 1px solid ${({ theme }) => theme.surface3};\n  width: 100%;\n  padding: 16px;\n`\n\nconst BottomSection = styled(AutoColumn)`\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)<{ inline?: boolean }>`\n  padding: ${({ inline }) => (inline ? '20px 0' : '32px 0;')};\n`\n\nconst ConfirmationModalContentWrapper = styled(AutoColumn)`\n  padding-bottom: 12px;\n`\n\nfunction ConfirmationPendingContent({\n  onDismiss,\n  pendingText,\n  inline,\n}: {\n  onDismiss: () => void\n  pendingText: ReactNode\n  inline?: boolean // not in modal\n}) {\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"md\">\n        {!inline && (\n          <RowBetween>\n            <div />\n            <CloseIcon onClick={onDismiss} />\n          </RowBetween>\n        )}\n        <ConfirmedIcon inline={inline}>\n          <CustomLightSpinner src={Circle} alt=\"loader\" size={inline ? '40px' : '90px'} />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"md\" justify=\"center\">\n          <ThemedText.SubHeaderLarge color=\"neutral1\" textAlign=\"center\">\n            <Trans>Waiting for confirmation</Trans>\n          </ThemedText.SubHeaderLarge>\n          <ThemedText.SubHeader color=\"neutral1\" textAlign=\"center\">\n            {pendingText}\n          </ThemedText.SubHeader>\n          <ThemedText.SubHeaderSmall color=\"neutral2\" textAlign=\"center\" marginBottom=\"12px\">\n            <Trans>Confirm this transaction in your wallet</Trans>\n          </ThemedText.SubHeaderSmall>\n        </AutoColumn>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\nfunction TransactionSubmittedContent({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd,\n  inline,\n}: {\n  onDismiss: () => void\n  hash?: string\n  chainId: number\n  currencyToAdd?: Currency\n  inline?: boolean // not in modal\n}) {\n  const theme = useTheme()\n\n  const { connector } = useWeb3React()\n\n  const token = currencyToAdd?.wrapped\n  const logoURL = useCurrencyInfo(token)?.logoUrl ?? ''\n\n  const [success, setSuccess] = useState<boolean | undefined>()\n\n  const addToken = useCallback(() => {\n    if (!token?.symbol || !connector.watchAsset) return\n    connector\n      .watchAsset({\n        address: token.address,\n        symbol: token.symbol,\n        decimals: token.decimals,\n        image: logoURL,\n      })\n      .then(() => setSuccess(true))\n      .catch(() => setSuccess(false))\n  }, [connector, logoURL, token])\n\n  const explorerText = chainId === ChainId.MAINNET ? t`View on  Etherscan` : t`View on Block Explorer`\n\n  return (\n    <Wrapper>\n      <AutoColumn>\n        {!inline && (\n          <RowBetween>\n            <div />\n            <CloseIcon onClick={onDismiss} />\n          </RowBetween>\n        )}\n        <ConfirmedIcon inline={inline}>\n          <ArrowUpCircle strokeWidth={1} size={inline ? '40px' : '75px'} color={theme.accent1} />\n        </ConfirmedIcon>\n        <ConfirmationModalContentWrapper gap=\"md\" justify=\"center\">\n          <ThemedText.MediumHeader textAlign=\"center\">\n            <Trans>Transaction submitted</Trans>\n          </ThemedText.MediumHeader>\n          {currencyToAdd && connector.watchAsset && (\n            <ButtonLight mt=\"12px\" padding=\"6px 12px\" width=\"fit-content\" onClick={addToken}>\n              {!success ? (\n                <RowFixed>\n                  <Trans>Add {{ sym: currencyToAdd.symbol }}</Trans>\n                </RowFixed>\n              ) : (\n                <RowFixed>\n                  <Trans>Added {{ sym: currencyToAdd.symbol }} </Trans>\n                  <CheckCircle size=\"16px\" stroke={theme.success} style={{ marginLeft: '6px' }} />\n                </RowFixed>\n              )}\n            </ButtonLight>\n          )}\n          <ButtonPrimary onClick={onDismiss} style={{ margin: '20px 0 0 0' }} data-testid=\"dismiss-tx-confirmation\">\n            <ThemedText.HeadlineSmall color={theme.deprecated_accentTextLightPrimary}>\n              {inline ? <Trans>Return</Trans> : <Trans>Close</Trans>}\n            </ThemedText.HeadlineSmall>\n          </ButtonPrimary>\n          {chainId && hash && (\n            <ExternalLink href={getExplorerLink(chainId, hash, ExplorerDataType.TRANSACTION)}>\n              <ThemedText.Link color={theme.accent1}>{explorerText}</ThemedText.Link>\n            </ExternalLink>\n          )}\n        </ConfirmationModalContentWrapper>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport function ConfirmationModalContent({\n  title,\n  bottomContent,\n  onDismiss,\n  topContent,\n  headerContent,\n}: {\n  title: ReactNode\n  onDismiss: () => void\n  topContent: () => ReactNode\n  bottomContent?: () => ReactNode\n  headerContent?: () => ReactNode\n}) {\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"sm\">\n        <Row>\n          {headerContent?.()}\n          <Row justify=\"center\" marginLeft=\"24px\">\n            <ThemedText.SubHeader>{title}</ThemedText.SubHeader>\n          </Row>\n          <CloseIcon onClick={onDismiss} data-testid=\"confirmation-close-icon\" />\n        </Row>\n        {topContent()}\n      </AutoColumn>\n      {bottomContent && <BottomSection gap=\"16px\">{bottomContent()}</BottomSection>}\n    </Wrapper>\n  )\n}\n\nconst StyledL2Badge = styled(Badge)`\n  padding: 6px 8px;\n`\n\nfunction L2Content({\n  onDismiss,\n  chainId,\n  hash,\n  pendingText,\n  inline,\n}: {\n  onDismiss: () => void\n  hash?: string\n  chainId: SupportedL2ChainId\n  currencyToAdd?: Currency\n  pendingText: ReactNode\n  inline?: boolean // not in modal\n}) {\n  const theme = useTheme()\n\n  const transaction = useTransaction(hash)\n  const confirmed = transaction && isConfirmedTx(transaction)\n  const transactionSuccess = transaction?.status === TransactionStatus.Confirmed\n\n  // convert unix time difference to seconds\n  const secondsToConfirm =\n    confirmed && transaction.confirmedTime ? (transaction.confirmedTime - transaction.addedTime) / 1000 : undefined\n\n  const info = CHAIN_INFO[chainId]\n\n  return (\n    <Wrapper>\n      <AutoColumn>\n        {!inline && (\n          <RowBetween mb=\"16px\">\n            <StyledL2Badge>\n              <RowFixed gap=\"sm\">\n                <ChainLogo chainId={chainId} />\n                <ThemedText.SubHeaderSmall>{info.label}</ThemedText.SubHeaderSmall>\n              </RowFixed>\n            </StyledL2Badge>\n            <CloseIcon onClick={onDismiss} />\n          </RowBetween>\n        )}\n        <ConfirmedIcon inline={inline}>\n          {confirmed ? (\n            transactionSuccess ? (\n              // <CheckCircle strokeWidth={1} size={inline ? '40px' : '90px'} color={theme.success} />\n              <AnimatedConfirmation />\n            ) : (\n              <AlertCircle strokeWidth={1} size={inline ? '40px' : '90px'} color={theme.critical} />\n            )\n          ) : (\n            <CustomLightSpinner src={Circle} alt=\"loader\" size={inline ? '40px' : '90px'} />\n          )}\n        </ConfirmedIcon>\n        <AutoColumn gap=\"md\" justify=\"center\">\n          <ThemedText.SubHeaderLarge textAlign=\"center\">\n            {!hash ? (\n              <Trans>Confirm transaction in wallet</Trans>\n            ) : !confirmed ? (\n              <Trans>Transaction submitted</Trans>\n            ) : transactionSuccess ? (\n              <Trans>Success</Trans>\n            ) : (\n              <Trans>Error</Trans>\n            )}\n          </ThemedText.SubHeaderLarge>\n          <ThemedText.BodySecondary textAlign=\"center\">\n            {transaction ? <TransactionSummary info={transaction.info} /> : pendingText}\n          </ThemedText.BodySecondary>\n          {chainId && hash ? (\n            <ExternalLink href={getExplorerLink(chainId, hash, ExplorerDataType.TRANSACTION)}>\n              <ThemedText.SubHeaderSmall color={theme.accent1}>\n                <Trans>View on Explorer</Trans>\n              </ThemedText.SubHeaderSmall>\n            </ExternalLink>\n          ) : (\n            <div style={{ height: '17px' }} />\n          )}\n          <ThemedText.SubHeaderSmall color={theme.neutral3} marginTop=\"20px\">\n            {!secondsToConfirm ? (\n              <div style={{ height: '24px' }} />\n            ) : (\n              <div>\n                <Trans>Transaction completed in </Trans>\n                <span style={{ fontWeight: 535, marginLeft: '4px', color: theme.neutral1 }}>\n                  {secondsToConfirm} seconds 🎉\n                </span>\n              </div>\n            )}\n          </ThemedText.SubHeaderSmall>\n          <ButtonPrimary onClick={onDismiss} style={{ margin: '4px 0 0 0' }}>\n            {inline ? <Trans>Return</Trans> : <Trans>Close</Trans>}\n          </ButtonPrimary>\n        </AutoColumn>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\ninterface ConfirmationModalProps {\n  isOpen: boolean\n  onDismiss: () => void\n  hash?: string\n  reviewContent: () => ReactNode\n  attemptingTxn: boolean\n  pendingText: ReactNode\n  currencyToAdd?: Currency\n}\n\nexport default function TransactionConfirmationModal({\n  isOpen,\n  onDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  reviewContent,\n  currencyToAdd,\n}: ConfirmationModalProps) {\n  const chainId = useChainId()\n  const isSupportedChain = useIsSupportedChainId(chainId)\n\n  if (!chainId || !isSupportedChain) return null\n\n  // confirmation screen\n  return (\n    <Modal isOpen={isOpen} $scrollOverlay={true} onDismiss={onDismiss} maxHeight={90}>\n      {isL2ChainId(chainId) && (hash || attemptingTxn) ? (\n        <L2Content chainId={chainId} hash={hash} onDismiss={onDismiss} pendingText={pendingText} />\n      ) : attemptingTxn ? (\n        <ConfirmationPendingContent onDismiss={onDismiss} pendingText={pendingText} />\n      ) : hash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={hash}\n          onDismiss={onDismiss}\n          currencyToAdd={currencyToAdd}\n        />\n      ) : (\n        reviewContent()\n      )}\n    </Modal>\n  )\n}\n","import { LoadingRows as BaseLoadingRows } from 'components/Loader/styled'\nimport { Text } from 'rebass'\nimport styled from 'styled-components'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 20px;\n`\n\nexport const ClickableText = styled(Text)`\n  :hover {\n    cursor: pointer;\n  }\n  color: ${({ theme }) => theme.accent1};\n`\nexport const MaxButton = styled.button<{ width: string }>`\n  padding: 0.5rem 1rem;\n  background-color: ${({ theme }) => theme.accent2};\n  border: 1px solid ${({ theme }) => theme.accent2};\n  border-radius: 0.5rem;\n  font-size: 1rem;\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToSmall`\n    padding: 0.25rem 0.5rem;\n  `};\n  font-weight: 535;\n  cursor: pointer;\n  margin: 0.25rem;\n  overflow: hidden;\n  color: ${({ theme }) => theme.accent1};\n  :hover {\n    border: 1px solid ${({ theme }) => theme.accent1};\n  }\n  :focus {\n    border: 1px solid ${({ theme }) => theme.accent1};\n    outline: none;\n  }\n`\n\nexport const Dots = styled.span`\n  &::after {\n    display: inline-block;\n    animation: ellipsis 1.25s infinite;\n    content: '.';\n    width: 1em;\n    text-align: left;\n  }\n  @keyframes ellipsis {\n    0% {\n      content: '.';\n    }\n    33% {\n      content: '..';\n    }\n    66% {\n      content: '...';\n    }\n  }\n`\n\nexport const LoadingRows = styled(BaseLoadingRows)`\n  padding-top: 36px;\n  min-width: 75%;\n  max-width: 960px;\n  grid-column-gap: 0.5em;\n  grid-row-gap: 0.8em;\n  grid-template-columns: repeat(3, 1fr);\n  padding: 8px;\n\n  & > div:nth-child(4n + 1) {\n    grid-column: 1 / 3;\n  }\n  & > div:nth-child(4n) {\n    grid-column: 3 / 4;\n    margin-bottom: 2em;\n  }\n`\n","export enum VoteOption {\n  Against,\n  For,\n  Abstain,\n}\n"],"names":["formatAmount","amountRaw","decimals","sigFigs","Fraction","JSBI","toSignificant","FormattedCurrencyAmount","rawAmount","symbol","FormattedCurrencyAmountManaged","currencyId","currency","useCurrency","ClaimSummary","info","recipient","uniAmountRaw","ENSName","useENSName","name","Trans","SubmitProposalTransactionSummary","ApprovalSummary","BigNumber","token","useToken","tokenAddress","from","amount","eq","sym","VoteSummary","proposalKey","governorAddress","proposalId","reason","trim","length","decision","VoteOption","For","Abstain","Against","QueueSummary","ExecuteSummary","DelegateSummary","delegatee","WrapSummary","chainId","currencyAmountRaw","unwrapped","native","nativeOnChain","undefined","wrapped","DepositLiquidityStakingSummary","WithdrawLiquidityStakingSummary","MigrateLiquidityToV3Summary","baseCurrencyId","quoteCurrencyId","baseCurrency","quoteCurrency","baseSymbol","quoteSymbol","CreateV3PoolSummary","CollectFeesSummary","currencyId0","currencyId1","currency0","currency1","symbol0","symbol1","RemoveLiquidityV3Summary","expectedAmountBaseRaw","expectedAmountQuoteRaw","AddLiquidityV3PoolSummary","createPool","AddLiquidityV2PoolSummary","SendSummary","SwapSummary","tradeType","TradeType","EXACT_INPUT","inputCurrencyAmountRaw","inputCurrencyId","settledOutputCurrencyAmountRaw","expectedOutputCurrencyAmountRaw","outputCurrencyId","expectedInputCurrencyAmountRaw","outputCurrencyAmountRaw","TransactionSummary","type","TransactionType","ADD_LIQUIDITY_V3_POOL","ADD_LIQUIDITY_V2_POOL","CLAIM","DEPOSIT_LIQUIDITY_STAKING","WITHDRAW_LIQUIDITY_STAKING","SWAP","APPROVAL","VOTE","DELEGATE","WRAP","CREATE_V3_POOL","MIGRATE_LIQUIDITY_V3","COLLECT_FEES","REMOVE_LIQUIDITY_V3","QUEUE","EXECUTE","SUBMIT_PROPOSAL","SEND","Wrapper","styled","div","dash","keyframes","dashCheck","Circle","circle","PolyLine","polyline","AnimatedConfirmation","className","theme","useTheme","data-testid","svg","version","xmlns","viewBox","fill","stroke","success","strokeWidth","strokeMiterlimit","cx","cy","r","strokeLinecap","points","surface1","surface3","BottomSection","AutoColumn","ConfirmedIcon","ColumnCenter","inline","ConfirmationModalContentWrapper","ConfirmationPendingContent","onDismiss","pendingText","gap","RowBetween","CloseIcon","onClick","CustomLightSpinner","src","alt","size","justify","ThemedText","SubHeaderLarge","color","textAlign","SubHeader","SubHeaderSmall","marginBottom","TransactionSubmittedContent","hash","currencyToAdd","useCurrencyInfo","connector","useWeb3React","logoURL","logoUrl","setSuccess","useState","addToken","useCallback","watchAsset","address","image","then","catch","explorerText","ChainId","MAINNET","t","ArrowUpCircle","accent1","MediumHeader","ButtonLight","mt","padding","width","RowFixed","CheckCircle","style","marginLeft","ButtonPrimary","margin","HeadlineSmall","deprecated_accentTextLightPrimary","ExternalLink","href","getExplorerLink","ExplorerDataType","TRANSACTION","Link","ConfirmationModalContent","title","bottomContent","topContent","headerContent","Row","StyledL2Badge","Badge","L2Content","transaction","useTransaction","confirmed","isConfirmedTx","transactionSuccess","status","TransactionStatus","Confirmed","secondsToConfirm","confirmedTime","addedTime","CHAIN_INFO","mb","ChainLogo","label","AlertCircle","critical","BodySecondary","height","neutral3","marginTop","span","fontWeight","neutral1","TransactionConfirmationModal","isOpen","attemptingTxn","reviewContent","useChainId","isSupportedChain","useIsSupportedChainId","Modal","$scrollOverlay","maxHeight","isL2ChainId","ClickableText","Text","MaxButton","button","accent2","deprecated_mediaWidth","deprecated_upToSmall","Dots","LoadingRows","BaseLoadingRows"],"sourceRoot":""}